// Project Script Bundle
globalThis['unity.playground.js']=true;


// unity.playground.js
var __extends=(this&&this.__extends)||(function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||({__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b})||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}})();var __awaiter=(this&&this.__awaiter)||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator=(this&&this.__generator)||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),"throw":verb(1),"return":verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||(op[1]>t[0]&&op[1]<t[3]))){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var PROJECT;(function(PROJECT){var ColyseusGameServer=(function(_super){__extends(ColyseusGameServer,_super);function ColyseusGameServer(transform,scene,properties){var _this=_super.call(this,transform,scene,properties)||this;_this.projectName="Game Project";_this.autoJoinRoom=true;_this.playerUserName="Player";_this.defaultRoomName="default";_this.roomLogicModule="DefaultLogic";_this.maxClientsAllowed=8;_this.patchUpdateRateFps=20;_this.roomSimulateRateFps=60;_this.networkBufferingTime=0.15;_this.soloSession=false;_this.colyseusAvailable=false;_this.networkRoomConnected=false;_this.hostSessionName=null;_this.joinRoomId=null;_this.client=null;PROJECT.ColyseusGameServer.StaticInstance=_this;return _this}Object.defineProperty(ColyseusGameServer,"Instance",{get:function(){return PROJECT.ColyseusGameServer.StaticInstance},enumerable:false,configurable:true});ColyseusGameServer.prototype.isSoloSession=function(){return this.soloSession};ColyseusGameServer.prototype.isHostSession=function(){return(this.hostSessionName!=null&&this.hostSessionName!=="")};ColyseusGameServer.prototype.getColyseusClient=function(){return this.client};ColyseusGameServer.prototype.awake=function(){var _this=this;if(BABYLON.NetworkManager.IsAvailable()){this.colyseusAvailable=true;BABYLON.Tools.Log("Colyseus network library loaded")}else{this.colyseusAvailable=false;BABYLON.Tools.Warn("Colyseus network library not available")}try{var playerSoloParam=UNITY.WindowManager.GetUrlParameter("solo");if(playerSoloParam!=null&&playerSoloParam!==""&&playerSoloParam!=="*"){if(playerSoloParam.toLowerCase()==="true"){this.soloSession=true;this.colyseusAvailable=false;BABYLON.Tools.Warn("Colyseus solo network game play requested")}}}catch(e){console.error(e)}if(this.colyseusAvailable===true){try{var serverEndpointParam=UNITY.WindowManager.GetUrlParameter("endpoint");if(serverEndpointParam!=null&&serverEndpointParam!==""){var serverEndpoint=decodeURIComponent(serverEndpointParam);if(serverEndpoint!=null&&serverEndpoint!==""&&serverEndpoint!=="*"){UNITY.SceneManager.ServerEndPoint=serverEndpoint}}}catch(e0){console.error(e0)}try{var playerNameParam=UNITY.WindowManager.GetUrlParameter("player");if(playerNameParam!=null&&playerNameParam!==""&&playerNameParam!=="*"){this.playerUserName=decodeURIComponent(playerNameParam)}}catch(e1){console.error(e1)}try{var roomNameParam=UNITY.WindowManager.GetUrlParameter("room");if(roomNameParam!=null&&roomNameParam!==""&&roomNameParam!=="*"){this.defaultRoomName=decodeURIComponent(roomNameParam)}}catch(e2){console.error(e2)}try{var hostSessionParam=UNITY.WindowManager.GetUrlParameter("host");if(hostSessionParam!=null&&hostSessionParam!==""&&hostSessionParam!=="*"){this.hostSessionName=decodeURIComponent(hostSessionParam)}}catch(e3){console.error(e3)}try{var joinSessionParam=UNITY.WindowManager.GetUrlParameter("join");if(joinSessionParam!=null&&joinSessionParam!==""&&joinSessionParam!=="*"){this.joinRoomId=decodeURIComponent(joinSessionParam)}}catch(e4){console.error(e4)}BABYLON.NetworkManager.OnJoinRoomObservable.add(function(user){console.warn(user.name+" joined the "+_this.defaultRoomName.toLowerCase()+" room.")})}};ColyseusGameServer.prototype.update=function(){if(this.colyseusAvailable===true&&this.networkRoomConnected===false&&this.autoJoinRoom===true&&this.isReady()){this.autoJoinRoom=false;this.joinRoom()}};ColyseusGameServer.prototype.destroy=function(){this.autoJoinRoom=false;this.colyseusAvailable=false;this.networkRoomConnected=true;this.defaultRoomName=null;this.playerUserName=null;this.client=null};ColyseusGameServer.prototype.joinRoom=function(){return __awaiter(this,void 0,void 0,function(){var websocketUrl,room,sceneFile,e_1;return __generator(this,function(_a){switch(_a.label){case 0:if(this.patchUpdateRateFps>PROJECT.ColyseusGameServer.MAX_FRAME_RATE)this.patchUpdateRateFps=PROJECT.ColyseusGameServer.MAX_FRAME_RATE;if(this.roomSimulateRateFps>PROJECT.ColyseusGameServer.MAX_FRAME_RATE)this.roomSimulateRateFps=PROJECT.ColyseusGameServer.MAX_FRAME_RATE;if(!(this.colyseusAvailable===true))return[3,8];_a.label=1;case 1:_a.trys.push([1,6,7,8]);websocketUrl=(UNITY.SceneManager.ServerEndPoint.toLowerCase().startsWith("http"))?("ws"+UNITY.SceneManager.ServerEndPoint.substring(4)):UNITY.SceneManager.ServerEndPoint;if(UNITY.SceneManager.ServerEndPoint.endsWith("/"))UNITY.SceneManager.ServerEndPoint=UNITY.SceneManager.ServerEndPoint.substring(0,(UNITY.SceneManager.ServerEndPoint.length-1));if(this.projectName==null||this.projectName==="")this.projectName="Game Project";console.log(">>> Server Endpoint: "+UNITY.SceneManager.ServerEndPoint);console.log(">>> Web Socket Url: "+websocketUrl);console.log(">>> Max Clients: "+this.maxClientsAllowed);console.log(">>> Room Name: "+this.defaultRoomName);console.log(">>> User Name: "+this.playerUserName);console.log(">>> Host Desc: "+this.hostSessionName);console.log(">>> Join Room: "+this.joinRoomId);room=null;if(this.client==null)this.client=new Colyseus.Client(websocketUrl);if(!(this.hostSessionName!=null&&this.hostSessionName!==""))return[3,3];sceneFile=UNITY.SceneManager.GetSceneFile(this.scene);return[4,this.client.create(this.defaultRoomName,{userName:this.playerUserName,roomLogic:this.roomLogicModule,maxClients:this.maxClientsAllowed,interpolationBuffer:this.networkBufferingTime,patchUpdateRateMs:(1000/this.patchUpdateRateFps),roomSimulationIntervalMs:(1000/this.roomSimulateRateFps),userDatagramProtocol:false,compressDataPackets:false,project:this.projectName,type:"client",desc:this.hostSessionName,map:sceneFile,aux:"*"})];case 2:room=_a.sent();return[3,5];case 3:if(!(this.joinRoomId!=null&&this.joinRoomId!==""))return[3,5];return[4,this.client.joinById(this.joinRoomId,{userName:this.playerUserName})];case 4:room=_a.sent();_a.label=5;case 5:if(room!=null){BABYLON.NetworkManager.AttachDefaultRoom(this.scene,room)}else{console.error("Failed to join room: "+this.transform.name)}return[3,8];case 6:e_1=_a.sent();console.error("Failed to connect: ",e_1);return[3,8];case 7:this.networkRoomConnected=true;return[7];case 8:return[2]}})})};ColyseusGameServer.MAX_FRAME_RATE=200;ColyseusGameServer.StaticInstance=null;return ColyseusGameServer}(UNITY.ScriptComponent));PROJECT.ColyseusGameServer=ColyseusGameServer})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var ColyseusNetworkAvatar=(function(_super){__extends(ColyseusNetworkAvatar,_super);function ColyseusNetworkAvatar(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.controlMode=0;_this.defaultAvatar=null;_this.maleAnimationRig=null;_this.femaleAnimationRig=null;_this.castRealtimeShadow=true;_this.disposeOfMannequin=true;_this.pixelOffsetX=0;_this.pixelOffsetY=0;_this.playerJoined=false;_this.preloadLocation=null;_this.ambientMaterial=new BABYLON.Color3(1.0,1.0,1.0);_this.avatarArmature=null;_this.avatarSkeleton=null;_this.avatarHandness="Left";_this.avatarGender="Male";_this.avatarLabel="Default Player";_this.avatarLoaded=false;_this.animator=null;_this.avatarReady=false;_this.manageLabelTexture=true;_this.textureResolution=512;_this.maxLabelWidth=960;_this.minLabelWidth=320;_this.labelOffsetX=0;_this.labelOffsetY=2.0;_this.labelHeight=64;_this.labelColor=new BABYLON.Color3(0.0,1.0,0.0);_this.labelAlpha=0.85;_this.rectColor=new BABYLON.Color3(0.0,0.0,0.0);_this.rectAlpha=0.65;_this.fontFamily="Arial";_this.fontStyle="Bold";_this.fontSize=36;_this.fillRect=true;return _this}ColyseusNetworkAvatar.prototype.awake=function(){this.animator=this.getComponent("UNITY.AnimationState");if(this.animator==null)BABYLON.Tools.Warn("Failed to locate aniation state component for: "+this.transform.name);var defaultAvatarInfo=this.getProperty("defaultAvatar");if(defaultAvatarInfo!=null)this.defaultAvatar=(defaultAvatarInfo.name+".glb");var maleAnimationInfo=this.getProperty("maleAnimationRig");if(maleAnimationInfo!=null)this.maleAnimationRig=(maleAnimationInfo.name+".glb");var femaleAnimationInfo=this.getProperty("femaleAnimationRig");if(femaleAnimationInfo!=null)this.femaleAnimationRig=(femaleAnimationInfo.name+".glb");if(this.isSafariBrowser()===true)this.pixelOffsetY=0;else this.pixelOffsetY=2};ColyseusNetworkAvatar.prototype.ready=function(){if(this.controlMode===0){this.setupLocalPlayerAvatar()}this.avatarReady=true};ColyseusNetworkAvatar.prototype.update=function(){if(this.playerJoined===false&&this.avatarReady===true){if(BABYLON.NetworkManager.HasJoinedRoom()){this.playerJoined=true;if(this.controlMode===0){if(this.manageLabelTexture===true){this.avatarLabel=BABYLON.NetworkManager.GetCurrentUser().name;this.createAvatarLabel(this.avatarLabel)}}else if(this.controlMode===1){this.setupRemotePlayerAvatar();if(this.manageLabelTexture===true){this.createAvatarLabel(this.avatarLabel)}}}}};ColyseusNetworkAvatar.prototype.destroy=function(){this.animator=null;this.avatarLabel=null;this.avatarGender=null;this.avatarHandness=null;this.avatarArmature=null;this.avatarSkeleton=null;this.defaultAvatar=null;this.preloadLocation=null;this.maleAnimationRig=null;this.femaleAnimationRig=null};ColyseusNetworkAvatar.prototype.isSafariBrowser=function(){var result=false;if(navigator!=null&&navigator.userAgent!=null){result=navigator.vendor.match(/apple/i)&&!navigator.userAgent.match(/crios/i)&&!navigator.userAgent.match(/fxios/i)&&!navigator.userAgent.match(/Opera|OPT\//)}return result};ColyseusNetworkAvatar.prototype.createAvatarLabel=function(name){if(name!=null&&name!==""){var plane=BABYLON.MeshBuilder.CreatePlane("TexturePlane",{width:1,height:1},this.scene);var planeMaterial=new BABYLON.StandardMaterial((this.transform.name+".PlaneMaterial"),this.scene);var opacityTexture=new BABYLON.DynamicTexture("PlayerTexture",{width:this.textureResolution,height:this.textureResolution},this.scene);var opacityCtx=opacityTexture.getContext();var fontString=this.getResizedFontString(name,this.maxLabelWidth,this.fontSize,this.fontFamily,this.fontStyle);opacityCtx.font=fontString;var fontWidth=opacityCtx.measureText(name).width;var fontPadding=PROJECT.ColyseusNetworkAvatar.FONT_PADDING;var rectWidth=(fontWidth+fontPadding);var rectHeight=this.labelHeight;if(rectWidth<this.minLabelWidth)rectWidth=this.minLabelWidth;if(rectWidth>this.maxLabelWidth)rectWidth=this.maxLabelWidth;if(this.fillRect===true){opacityCtx.fillStyle="rgba(0, 0, 0, ".concat(this.rectAlpha.toString(),")");this.createRoundedRect((this.textureResolution*0.5)-(rectWidth*0.5),(this.textureResolution*0.5)-(rectHeight*0.5),rectWidth,rectHeight,(rectHeight*0.5),opacityCtx);opacityCtx.fill()}opacityCtx.textAlign="center";opacityCtx.textBaseline="middle";opacityCtx.fillStyle="rgba(0, 0, 0, ".concat(this.labelAlpha.toString(),")");opacityCtx.fillText(name,(this.textureResolution*0.5)+this.pixelOffsetX,(this.textureResolution*0.5)+this.pixelOffsetY);opacityTexture.update(true);var colorTexture=new BABYLON.DynamicTexture("PlayerTextureColor",{width:this.textureResolution,height:this.textureResolution},this.scene);var colorCtx=colorTexture.getContext();colorCtx.fillStyle=this.rectColor.toHexString();colorCtx.fillRect(0,0,this.textureResolution,this.textureResolution);colorCtx.font=fontString;colorCtx.textAlign="center";colorCtx.textBaseline="middle";colorCtx.fillStyle=this.labelColor.toHexString();colorCtx.fillText(name,(this.textureResolution*0.5)+this.pixelOffsetX,(this.textureResolution*0.5)+this.pixelOffsetY);colorTexture.update(true);planeMaterial.disableLighting=true;planeMaterial.opacityTexture=opacityTexture;planeMaterial.diffuseTexture=colorTexture;planeMaterial.emissiveTexture=colorTexture;plane.material=planeMaterial;plane.billboardMode=BABYLON.Mesh.BILLBOARDMODE_ALL;plane.position.x=this.labelOffsetX;plane.position.y=(this.labelOffsetY+PROJECT.ColyseusNetworkAvatar.HEIGHT_PADDING);plane.parent=this.transform.parent;plane.renderingGroupId=UNITY.Utilities.DefaultRenderGroup()}};ColyseusNetworkAvatar.prototype.createRoundedRect=function(x,y,w,h,r,ctx){if(w<2*r)r=w/2;if(h<2*r)r=h/2;ctx.beginPath();ctx.moveTo(x+r,y);ctx.arcTo(x+w,y,x+w,y+h,r);ctx.arcTo(x+w,y+h,x,y+h,r);ctx.arcTo(x,y+h,x,y,r);ctx.arcTo(x,y,x+w,y,r);ctx.closePath()};ColyseusNetworkAvatar.prototype.getResizedFontString=function(text,maxWidth,startingFontSize,fontFamily,fontStyle){if(fontFamily===void 0){fontFamily="Arial"}if(fontStyle===void 0){fontStyle=""}var tempCanvas=document.createElement('canvas');var measureCtx=tempCanvas.getContext('2d');var getFontString=function(size){return"".concat(fontStyle).concat((fontStyle==="")?"":" ").concat(size,"px ").concat(fontFamily)};var currentSize=startingFontSize;measureCtx.font=getFontString(currentSize);var currentWidth=measureCtx.measureText(text).width;if(currentWidth>maxWidth){var step=1;while(currentWidth>maxWidth){var newSize=currentSize-step;measureCtx.font=getFontString(newSize);var newWidth=measureCtx.measureText(text).width;if(newWidth<maxWidth&&step===1){step=0.1;newSize+=1}else{currentWidth=newWidth}currentSize=newSize}}return getFontString(currentSize)};ColyseusNetworkAvatar.prototype.setupLocalPlayerAvatar=function(){try{var playerAvatarParam=UNITY.WindowManager.GetUrlParameter("avatar");if(playerAvatarParam!=null&&playerAvatarParam!==""&&playerAvatarParam!=="*"){this.defaultAvatar=decodeURIComponent(playerAvatarParam)}}catch(e1){console.error(e1)}try{var playerGenderParam=UNITY.WindowManager.GetUrlParameter("gender");if(playerGenderParam!=null&&playerGenderParam!==""&&playerGenderParam!=="*"){this.avatarGender=decodeURIComponent(playerGenderParam)}}catch(e2){console.error(e2)}try{var playerHandnessParam=UNITY.WindowManager.GetUrlParameter("hand");if(playerHandnessParam!=null&&playerHandnessParam!==""&&playerHandnessParam!=="*"){this.avatarHandness=decodeURIComponent(playerHandnessParam)}}catch(e3){console.error(e3)}try{var playerHandnessParam=UNITY.WindowManager.GetUrlParameter("hand");if(playerHandnessParam!=null&&playerHandnessParam!==""&&playerHandnessParam!=="*"){this.avatarHandness=decodeURIComponent(playerHandnessParam)}}catch(e3){console.error(e3)}var klass="PROJECT.ColyseusNetworkEntity";var colyseus=UNITY.SceneManager.FindScriptComponent(this.transform,klass);if(colyseus==null){if(this.transform.parent!=null){colyseus=UNITY.SceneManager.FindScriptComponent(this.transform.parent,klass);if(colyseus==null){if(this.transform.parent.parent!=null){colyseus=UNITY.SceneManager.FindScriptComponent(this.transform.parent.parent,klass);if(colyseus==null){if(this.transform.parent.parent.parent!=null){colyseus=UNITY.SceneManager.FindScriptComponent(this.transform.parent.parent.parent,klass)}}}}}}if(colyseus!=null){if(colyseus.runtimeAttributes==null)colyseus.runtimeAttributes=[];colyseus.runtimeAttributes.push({key:"playerAvatar",value:this.defaultAvatar});colyseus.runtimeAttributes.push({key:"playerGender",value:this.avatarGender});colyseus.runtimeAttributes.push({key:"playerHand",value:this.avatarHandness})}if(this.defaultAvatar!=null&&this.defaultAvatar!==""){if(UNITY.SceneManager.HasSceneBeenPreLoaded(this.scene)){this.loadRuntimePlayerAvatar(this.defaultAvatar)}else{this.preloadLocation=this.defaultAvatar}}else{BABYLON.Tools.Warn("Invalid avatar location specified for: "+this.transform.name)}};ColyseusNetworkAvatar.prototype.setupRemotePlayerAvatar=function(){var remoteEntity=this.transform.networkEntity;if(remoteEntity==null){if(this.transform.parent!=null){remoteEntity=this.transform.parent.networkEntity;if(remoteEntity==null){if(this.transform.parent.parent!=null){remoteEntity=this.transform.parent.parent.networkEntity;if(remoteEntity==null){if(this.transform.parent.parent.parent!=null){remoteEntity=this.transform.parent.parent.parent.networkEntity}}}}}}if(remoteEntity!=null&&remoteEntity.transformNode!=null&&remoteEntity.transformNodeType!=null&&remoteEntity.transformNodeType===2){var playerAvatar=UNITY.EntityController.QueryNetworkAttribute(remoteEntity.transformNode,"playerAvatar");if(playerAvatar!=null&&playerAvatar!==""){this.defaultAvatar=playerAvatar}var playerGender=UNITY.EntityController.QueryNetworkAttribute(remoteEntity.transformNode,"playerGender");if(playerGender!=null&&playerGender!==""){this.avatarGender=playerGender}var playerHand=UNITY.EntityController.QueryNetworkAttribute(remoteEntity.transformNode,"playerHand");if(playerHand!=null&&playerHand!==""){this.avatarHandness=playerHand}var ownerName=UNITY.EntityController.QueryNetworkAttribute(remoteEntity.transformNode,"ownerName");if(ownerName!=null&&ownerName!==""){this.avatarLabel=ownerName}}if(this.defaultAvatar!=null&&this.defaultAvatar!==""){this.loadRuntimePlayerAvatar(this.defaultAvatar)}else{BABYLON.Tools.Warn("Invalid avatar location specified for: "+this.transform.name)}};ColyseusNetworkAvatar.prototype.configurePlayerAvatarRig=function(root){var _this=this;if(root!=null){var armatures=root.getChildren(function(node){return(node.name==="Armature")},false);this.avatarLoaded=true;this.avatarArmature=(armatures!=null&&armatures.length>0)?armatures[0]:null;var shadowList_1=null;var freezeList=null;var meshes=root.getChildMeshes(false);if(meshes!=null&&meshes.length>0){meshes.forEach(function(mesh){mesh.renderingGroupId=UNITY.Utilities.DefaultRenderGroup()})}var skins=root.getChildMeshes(false,function(node){return(node.skeleton!=null)});if(skins!=null&&skins.length>0){skins.forEach(function(skin){if(_this.avatarSkeleton==null&&skin.skeleton!=null){_this.avatarSkeleton=skin.skeleton}if(_this.castRealtimeShadow===true){if(shadowList_1==null)shadowList_1=[];shadowList_1.push(skin)}skin.isPickable=true;skin.useVertexColors=false;skin.cullingStrategy=BABYLON.AbstractMesh.CULLINGSTRATEGY_STANDARD;skin.alwaysSelectAsActiveMesh=true})}if(shadowList_1!=null&&shadowList_1.length>0&&this.scene.lights!=null&&this.scene.lights.length>0){this.scene.lights.forEach(function(light){var shadowgenerator=light.getShadowGenerator();if(shadowgenerator!=null&&light.metadata!=null&&light.metadata.unity!=null&&light.metadata.unity.autorender===true){var shadowmap_1=shadowgenerator.getShadowMap();if(shadowmap_1!=null){if(shadowmap_1.renderList==null)shadowmap_1.renderList=[];shadowList_1.forEach(function(mesh){shadowmap_1.renderList.push(mesh)})}}})}if(freezeList!=null&&freezeList.length>0){freezeList.forEach(function(mesh){mesh.freezeWorldMatrix()})}if(this.avatarSkeleton!=null){var animationRig=(this.avatarGender!=null&&this.avatarGender.toLowerCase()==="female")?this.femaleAnimationRig:this.maleAnimationRig;if(animationRig!=null&&animationRig!==""){var animationAsset=UNITY.SceneManager.GetAssetContainer(this.scene,animationRig);if(animationAsset!=null&&animationAsset.animationGroups!=null){var cgroups_1=null;var xclips_1=(this.animator!=null)?this.animator.getDefaultClips():null;animationAsset.animationGroups.forEach(function(agroup,index){try{agroup.stop()}catch(_a){}var newname=(_this.transform.name+"."+agroup.name);var cgroup=agroup.clone(newname,null,false);if(cgroup!=null){cgroup.loopAnimation=true;UNITY.Utilities.RetargetAnimationGroupSkeleton(cgroup,_this.avatarSkeleton,_this.avatarArmature);if(_this.animator!=null&&xclips_1!=null){var xclip=_this.animator.fixAnimationGroup(cgroup);if(xclip!=null){if(cgroups_1==null)cgroups_1=[];cgroups_1.push(cgroup)}else{BABYLON.Tools.Warn("Failed to locate animation group in default clips: "+cgroup.name)}}}else{BABYLON.Tools.Warn("Failed to clone animation group: "+agroup.name)}});if(this.animator!=null&&cgroups_1!=null&&cgroups_1.length>0){this.animator.setAnimationGroups(cgroups_1)}}}}if(this.avatarLoaded===true&&this.disposeOfMannequin===true){var children=this.transform.getChildren(null,false);children.forEach(function(child){if(child!=null){if(child instanceof BABYLON.AbstractMesh){try{if(child.skeleton!=null){child.skeleton.dispose();child.skeleton=null}}catch(e3){console.error(e3)}}}});var childrenx=this.transform.getChildren(null,true);childrenx.forEach(function(childx){if(childx!=null){try{childx.dispose()}catch(e4){console.error(e4)}}})}}};ColyseusNetworkAvatar.prototype.loadRuntimePlayerAvatar=function(url){var _this=this;if(url!=null&&url!==""){var sceneRootUrl=UNITY.SceneManager.GetRootUrl(this.scene);var importUrl=url;var rooturl=sceneRootUrl;var filename="";rooturl=sceneRootUrl;filename=importUrl;if(importUrl.indexOf("://")>=0){rooturl=importUrl.substring(0,importUrl.lastIndexOf('/'))+"/";filename=importUrl.substring(importUrl.lastIndexOf('/')+1)}var assetsManager=new BABYLON.AssetsManager(this.scene);var importTask=assetsManager.addMeshTask((this.transform.name+".MeshTask"),null,rooturl,filename);importTask.onSuccess=function(task){if(task.loadedMeshes!=null){task.loadedMeshes.forEach(function(mesh){if(mesh.material instanceof BABYLON.PBRMaterial){mesh.material.ambientColor=_this.ambientMaterial}});var rootAvatarMesh=task.loadedMeshes[0];if(rootAvatarMesh!=null){rootAvatarMesh.parent=_this.transform.parent;rootAvatarMesh.name="BlenderAvatar";var meshTaskKey=task.sceneFilename.toString().toLowerCase();UNITY.SceneManager.RegisterImportMeshes(_this.scene,meshTaskKey,task.loadedMeshes);_this.configurePlayerAvatarRig(rootAvatarMesh)}}};importTask.onError=function(task,message,exception){console.error(message,exception)};assetsManager.load()}};ColyseusNetworkAvatar.prototype.addPreloaderTasks=function(assetsManager){var _this=this;if(this.preloadLocation!=null&&this.preloadLocation!==""){var sceneRootUrl=UNITY.SceneManager.GetRootUrl(this.scene);var importUrl=this.preloadLocation;var rooturl=sceneRootUrl;var filename="";rooturl=sceneRootUrl;filename=importUrl;if(importUrl.indexOf("://")>=0){rooturl=importUrl.substring(0,importUrl.lastIndexOf('/'))+"/";filename=importUrl.substring(importUrl.lastIndexOf('/')+1)}var importTask=assetsManager.addMeshTask((this.transform.name+".MeshTask"),null,rooturl,filename);importTask.onSuccess=function(task){if(task.loadedMeshes!=null){task.loadedMeshes.forEach(function(mesh){if(mesh.material instanceof BABYLON.PBRMaterial){mesh.material.ambientColor=_this.ambientMaterial}});var rootAvatarMesh=task.loadedMeshes[0];if(rootAvatarMesh!=null){rootAvatarMesh.parent=_this.transform.parent;rootAvatarMesh.name="BlenderAvatar";var meshTaskKey=task.sceneFilename.toString().toLowerCase();UNITY.SceneManager.RegisterImportMeshes(_this.scene,meshTaskKey,task.loadedMeshes);_this.configurePlayerAvatarRig(rootAvatarMesh)}}};importTask.onError=function(task,message,exception){console.error(message,exception)}}};ColyseusNetworkAvatar.FONT_PADDING=36;ColyseusNetworkAvatar.HEIGHT_PADDING=0.1;return ColyseusNetworkAvatar}(UNITY.ScriptComponent));PROJECT.ColyseusNetworkAvatar=ColyseusNetworkAvatar})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var ColyseusNetworkEntity=(function(_super){__extends(ColyseusNetworkEntity,_super);function ColyseusNetworkEntity(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.autoCreate=true;_this.remotePrefab=null;_this.assetContainer=null;_this.movementEpsilon=0.00001;_this.movementMethod=BABYLON.EntityMovementType.ClientAuthority;_this.interpolationMode=BABYLON.EntityInterpolation.Default;_this.interpolationHandler=null;_this.syncTransformNode=true;_this.runtimeAttributes=null;_this.creationAttributes=null;_this.bufferedAttributes=null;_this.networkEntityCreated=false;return _this}ColyseusNetworkEntity.prototype.update=function(){if(this.networkEntityCreated===false&&this.autoCreate===true&&this.isReady()){if(BABYLON.NetworkManager.HasJoinedRoom()){this.autoCreate=false;this.createEntity()}}};ColyseusNetworkEntity.prototype.destroy=function(){this.autoCreate=false;this.movementMethod=0;this.remotePrefab=null;this.assetContainer=null;this.interpolationMode=0;this.interpolationHandler=null;this.creationAttributes=null;this.runtimeAttributes=null;this.syncTransformNode=false;this.networkEntityCreated=true;var entityId=UNITY.EntityController.GetNetworkEntityId(this.transform);if(entityId!=null&&entityId!=="")BABYLON.NetworkManager.RemoveNetworkEntity(entityId)};ColyseusNetworkEntity.prototype.createEntity=function(){var attributesToCreate={};if(this.creationAttributes!=null&&this.creationAttributes.length>0){this.creationAttributes.forEach(function(creationAttribute){attributesToCreate[creationAttribute.key]=creationAttribute.value})}if(this.runtimeAttributes!=null&&this.runtimeAttributes.length>0){this.runtimeAttributes.forEach(function(runtimeAttribute){attributesToCreate[runtimeAttribute.key]=runtimeAttribute.value})}var customHandler=(this.interpolationMode===BABYLON.EntityInterpolation.Custom)?this.interpolationHandler:"";BABYLON.NetworkManager.CreateNetworkEntity(this.transform,this.remotePrefab,this.assetContainer,this.movementEpsilon,this.movementMethod,this.interpolationMode,this.syncTransformNode,customHandler,this.bufferedAttributes,attributesToCreate);this.networkEntityCreated=true};return ColyseusNetworkEntity}(UNITY.ScriptComponent));PROJECT.ColyseusNetworkEntity=ColyseusNetworkEntity})(PROJECT||(PROJECT={}));var __assign=(this&&this.__assign)||function(){__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign.apply(this,arguments)};var BABYLON;(function(BABYLON){var RemoteFunctionCallTarget;(function(RemoteFunctionCallTarget){RemoteFunctionCallTarget[RemoteFunctionCallTarget["All"]=0]="All";RemoteFunctionCallTarget[RemoteFunctionCallTarget["Others"]=1]="Others"})(RemoteFunctionCallTarget=BABYLON.RemoteFunctionCallTarget||(BABYLON.RemoteFunctionCallTarget={}));var NetworkEntityType;(function(NetworkEntityType){NetworkEntityType[NetworkEntityType["None"]=0]="None";NetworkEntityType[NetworkEntityType["Local"]=1]="Local";NetworkEntityType[NetworkEntityType["Remote"]=2]="Remote"})(NetworkEntityType=BABYLON.NetworkEntityType||(BABYLON.NetworkEntityType={}));var EntityMovementType;(function(EntityMovementType){EntityMovementType[EntityMovementType["ClientAuthority"]=0]="ClientAuthority";EntityMovementType[EntityMovementType["ServerAuthority"]=1]="ServerAuthority"})(EntityMovementType=BABYLON.EntityMovementType||(BABYLON.EntityMovementType={}));var EntityInterpolation;(function(EntityInterpolation){EntityInterpolation[EntityInterpolation["Default"]=0]="Default";EntityInterpolation[EntityInterpolation["Hermite"]=1]="Hermite";EntityInterpolation[EntityInterpolation["Custom"]=2]="Custom"})(EntityInterpolation=BABYLON.EntityInterpolation||(BABYLON.EntityInterpolation={}));var EntityAttribute=(function(){function EntityAttribute(){}return EntityAttribute}());BABYLON.EntityAttribute=EntityAttribute;var NetworkManager=(function(){function NetworkManager(){}NetworkManager.RegisterCustomInterpolationHandler=function(name,handler){BABYLON.NetworkManager.CustomHandlerMap.set(name,handler)};NetworkManager.IsAvailable=function(){return(window.Colyseus!==undefined&&window.Colyseus.Client!==undefined)};NetworkManager.IsRoomAttached=function(){return(BABYLON.NetworkManager.SceneReference!=null&&BABYLON.NetworkManager.DefaultRoom!=null)};NetworkManager.HasJoinedRoom=function(){return(BABYLON.NetworkManager.SceneReference!=null&&BABYLON.NetworkManager.DefaultRoom!=null&&BABYLON.NetworkManager.UserReference!=null)};NetworkManager.GetCurrentUser=function(){return BABYLON.NetworkManager.UserReference};NetworkManager.GetDefaultRoom=function(){return BABYLON.NetworkManager.DefaultRoom};NetworkManager.GetNetworkTime=function(){return BABYLON.NetworkManager.NetworkServerTime};NetworkManager.IsLocalNetworkEntity=function(entity){return(BABYLON.NetworkManager.GetNetworkEntityType(entity)===BABYLON.NetworkEntityType.Local)};NetworkManager.IsRemoteNetworkEntity=function(entity){return(BABYLON.NetworkManager.GetNetworkEntityType(entity)===BABYLON.NetworkEntityType.Remote)};NetworkManager.GetNetworkEntityType=function(entity){var result=0;var aentity=entity;if(aentity.transformNode!=null&&aentity.transformNodeType!=null){result=aentity.transformNodeType}return result};NetworkManager.AttachDefaultRoom=function(scene,room){BABYLON.NetworkManager.DetachDefaultRoom();if(scene!=null&&room!=null){BABYLON.NetworkManager.DefaultRoom=room;BABYLON.NetworkManager.SceneReference=scene;if(room.state!=null&&room.state.entities!=null){room.state.entities.onAdd(function(e,k){BABYLON.NetworkManager.AddNetworkEntityHandler(e,k)});room.state.entities.onRemove(function(e,k){BABYLON.NetworkManager.RemoveNetworkEntityHandler(e,k)})}room.onStateChange.once(function(state){BABYLON.NetworkManager.OnDispatchChatQueueMessages(state)});room.onStateChange(function(state){BABYLON.NetworkManager.OnDispatchChatQueueMessages(state)});room.onMessage("onConnect",function(info){BABYLON.NetworkManager.OnConnectObservable.notifyObservers(info.user)});room.onMessage("onDisconnect",function(info){BABYLON.NetworkManager.OnDisconnectObservable.notifyObservers(info.user)});room.onMessage("onJoin",function(info){BABYLON.NetworkManager.JoinDefaultRoomHandler(info);BABYLON.NetworkManager.OnJoinRoomObservable.notifyObservers(info.user)});room.onMessage("onRFC",function(message){BABYLON.NetworkManager.OnRemoteProcedureCallObservable.notifyObservers(message)});room.onLeave(function(code){BABYLON.NetworkManager.OnLeaveRoomObservable.notifyObservers(code)});room.onError(function(code,message){BABYLON.NetworkManager.OnErrorMessageObservable.notifyObservers({code:code,message:message})});scene.onBeforeRenderObservable.add(BABYLON.NetworkManager.OnSceneBeforeRenderUpdate)}};NetworkManager.DetachDefaultRoom=function(){try{try{if(BABYLON.NetworkManager.RootNode!=null){BABYLON.NetworkManager.RootNode.dispose()}}catch(e0){console.error(e0)}try{if(BABYLON.NetworkManager.DefaultRoom!=null){BABYLON.NetworkManager.DefaultRoom.removeAllListeners()}}catch(e1){console.error(e1)}try{if(BABYLON.NetworkManager.NetworkEntityQueue!=null){BABYLON.NetworkManager.NetworkEntityQueue.clear()}}catch(e2){console.error(e2)}try{if(BABYLON.NetworkManager.SceneReference!=null){BABYLON.NetworkManager.SceneReference.onBeforeRenderObservable.removeCallback(BABYLON.NetworkManager.OnSceneBeforeRenderUpdate)}}catch(e6){console.error(e6)}}catch(e9){console.error(e9)}finally{BABYLON.NetworkManager.RootNode=null;BABYLON.NetworkManager.DefaultRoom=null;BABYLON.NetworkManager.UserReference=null;BABYLON.NetworkManager.SceneReference=null;BABYLON.NetworkManager.NetworkEntityQueue=null;BABYLON.NetworkManager.NetworkServerTime=0}};NetworkManager.GetNetworkUser=function(id){var result=null;if(BABYLON.NetworkManager.HasJoinedRoom()){if(BABYLON.NetworkManager.DefaultRoom.state!=null&&BABYLON.NetworkManager.DefaultRoom.state.users!=null){result=BABYLON.NetworkManager.DefaultRoom.state.users.get(id)}}else{BABYLON.Tools.Warn("Network manager has not joined the default universal game room.")}return result};NetworkManager.GetNetworkEntity=function(id){var result=null;if(BABYLON.NetworkManager.HasJoinedRoom()){if(BABYLON.NetworkManager.DefaultRoom.state!=null&&BABYLON.NetworkManager.DefaultRoom.state.entities!=null){result=BABYLON.NetworkManager.DefaultRoom.state.entities.get(id)}}else{BABYLON.Tools.Warn("Network manager has not joined the default universal game room.")}return result};NetworkManager.CreateNetworkEntity=function(localTransform,remotePrefab,assetContainer,movementEpsilon,movementType,interpolationMode,autoSyncTransform,customHandlerName,bufferedAttributes,createAttributes){if(remotePrefab===void 0){remotePrefab=null}if(assetContainer===void 0){assetContainer=null}if(movementEpsilon===void 0){movementEpsilon=0.00001}if(movementType===void 0){movementType=BABYLON.EntityMovementType.ClientAuthority}if(interpolationMode===void 0){interpolationMode=BABYLON.EntityInterpolation.Default}if(autoSyncTransform===void 0){autoSyncTransform=true}if(customHandlerName===void 0){customHandlerName=null}if(createAttributes===void 0){createAttributes=null}if(BABYLON.NetworkManager.HasJoinedRoom()){BABYLON.RoomController.CreateNetworkEntity(BABYLON.NetworkManager.DefaultRoom,BABYLON.NetworkManager.UserReference.name,localTransform,remotePrefab,assetContainer,movementEpsilon,movementType,interpolationMode,autoSyncTransform,customHandlerName,bufferedAttributes,createAttributes)}else{BABYLON.Tools.Warn("Network manager has not joined the default universal game room.")}};NetworkManager.RemoveNetworkEntity=function(entityId){if(BABYLON.NetworkManager.HasJoinedRoom()){BABYLON.RoomController.RemoveNetworkEntity(BABYLON.NetworkManager.DefaultRoom,entityId)}else{BABYLON.Tools.Warn("Network manager has not joined the default universal game room.")}};NetworkManager.SetUserAttributes=function(userId,attributesToSet){if(BABYLON.NetworkManager.HasJoinedRoom()){BABYLON.RoomController.SetUserAttributes(BABYLON.NetworkManager.DefaultRoom,userId,attributesToSet)}else{BABYLON.Tools.Warn("Network manager has not joined the default universal game room.")}};NetworkManager.SetEntityAttributes=function(entityId,attributesToSet){if(BABYLON.NetworkManager.HasJoinedRoom()){BABYLON.RoomController.SetEntityAttributes(BABYLON.NetworkManager.DefaultRoom,entityId,attributesToSet)}else{BABYLON.Tools.Warn("Network manager has not joined the default universal game room.")}};NetworkManager.CallCustomMethod=function(method){var args=[];for(var _i=1;_i<arguments.length;_i++){args[_i-1]=arguments[_i]}if(BABYLON.NetworkManager.HasJoinedRoom()){BABYLON.RoomController.CallCustomMethod(BABYLON.NetworkManager.DefaultRoom,method,args)}else{BABYLON.Tools.Warn("Network manager has not joined the default universal game room.")}};NetworkManager.ExecuteRemoteFunctionCall=function(target,entityId,func){var args=[];for(var _i=3;_i<arguments.length;_i++){args[_i-3]=arguments[_i]}if(BABYLON.NetworkManager.HasJoinedRoom()){BABYLON.RoomController.ExecuteRemoteFunctionCall(BABYLON.NetworkManager.DefaultRoom,target,entityId,func,args)}else{BABYLON.Tools.Warn("Network manager has not joined the default universal game room.")}};NetworkManager.GetChatMessages=function(){var messages=null;if(BABYLON.NetworkManager.HasJoinedRoom()){if(BABYLON.NetworkManager.DefaultRoom.state.queue!=null){BABYLON.NetworkManager.DefaultRoom.state.queue.forEach(function(queue,id){if(queue!=null&&queue.messages!=null){queue.messages.forEach(function(message,index){if(message!=null){if(messages==null)messages=[];messages.push(message)}})}})}}return messages};NetworkManager.SendChatMessage=function(message){if(BABYLON.NetworkManager.HasJoinedRoom()){BABYLON.RoomController.SendChat(BABYLON.NetworkManager.DefaultRoom,message)}else{BABYLON.Tools.Warn("Network manager has not joined the default universal game room.")}};NetworkManager.OnSceneBeforeRenderUpdate=function(){var deltaTime=UNITY.SceneManager.GetDeltaSeconds(BABYLON.NetworkManager.SceneReference);if(BABYLON.NetworkManager.NetworkServerTime>0){BABYLON.NetworkManager.NetworkServerTime+=deltaTime}BABYLON.NetworkManager.ProcessNetworkEntities(deltaTime)};NetworkManager.OnDispatchChatQueueMessages=function(state){if(BABYLON.NetworkManager.HasJoinedRoom()){var messages=BABYLON.NetworkManager.GetChatMessages();if(messages!=null&&messages.length>0){messages.sort(function(left,right){if(left.timestamp<right.timestamp)return-1;if(left.timestamp>right.timestamp)return 1;return 0});messages.forEach(function(mx){if(mx!=null&&(mx.dispatched==null||mx.dispatched==false)){try{if(BABYLON.NetworkManager.OnChatMessageObservable&&BABYLON.NetworkManager.OnChatMessageObservable.hasObservers()){BABYLON.NetworkManager.OnChatMessageObservable.notifyObservers(__assign({},mx))}}catch(e){console.error(e)}finally{mx.dispatched=true}}})}}};NetworkManager.ProcessNetworkEntities=function(deltaTime){if(BABYLON.NetworkManager.HasJoinedRoom()){var transmitPacketBuffer_1=null;BABYLON.NetworkManager.DefaultRoom.state.entities.forEach(function(entity,key){if(entity.transformNode!=null&&entity.transformNode.networkEntitySync!=null&&entity.transformNode.networkEntitySync===true&&entity.transformNodeType!=null){if(entity.transformNodeType===BABYLON.NetworkEntityType.Local){if(entity.transformNode.networkEntityLastPosition==null)entity.transformNode.networkEntityLastPosition=entity.transformNode.position.clone();if(entity.transformNode.position.equalsWithEpsilon(entity.transformNode.networkEntityLastPosition,entity.transformNode.networkEntityEpsilon)===false){entity.transformNode.position.subtractToRef(entity.transformNode.networkEntityLastPosition,entity.transformNode.networkEntityLinearVelocity);entity.transformNode.networkEntityLinearVelocity.x/=deltaTime;entity.transformNode.networkEntityLinearVelocity.y/=deltaTime;entity.transformNode.networkEntityLinearVelocity.z/=deltaTime}else{entity.transformNode.networkEntityLinearVelocity.set(0,0,0)}entity.transformNode.networkEntityLastPosition.copyFrom(entity.transformNode.position);var packet=BABYLON.NetworkManager.CreateNetworkPacketData(entity.transformNode,true);if(transmitPacketBuffer_1==null)transmitPacketBuffer_1=[];if(packet!=null)transmitPacketBuffer_1.push(packet)}else if(entity.transformNodeType===BABYLON.NetworkEntityType.Remote){var buffer=entity.transformNode.networkEntityInterpBuffer;if(buffer!=null){buffer.update(deltaTime*1000);if(entity.transformNode.networkEntityActivated!=null){if(entity.transformNode.networkEntityActivated!==true){entity.transformNode.networkEntityActivated=true;entity.transformNode.position=new BABYLON.Vector3(entity.xPos,entity.yPos,entity.zPos);entity.transformNode.rotationQuaternion=new BABYLON.Quaternion(entity.xRot,entity.yRot,entity.zRot,entity.wRot);entity.transformNode.setEnabled(true);console.warn(">>> Activating Remote Entity: "+entity.transformNode.name)}else{BABYLON.NetworkManager.UpdateRemoteEntity(buffer,entity,entity.transformNode,deltaTime)}}}}}});if(transmitPacketBuffer_1!=null&&transmitPacketBuffer_1.length>0){BABYLON.NetworkManager.SendDataPacketToServer(transmitPacketBuffer_1)}}};NetworkManager.SendDataPacketToServer=function(transmitPacketBuffer){var dataPacket={entities:transmitPacketBuffer};if(BABYLON.NetworkManager.DefaultRoom!=null){BABYLON.NetworkManager.DefaultRoom.send("packetUpdate",dataPacket)}};NetworkManager.UpdateRemoteEntity=function(buffer,entity,transform,deltaTime){if(entity==null||transform==null)return;var interpolationMode=transform.networkEntityInterpolate;if(interpolationMode===BABYLON.EntityInterpolation.Custom){if(transform.networkEntityHandler!=null){transform.networkEntityHandler(entity,transform,deltaTime)}}else{if(buffer.state===BufferState.PLAYING){transform.position.copyFrom(buffer.position);transform.rotationQuaternion.copyFrom(buffer.quaternion);transform.scaling.copyFrom(buffer.scale)}}if(transform.networkEntityAttributeBuffer==null)transform.networkEntityAttributeBuffer={};transform.networkEntityAttributeBuffer["0"]=entity.aux00;transform.networkEntityAttributeBuffer["1"]=entity.aux01;transform.networkEntityAttributeBuffer["2"]=entity.aux02;transform.networkEntityAttributeBuffer["3"]=entity.aux03;transform.networkEntityAttributeBuffer["4"]=entity.aux04;transform.networkEntityAttributeBuffer["5"]=entity.aux05;transform.networkEntityAttributeBuffer["6"]=entity.aux06;transform.networkEntityAttributeBuffer["7"]=entity.aux07;transform.networkEntityAttributeBuffer["8"]=entity.aux08;transform.networkEntityAttributeBuffer["9"]=entity.aux09;transform.networkEntityAttributeBuffer["10"]=entity.aux10;transform.networkEntityAttributeBuffer["11"]=entity.aux11;transform.networkEntityAttributeBuffer["12"]=entity.aux12;transform.networkEntityAttributeBuffer["13"]=entity.aux13;transform.networkEntityAttributeBuffer["14"]=entity.aux14;transform.networkEntityAttributeBuffer["15"]=entity.aux15;transform.networkEntityAttributeBuffer["16"]=entity.aux16;transform.networkEntityAttributeBuffer["17"]=entity.aux17;transform.networkEntityAttributeBuffer["18"]=entity.aux18;transform.networkEntityAttributeBuffer["19"]=entity.aux19};NetworkManager.CreateNetworkPacketData=function(localTransform,postAttributes){if(postAttributes===void 0){postAttributes=true}var result=null;var networkEntity=localTransform.networkEntity;if(networkEntity!=null){if(localTransform.networkEntityMovement!=null&&localTransform.networkEntityMovement===BABYLON.EntityMovementType.ClientAuthority){UNITY.Utilities.GetAbsolutePositionToRef(localTransform,BABYLON.NetworkManager.SendPositionBuffer);UNITY.Utilities.GetAbsoluteRotationToRef(localTransform,BABYLON.NetworkManager.SendRotationBuffer);if(localTransform.networkEntityLinearVelocity!=null)BABYLON.NetworkManager.SendLinearBuffer.copyFrom(localTransform.networkEntityLinearVelocity);else BABYLON.NetworkManager.SendLinearBuffer.set(0,0,0);if(localTransform.networkEntityAngularVelocity!=null)BABYLON.NetworkManager.SendAngularBuffer.copyFrom(localTransform.networkEntityAngularVelocity);else BABYLON.NetworkManager.SendAngularBuffer.set(0,0,0);var a00=0;var a01=0;var a02=0;var a03=0;var a04=0;var a05=0;var a06=0;var a07=0;var a08=0;var a09=0;var a10=0;var a11=0;var a12=0;var a13=0;var a14=0;var a15=0;var a16=0;var a17=0;var a18=0;var a19=0;if(postAttributes===true&&localTransform.networkEntityBatch!=null){if(localTransform.networkEntityBatch["0"]!=null){a00=localTransform.networkEntityBatch["0"]}if(localTransform.networkEntityBatch["1"]!=null){a01=localTransform.networkEntityBatch["1"]}if(localTransform.networkEntityBatch["2"]!=null){a02=localTransform.networkEntityBatch["2"]}if(localTransform.networkEntityBatch["3"]!=null){a03=localTransform.networkEntityBatch["3"]}if(localTransform.networkEntityBatch["4"]!=null){a04=localTransform.networkEntityBatch["4"]}if(localTransform.networkEntityBatch["5"]!=null){a05=localTransform.networkEntityBatch["5"]}if(localTransform.networkEntityBatch["6"]!=null){a06=localTransform.networkEntityBatch["6"]}if(localTransform.networkEntityBatch["7"]!=null){a07=localTransform.networkEntityBatch["7"]}if(localTransform.networkEntityBatch["8"]!=null){a08=localTransform.networkEntityBatch["8"]}if(localTransform.networkEntityBatch["9"]!=null){a09=localTransform.networkEntityBatch["9"]}if(localTransform.networkEntityBatch["10"]!=null){a10=localTransform.networkEntityBatch["10"]}if(localTransform.networkEntityBatch["11"]!=null){a11=localTransform.networkEntityBatch["11"]}if(localTransform.networkEntityBatch["12"]!=null){a12=localTransform.networkEntityBatch["12"]}if(localTransform.networkEntityBatch["13"]!=null){a13=localTransform.networkEntityBatch["13"]}if(localTransform.networkEntityBatch["14"]!=null){a14=localTransform.networkEntityBatch["14"]}if(localTransform.networkEntityBatch["15"]!=null){a15=localTransform.networkEntityBatch["15"]}if(localTransform.networkEntityBatch["16"]!=null){a16=localTransform.networkEntityBatch["16"]}if(localTransform.networkEntityBatch["17"]!=null){a17=localTransform.networkEntityBatch["17"]}if(localTransform.networkEntityBatch["18"]!=null){a18=localTransform.networkEntityBatch["18"]}if(localTransform.networkEntityBatch["19"]!=null){a19=localTransform.networkEntityBatch["19"]}}var packet={};packet.id=networkEntity.id;packet.xPos=BABYLON.NetworkManager.SendPositionBuffer.x;packet.yPos=BABYLON.NetworkManager.SendPositionBuffer.y;packet.zPos=BABYLON.NetworkManager.SendPositionBuffer.z;packet.xRot=BABYLON.NetworkManager.SendRotationBuffer.x;packet.yRot=BABYLON.NetworkManager.SendRotationBuffer.y;packet.zRot=BABYLON.NetworkManager.SendRotationBuffer.z;packet.wRot=BABYLON.NetworkManager.SendRotationBuffer.w;packet.xVel=BABYLON.NetworkManager.SendLinearBuffer.x;packet.yVel=BABYLON.NetworkManager.SendLinearBuffer.y;packet.zVel=BABYLON.NetworkManager.SendLinearBuffer.z;packet.xAng=BABYLON.NetworkManager.SendAngularBuffer.x;packet.yAng=BABYLON.NetworkManager.SendAngularBuffer.y;packet.zAng=BABYLON.NetworkManager.SendAngularBuffer.z;packet.a00=a00;packet.a01=a01;packet.a02=a02;packet.a03=a03;packet.a04=a04;packet.a05=a05;packet.a06=a06;packet.a07=a07;packet.a08=a08;packet.a09=a09;packet.a10=a10;packet.a11=a11;packet.a12=a12;packet.a13=a13;packet.a14=a14;packet.a15=a15;packet.a16=a16;packet.a17=a17;packet.a18=a18;packet.a19=a19;packet.speed=BABYLON.NetworkManager.SendLinearBuffer.length();result=packet}}return result};NetworkManager.JoinDefaultRoomHandler=function(info){BABYLON.NetworkManager.UserReference=info.user;BABYLON.NetworkManager.NetworkServerTime=info.serverTime;BABYLON.NetworkManager.InterpolationBuffer=info.interpolationBuffer;if(BABYLON.NetworkManager.HasJoinedRoom()){BABYLON.Tools.Warn("TCP: You are connected to the default room channel")}};NetworkManager.AddNetworkEntityHandler=function(entity,key){if(BABYLON.NetworkManager.HasJoinedRoom()){if(BABYLON.NetworkManager.NetworkEntityQueue!=null){BABYLON.NetworkManager.NetworkEntityQueue.forEach(function(vx,kx){BABYLON.NetworkManager.ProcessNetworkEntityHandler(vx,kx)});BABYLON.NetworkManager.NetworkEntityQueue.clear();BABYLON.NetworkManager.NetworkEntityQueue=null}BABYLON.NetworkManager.ProcessNetworkEntityHandler(entity,key)}else{if(BABYLON.NetworkManager.NetworkEntityQueue==null)BABYLON.NetworkManager.NetworkEntityQueue=new Map;BABYLON.NetworkManager.NetworkEntityQueue.set(key,entity)}};NetworkManager.ProcessNetworkEntityHandler=function(entity,key){var aentity=entity;var sceneRef=BABYLON.NetworkManager.SceneReference;var remotePrefab=entity.attributes.get("remotePrefab");var assetContainer=entity.attributes.get("assetContainer");var customHandler=entity.attributes.get("customHandler");var movementEpsilon=entity.attributes.get("movementEpsilon");var movementType=entity.attributes.get("movementType");var interoplation=entity.attributes.get("interoplation");var bufferedAttribs=entity.attributes.get("bufferedAttribs");var syncTransform=entity.attributes.get("syncTransform");var playerAvatar=entity.attributes.get("playerAvatar");var isLocalEntity=(entity.ownerId===BABYLON.NetworkManager.UserReference.id);if(isLocalEntity===false){aentity.onChange(function(changes){BABYLON.NetworkManager.ProcessRemoteEntityChanges(entity,changes)})}var sourceName=entity.attributes.get("sourceName");if(sourceName==null||sourceName==="")sourceName="Unknown";var transformNode=null;var transformNodeName=(sourceName+"."+entity.ownerId);var transformNodeType=(isLocalEntity===true)?BABYLON.NetworkEntityType.Local:BABYLON.NetworkEntityType.Remote;if(BABYLON.NetworkManager.RootNode==null){BABYLON.NetworkManager.RootNode=new BABYLON.TransformNode("Network Entities",sceneRef);BABYLON.NetworkManager.RootNode.position.set(0,0,0)}if(isLocalEntity===false){var initialPosition=new BABYLON.Vector3(0,0,0);var initialRotation=new BABYLON.Quaternion(0,0,0,1);if(remotePrefab!=null&&remotePrefab!==""){if(assetContainer!=null&&assetContainer!==""){var contaier=UNITY.SceneManager.GetAssetContainer(sceneRef,assetContainer);if(contaier!=null){transformNode=UNITY.SceneManager.InstantiatePrefabFromContainer(contaier,remotePrefab,transformNodeName,BABYLON.NetworkManager.RootNode,initialPosition,initialRotation);if(transformNode==null)BABYLON.Tools.Warn("Failed to instaniate '"+remotePrefab+"' from asset container '"+assetContainer+"'.")}else{BABYLON.Tools.Warn("Asset container '"+assetContainer+"' not registered on the scene.")}}else{transformNode=UNITY.SceneManager.InstantiatePrefabFromScene(sceneRef,remotePrefab,transformNodeName,BABYLON.NetworkManager.RootNode,initialPosition,initialRotation);if(transformNode==null)BABYLON.Tools.Warn("Failed to instaniate '"+remotePrefab+"' from current scene.")}}if(transformNode==null){transformNode=new BABYLON.TransformNode(transformNodeName,sceneRef);transformNode.parent=BABYLON.NetworkManager.RootNode;transformNode.position=initialPosition.clone();transformNode.rotationQuaternion=initialRotation.clone()}transformNode.name=transformNodeName;transformNode.setEnabled(false);if(transformNode!=null){if(playerAvatar!=null&&playerAvatar!==""){var skins=transformNode.getChildMeshes(false,function(node){return(node.skeleton!=null)});if(skins!=null&&skins.length>0){skins.forEach(function(skin){var stag=UNITY.SceneManager.GetTransformTag(skin);if(stag!=null&&stag==="Armature"||skin.name.toLowerCase().endsWith(".skin")){skin.isVisible=false}})}}}}else{transformNode=UNITY.SceneManager.GetTransformNodeByID(sceneRef,entity.creationId);if(transformNode==null)BABYLON.Tools.Warn("Failed to locate local entity transform '"+entity.creationId+"' in current scene.")}var customHandlerFunc=null;if(customHandler!=null&&customHandler!==""){customHandlerFunc=BABYLON.NetworkManager.CustomHandlerMap.get(customHandler);if(customHandlerFunc==null)BABYLON.Tools.Warn("Custom interoplation handler not found: "+customHandler+". Default interpolation will be used instead.")}if(transformNode!=null){aentity.transformNode=transformNode;aentity.transformNodeType=transformNodeType;aentity.transformNode.networkEntity=entity;aentity.transformNode.networkEntityType=transformNodeType;aentity.transformNode.networkEntitySync=(syncTransform!=null&&syncTransform==="true");aentity.transformNode.networkEntityBatch=null;aentity.transformNode.networkEntityHandler=customHandlerFunc;aentity.transformNode.networkEntityEpsilon=(movementEpsilon!=null&&movementEpsilon!=="")?parseFloat(movementEpsilon):0.00001;aentity.transformNode.networkEntityMovement=(movementType!=null&&movementType!=="")?parseFloat(movementType):0;aentity.transformNode.networkEntityInterpolate=(interoplation!=null&&interoplation!=="")?parseFloat(interoplation):0;aentity.transformNode.networkEntityActivated=false;aentity.transformNode.networkEntityLastPosition=null;aentity.transformNode.networkEntityLinearVelocity=new BABYLON.Vector3(0,0,0);aentity.transformNode.networkEntityNetworkPosition=new BABYLON.Vector3(0,0,0);aentity.transformNode.networkEntityNetworkRotation=new BABYLON.Quaternion(0,0,0,1);aentity.transformNode.networkEntityNetworkVelocity=new BABYLON.Vector3(0,0,0);aentity.transformNode.networkEntityNetworkScaling=new BABYLON.Vector3(0,0,0);aentity.transformNode.networkEntityAttributeBuffer=null;aentity.transformNode.networkEntityInterpBuffer=null;aentity.transformNode.networkEntityPlayerAvatar=playerAvatar;if(transformNodeType==BABYLON.NetworkEntityType.Remote){var interpolationMode=aentity.transformNode.networkEntityInterpolate;if(interpolationMode!==BABYLON.EntityInterpolation.Custom){var bufferAttribs=(bufferedAttribs!=null&&bufferedAttribs!=="")?JSON.parse(bufferedAttribs):null;aentity.transformNode.networkEntityInterpBuffer=new InterpolationBuffer(interpolationMode,BABYLON.NetworkManager.InterpolationBuffer,bufferAttribs)}}else if(transformNodeType==BABYLON.NetworkEntityType.Local){}}else{aentity.transformNode=null;aentity.transformNodeType=BABYLON.NetworkEntityType.None}BABYLON.NetworkManager.OnCreateEntityObservable.notifyObservers(entity)};NetworkManager.ProcessRemoteEntityChanges=function(entity,changes){if(entity!=null&&entity.transformNode!=null&&entity.transformNode.networkEntitySync!=null&&entity.transformNode.networkEntitySync===true&&entity.transformNodeType!=null){if(entity.transformNodeType===BABYLON.NetworkEntityType.Remote){entity.transformNode.networkEntityNetworkPosition.set(entity.xPos,entity.yPos,entity.zPos);entity.transformNode.networkEntityNetworkRotation.set(entity.xRot,entity.yRot,entity.zRot,entity.wRot);entity.transformNode.networkEntityNetworkVelocity.set(entity.xVel,entity.yVel,entity.zVel);entity.transformNode.networkEntityNetworkScaling.set(1.0,1.0,1.0);if(entity.transformNode.networkEntityInterpBuffer!=null){var position=entity.transformNode.networkEntityNetworkPosition;var rotation=entity.transformNode.networkEntityNetworkRotation;var velocity=entity.transformNode.networkEntityNetworkVelocity;var scaling=entity.transformNode.networkEntityNetworkScaling;entity.transformNode.networkEntityInterpBuffer.appendBuffer(position,velocity,rotation,scaling)}}}};NetworkManager.RemoveNetworkEntityHandler=function(entity,key){var aentity=entity;if(aentity.transformNode!=null&&aentity.transformNodeType!=null&&aentity.transformNodeType===BABYLON.NetworkEntityType.Remote){if(aentity.transformNode.dispose)aentity.transformNode.dispose();aentity.transformNode=null;BABYLON.NetworkManager.OnRemoveEntityObservable.notifyObservers(entity)}};NetworkManager.RootNode=null;NetworkManager.DefaultRoom=null;NetworkManager.UserReference=null;NetworkManager.NetworkServerTime=0;NetworkManager.NetworkEntityQueue=null;NetworkManager.CustomHandlerMap=new Map;NetworkManager.SendPositionBuffer=new BABYLON.Vector3(0,0,0);NetworkManager.SendRotationBuffer=new BABYLON.Quaternion(0,0,0,1);NetworkManager.SendLinearBuffer=new BABYLON.Vector3(0,0,0);NetworkManager.SendAngularBuffer=new BABYLON.Vector3(0,0,0);NetworkManager.SceneReference=null;NetworkManager.InterpolationBuffer=0.15;NetworkManager.OnConnectObservable=new BABYLON.Observable;NetworkManager.OnDisconnectObservable=new BABYLON.Observable;NetworkManager.OnJoinRoomObservable=new BABYLON.Observable;NetworkManager.OnLeaveRoomObservable=new BABYLON.Observable;NetworkManager.OnCreateEntityObservable=new BABYLON.Observable;NetworkManager.OnRemoveEntityObservable=new BABYLON.Observable;NetworkManager.OnChatMessageObservable=new BABYLON.Observable;NetworkManager.OnPingReceivedObservable=new BABYLON.Observable;NetworkManager.OnErrorMessageObservable=new BABYLON.Observable;NetworkManager.OnRemoteProcedureCallObservable=new BABYLON.Observable;return NetworkManager}());BABYLON.NetworkManager=NetworkManager;var RoomController=(function(){function RoomController(){}RoomController.SendPing=function(room){room.send("ping")};RoomController.SendChat=function(room,message){room.send("sendChat",{sessionId:"*",name:"*",message:message,timestamp:-1})};RoomController.CallCustomMethod=function(room,method){var args=[];for(var _i=2;_i<arguments.length;_i++){args[_i-2]=arguments[_i]}room.send("customMethod",{method:method,param:args})};RoomController.SetUserAttributes=function(room,userId,attributesToSet){room.send("setAttribute",{entityId:null,userId:userId,attributesToSet:attributesToSet})};RoomController.SetEntityAttributes=function(room,entityId,attributesToSet){room.send("setAttribute",{entityId:entityId,userId:null,attributesToSet:attributesToSet})};RoomController.CreateNetworkEntity=function(room,ownerName,localTransform,remotePrefab,assetContainer,movementEpsilon,movementType,interpolationMode,autoSyncTransform,customHandlerName,bufferedAttributes,createAttributes){if(remotePrefab===void 0){remotePrefab=null}if(assetContainer===void 0){assetContainer=null}if(movementEpsilon===void 0){movementEpsilon=0.00001}if(movementType===void 0){movementType=BABYLON.EntityMovementType.ClientAuthority}if(interpolationMode===void 0){interpolationMode=BABYLON.EntityInterpolation.Default}if(autoSyncTransform===void 0){autoSyncTransform=true}if(customHandlerName===void 0){customHandlerName=null}if(createAttributes===void 0){createAttributes=null}var entityAttributes=(createAttributes!=null)?createAttributes:{};var entityPosition=localTransform.position;var entityRotation=(localTransform.rotationQuaternion!=null)?localTransform.rotationQuaternion:BABYLON.Quaternion.FromEulerVector(localTransform.rotation);entityAttributes["ownerName"]=ownerName;entityAttributes["sourceName"]=(localTransform.name!=null)?localTransform.name:localTransform.id;entityAttributes["creationPos"]=[entityPosition.x,entityPosition.y,entityPosition.z];entityAttributes["creationRot"]=[entityRotation.x,entityRotation.y,entityRotation.z,entityRotation.w];entityAttributes["remotePrefab"]=remotePrefab;entityAttributes["assetContainer"]=assetContainer;entityAttributes["customHandler"]=customHandlerName;entityAttributes["movementEpsilon"]=movementEpsilon.toString();entityAttributes["movementType"]=movementType.toString();entityAttributes["interoplation"]=interpolationMode.toString();entityAttributes["syncTransform"]=autoSyncTransform.toString().toLowerCase();entityAttributes["bufferedAttribs"]=(bufferedAttributes!=null)?JSON.stringify(bufferedAttributes):null;room.send("createEntity",{creationId:localTransform.id,attributes:entityAttributes})};RoomController.RemoveNetworkEntity=function(room,entityId){room.send("removeEntity",entityId)};RoomController.ExecuteRemoteFunctionCall=function(room,target,entityId,func){var args=[];for(var _i=4;_i<arguments.length;_i++){args[_i-4]=arguments[_i]}room.send("remoteFunctionCall",{entityId:entityId,function:func,param:args,target:target})};return RoomController}());BABYLON.RoomController=RoomController;var BufferState;(function(BufferState){BufferState[BufferState["INITIALIZING"]=0]="INITIALIZING";BufferState[BufferState["BUFFERING"]=1]="BUFFERING";BufferState[BufferState["PLAYING"]=2]="PLAYING"})(BufferState=BABYLON.BufferState||(BABYLON.BufferState={}));var BufferMode;(function(BufferMode){BufferMode[BufferMode["MODE_LERP"]=0]="MODE_LERP";BufferMode[BufferMode["MODE_HERMITE"]=1]="MODE_HERMITE"})(BufferMode=BABYLON.BufferMode||(BABYLON.BufferMode={}));var framePool=[];var getPooledFrame=function(){var frame=framePool.pop();if(!frame){frame={position:new BABYLON.Vector3,velocity:new BABYLON.Vector3,scale:new BABYLON.Vector3(1,1,1),quaternion:new BABYLON.Quaternion,aux00:0,aux01:0,aux02:0,aux03:0,aux04:0,aux05:0,aux06:0,aux07:0,aux08:0,aux09:0,aux10:0,aux11:0,aux12:0,aux13:0,aux14:0,aux15:0,aux16:0,aux17:0,aux18:0,aux19:0,speed:0,time:0}}return frame};var freeFrame=function(f){return framePool.push(f)};var InterpolationBuffer=(function(){function InterpolationBuffer(mode,bufferTime,bufferAttribs){if(mode===void 0){mode=BufferMode.MODE_LERP}if(bufferTime===void 0){bufferTime=0.15}if(bufferAttribs===void 0){bufferAttribs=null}this.state=BufferState.INITIALIZING;this.buffer=[];this.bufferTime=bufferTime*1000;this.bufferAttribs=bufferAttribs;this.time=0;this.mode=mode;this.originFrame=getPooledFrame();this.position=new BABYLON.Vector3;this.quaternion=new BABYLON.Quaternion;this.scale=new BABYLON.Vector3(1,1,1);this.aux00=0;this.aux01=0;this.aux02=0;this.aux03=0;this.aux04=0;this.aux05=0;this.aux06=0;this.aux07=0;this.aux08=0;this.aux09=0;this.aux10=0;this.aux11=0;this.aux12=0;this.aux13=0;this.aux14=0;this.aux15=0;this.aux16=0;this.aux17=0;this.aux18=0;this.aux19=0;this.speed=0}InterpolationBuffer.prototype.getPosition=function(){return this.position};InterpolationBuffer.prototype.getQuaternion=function(){return this.quaternion};InterpolationBuffer.prototype.getScale=function(){return this.scale};InterpolationBuffer.prototype.hermiteToolkit=function(target,t,p1,p2,v1,v2){UNITY.Utilities.HermiteVector3ToRef(p1,v1,p2,v2,t,target)};InterpolationBuffer.prototype.hermiteBabylon=function(target,t,p1,p2,v1,v2){var pos=BABYLON.Vector3.Hermite(p1,v1,p2,v2,t);target.copyFrom(pos)};InterpolationBuffer.prototype.hermiteLegacy=function(target,t,p1,p2,v1,v2){var t2=t*t;var t3=t*t*t;var a=2*t3-3*t2+1;var b=-2*t3+3*t2;var c=t3-2*t2+t;var d=t3-t2;target.copyFrom(p1.scaleInPlace(a));target.add(p2.scaleInPlace(b));target.add(v1.scaleInPlace(c));target.add(v2.scaleInPlace(d))};InterpolationBuffer.prototype.lerp=function(target,v1,v2,alpha){BABYLON.Vector3.LerpToRef(v1,v2,alpha,target)};InterpolationBuffer.prototype.slerp=function(target,r1,r2,alpha){BABYLON.Quaternion.SlerpToRef(r1,r2,alpha,target)};InterpolationBuffer.prototype.updateOriginFrameToBufferTail=function(){freeFrame(this.originFrame);this.originFrame=this.buffer.shift()||getPooledFrame()};InterpolationBuffer.prototype.appendBuffer=function(position,velocity,quaternion,scale,aux00,aux01,aux02,aux03,aux04,aux05,aux06,aux07,aux08,aux09,aux10,aux11,aux12,aux13,aux14,aux15,aux16,aux17,aux18,aux19,speed){if(aux00===void 0){aux00=0}if(aux01===void 0){aux01=0}if(aux02===void 0){aux02=0}if(aux03===void 0){aux03=0}if(aux04===void 0){aux04=0}if(aux05===void 0){aux05=0}if(aux06===void 0){aux06=0}if(aux07===void 0){aux07=0}if(aux08===void 0){aux08=0}if(aux09===void 0){aux09=0}if(aux10===void 0){aux10=0}if(aux11===void 0){aux11=0}if(aux12===void 0){aux12=0}if(aux13===void 0){aux13=0}if(aux14===void 0){aux14=0}if(aux15===void 0){aux15=0}if(aux16===void 0){aux16=0}if(aux17===void 0){aux17=0}if(aux18===void 0){aux18=0}if(aux19===void 0){aux19=0}if(speed===void 0){speed=0}var tail=this.buffer.length>0?this.buffer[this.buffer.length-1]:null;if(tail&&tail.time===this.time){if(position)tail.position.copyFrom(position);if(velocity)tail.velocity.copyFrom(velocity);if(quaternion)tail.quaternion.copyFrom(quaternion);if(scale)tail.scale.copyFrom(scale);tail.aux00=aux00;tail.aux01=aux01;tail.aux02=aux02;tail.aux03=aux03;tail.aux04=aux04;tail.aux05=aux05;tail.aux06=aux06;tail.aux07=aux07;tail.aux08=aux08;tail.aux09=aux09;tail.aux10=aux10;tail.aux11=aux11;tail.aux12=aux12;tail.aux13=aux13;tail.aux14=aux14;tail.aux15=aux15;tail.aux16=aux16;tail.aux17=aux17;tail.aux18=aux18;tail.aux19=aux19;tail.speed=speed}else{var priorFrame=tail||this.originFrame;var newFrame=getPooledFrame();newFrame.position.copyFrom(position||priorFrame.position);newFrame.velocity.copyFrom(velocity||priorFrame.velocity);newFrame.quaternion.copyFrom(quaternion||priorFrame.quaternion);newFrame.scale.copyFrom(scale||priorFrame.scale);newFrame.aux00=aux00;newFrame.aux01=aux01;newFrame.aux02=aux02;newFrame.aux03=aux03;newFrame.aux04=aux04;newFrame.aux05=aux05;newFrame.aux06=aux06;newFrame.aux07=aux07;newFrame.aux08=aux08;newFrame.aux09=aux09;newFrame.aux10=aux10;newFrame.aux11=aux11;newFrame.aux12=aux12;newFrame.aux13=aux13;newFrame.aux14=aux14;newFrame.aux15=aux15;newFrame.aux16=aux16;newFrame.aux17=aux17;newFrame.aux18=aux18;newFrame.aux19=aux19;newFrame.speed=speed;newFrame.time=this.time;this.buffer.push(newFrame)}};InterpolationBuffer.prototype.update=function(delta){if(this.state===BufferState.INITIALIZING){if(this.buffer.length>0){this.updateOriginFrameToBufferTail();this.position.copyFrom(this.originFrame.position);this.quaternion.copyFrom(this.originFrame.quaternion);this.scale.copyFrom(this.originFrame.scale);this.aux00=this.originFrame.aux00;this.aux01=this.originFrame.aux01;this.aux02=this.originFrame.aux02;this.aux03=this.originFrame.aux03;this.aux04=this.originFrame.aux04;this.aux05=this.originFrame.aux05;this.aux06=this.originFrame.aux06;this.aux07=this.originFrame.aux07;this.aux08=this.originFrame.aux08;this.aux09=this.originFrame.aux09;this.aux10=this.originFrame.aux10;this.aux11=this.originFrame.aux11;this.aux12=this.originFrame.aux12;this.aux13=this.originFrame.aux13;this.aux14=this.originFrame.aux14;this.aux15=this.originFrame.aux15;this.aux16=this.originFrame.aux16;this.aux17=this.originFrame.aux17;this.aux18=this.originFrame.aux18;this.aux19=this.originFrame.aux19;this.speed=this.originFrame.speed;this.state=BufferState.BUFFERING}}if(this.state===BufferState.BUFFERING){if(this.buffer.length>0&&this.time>this.bufferTime){this.state=BufferState.PLAYING}}if(this.state===BufferState.PLAYING){var mark=this.time-this.bufferTime;while(this.buffer.length>0&&mark>this.buffer[0].time){if(this.buffer.length>1){this.updateOriginFrameToBufferTail()}else{this.originFrame.position.copyFrom(this.buffer[0].position);this.originFrame.velocity.copyFrom(this.buffer[0].velocity);this.originFrame.quaternion.copyFrom(this.buffer[0].quaternion);this.originFrame.scale.copyFrom(this.buffer[0].scale);this.originFrame.aux00=this.buffer[0].aux00;this.originFrame.aux01=this.buffer[0].aux01;this.originFrame.aux02=this.buffer[0].aux02;this.originFrame.aux03=this.buffer[0].aux03;this.originFrame.aux04=this.buffer[0].aux04;this.originFrame.aux05=this.buffer[0].aux05;this.originFrame.aux06=this.buffer[0].aux06;this.originFrame.aux07=this.buffer[0].aux07;this.originFrame.aux08=this.buffer[0].aux08;this.originFrame.aux09=this.buffer[0].aux09;this.originFrame.aux10=this.buffer[0].aux10;this.originFrame.aux11=this.buffer[0].aux11;this.originFrame.aux12=this.buffer[0].aux12;this.originFrame.aux13=this.buffer[0].aux13;this.originFrame.aux14=this.buffer[0].aux14;this.originFrame.aux15=this.buffer[0].aux15;this.originFrame.aux16=this.buffer[0].aux16;this.originFrame.aux17=this.buffer[0].aux17;this.originFrame.aux18=this.buffer[0].aux18;this.originFrame.aux19=this.buffer[0].aux19;this.originFrame.speed=this.buffer[0].speed;this.originFrame.time=this.buffer[0].time;this.buffer[0].time=this.time+delta}}if(this.buffer.length>0&&this.buffer[0].time>0){var targetFrame=this.buffer[0];var delta_time=targetFrame.time-this.originFrame.time;var alpha=(mark-this.originFrame.time)/delta_time;if(this.mode===BufferMode.MODE_LERP){this.lerp(this.position,this.originFrame.position,targetFrame.position,alpha)}else if(this.mode===BufferMode.MODE_HERMITE){this.hermiteLegacy(this.position,alpha,this.originFrame.position,targetFrame.position,this.originFrame.velocity.scaleInPlace(delta_time),targetFrame.velocity.scaleInPlace(delta_time))}this.slerp(this.quaternion,this.originFrame.quaternion,targetFrame.quaternion,alpha);this.lerp(this.scale,this.originFrame.scale,targetFrame.scale,alpha);this.speed=BABYLON.Scalar.Lerp(this.originFrame.speed,targetFrame.speed,alpha);this.aux00=targetFrame.aux00;this.aux01=targetFrame.aux01;this.aux02=targetFrame.aux02;this.aux03=targetFrame.aux03;this.aux04=targetFrame.aux04;this.aux05=targetFrame.aux05;this.aux06=targetFrame.aux06;this.aux07=targetFrame.aux07;this.aux08=targetFrame.aux08;this.aux09=targetFrame.aux09;this.aux10=targetFrame.aux10;this.aux11=targetFrame.aux11;this.aux12=targetFrame.aux12;this.aux13=targetFrame.aux13;this.aux14=targetFrame.aux14;this.aux15=targetFrame.aux15;this.aux16=targetFrame.aux16;this.aux17=targetFrame.aux17;this.aux18=targetFrame.aux18;this.aux19=targetFrame.aux19;if(this.bufferAttribs!=null){if(this.bufferAttribs.interpolateBuffer00===1)this.aux00=BABYLON.Scalar.Lerp(this.originFrame.aux00,targetFrame.aux00,alpha);else if(this.bufferAttribs.interpolateBuffer00===2)this.aux00=BABYLON.Scalar.LerpAngle(this.originFrame.aux00,targetFrame.aux00,alpha);if(this.bufferAttribs.interpolateBuffer01===1)this.aux01=BABYLON.Scalar.Lerp(this.originFrame.aux01,targetFrame.aux01,alpha);else if(this.bufferAttribs.interpolateBuffer01===2)this.aux01=BABYLON.Scalar.LerpAngle(this.originFrame.aux01,targetFrame.aux01,alpha);if(this.bufferAttribs.interpolateBuffer02===1)this.aux02=BABYLON.Scalar.Lerp(this.originFrame.aux02,targetFrame.aux02,alpha);else if(this.bufferAttribs.interpolateBuffer02===2)this.aux02=BABYLON.Scalar.LerpAngle(this.originFrame.aux02,targetFrame.aux02,alpha);if(this.bufferAttribs.interpolateBuffer03===1)this.aux03=BABYLON.Scalar.Lerp(this.originFrame.aux03,targetFrame.aux03,alpha);else if(this.bufferAttribs.interpolateBuffer03===2)this.aux03=BABYLON.Scalar.LerpAngle(this.originFrame.aux03,targetFrame.aux03,alpha);if(this.bufferAttribs.interpolateBuffer04===1)this.aux04=BABYLON.Scalar.Lerp(this.originFrame.aux04,targetFrame.aux04,alpha);else if(this.bufferAttribs.interpolateBuffer04===2)this.aux04=BABYLON.Scalar.LerpAngle(this.originFrame.aux04,targetFrame.aux04,alpha);if(this.bufferAttribs.interpolateBuffer05===1)this.aux05=BABYLON.Scalar.Lerp(this.originFrame.aux05,targetFrame.aux05,alpha);else if(this.bufferAttribs.interpolateBuffer05===2)this.aux05=BABYLON.Scalar.LerpAngle(this.originFrame.aux05,targetFrame.aux05,alpha);if(this.bufferAttribs.interpolateBuffer06===1)this.aux06=BABYLON.Scalar.Lerp(this.originFrame.aux06,targetFrame.aux06,alpha);else if(this.bufferAttribs.interpolateBuffer06===2)this.aux06=BABYLON.Scalar.LerpAngle(this.originFrame.aux06,targetFrame.aux06,alpha);if(this.bufferAttribs.interpolateBuffer07===1)this.aux07=BABYLON.Scalar.Lerp(this.originFrame.aux07,targetFrame.aux07,alpha);else if(this.bufferAttribs.interpolateBuffer07===2)this.aux07=BABYLON.Scalar.LerpAngle(this.originFrame.aux07,targetFrame.aux07,alpha);if(this.bufferAttribs.interpolateBuffer08===1)this.aux08=BABYLON.Scalar.Lerp(this.originFrame.aux08,targetFrame.aux08,alpha);else if(this.bufferAttribs.interpolateBuffer08===2)this.aux08=BABYLON.Scalar.LerpAngle(this.originFrame.aux08,targetFrame.aux08,alpha);if(this.bufferAttribs.interpolateBuffer09===1)this.aux09=BABYLON.Scalar.Lerp(this.originFrame.aux09,targetFrame.aux09,alpha);else if(this.bufferAttribs.interpolateBuffer09===2)this.aux09=BABYLON.Scalar.LerpAngle(this.originFrame.aux09,targetFrame.aux09,alpha);if(this.bufferAttribs.interpolateBuffer10===1)this.aux10=BABYLON.Scalar.Lerp(this.originFrame.aux10,targetFrame.aux10,alpha);else if(this.bufferAttribs.interpolateBuffer10===2)this.aux10=BABYLON.Scalar.LerpAngle(this.originFrame.aux10,targetFrame.aux10,alpha);if(this.bufferAttribs.interpolateBuffer11===1)this.aux11=BABYLON.Scalar.Lerp(this.originFrame.aux11,targetFrame.aux11,alpha);else if(this.bufferAttribs.interpolateBuffer11===2)this.aux11=BABYLON.Scalar.LerpAngle(this.originFrame.aux11,targetFrame.aux11,alpha);if(this.bufferAttribs.interpolateBuffer12===1)this.aux12=BABYLON.Scalar.Lerp(this.originFrame.aux12,targetFrame.aux12,alpha);else if(this.bufferAttribs.interpolateBuffer12===2)this.aux12=BABYLON.Scalar.LerpAngle(this.originFrame.aux12,targetFrame.aux12,alpha);if(this.bufferAttribs.interpolateBuffer13===1)this.aux13=BABYLON.Scalar.Lerp(this.originFrame.aux13,targetFrame.aux13,alpha);else if(this.bufferAttribs.interpolateBuffer13===2)this.aux13=BABYLON.Scalar.LerpAngle(this.originFrame.aux13,targetFrame.aux13,alpha);if(this.bufferAttribs.interpolateBuffer14===1)this.aux14=BABYLON.Scalar.Lerp(this.originFrame.aux14,targetFrame.aux14,alpha);else if(this.bufferAttribs.interpolateBuffer14===2)this.aux14=BABYLON.Scalar.LerpAngle(this.originFrame.aux14,targetFrame.aux14,alpha);if(this.bufferAttribs.interpolateBuffer15===1)this.aux15=BABYLON.Scalar.Lerp(this.originFrame.aux15,targetFrame.aux15,alpha);else if(this.bufferAttribs.interpolateBuffer15===2)this.aux15=BABYLON.Scalar.LerpAngle(this.originFrame.aux15,targetFrame.aux15,alpha);if(this.bufferAttribs.interpolateBuffer16===1)this.aux16=BABYLON.Scalar.Lerp(this.originFrame.aux16,targetFrame.aux16,alpha);else if(this.bufferAttribs.interpolateBuffer16===2)this.aux16=BABYLON.Scalar.LerpAngle(this.originFrame.aux16,targetFrame.aux16,alpha);if(this.bufferAttribs.interpolateBuffer17===1)this.aux17=BABYLON.Scalar.Lerp(this.originFrame.aux17,targetFrame.aux17,alpha);else if(this.bufferAttribs.interpolateBuffer17===2)this.aux17=BABYLON.Scalar.LerpAngle(this.originFrame.aux17,targetFrame.aux17,alpha);if(this.bufferAttribs.interpolateBuffer18===1)this.aux18=BABYLON.Scalar.Lerp(this.originFrame.aux18,targetFrame.aux18,alpha);else if(this.bufferAttribs.interpolateBuffer18===2)this.aux18=BABYLON.Scalar.LerpAngle(this.originFrame.aux18,targetFrame.aux18,alpha);if(this.bufferAttribs.interpolateBuffer19===1)this.aux19=BABYLON.Scalar.Lerp(this.originFrame.aux19,targetFrame.aux19,alpha);else if(this.bufferAttribs.interpolateBuffer19===2)this.aux19=BABYLON.Scalar.LerpAngle(this.originFrame.aux19,targetFrame.aux19,alpha)}}}if(this.state!==BufferState.INITIALIZING){this.time+=delta}};return InterpolationBuffer}());BABYLON.InterpolationBuffer=InterpolationBuffer})(BABYLON||(BABYLON={}));var PROJECT;(function(PROJECT){var AutoBodyGarage=(function(_super){__extends(AutoBodyGarage,_super);function AutoBodyGarage(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.m_bodyMaterial=null;_this.m_bodyAbtractMesh=null;return _this}AutoBodyGarage.prototype.awake=function(){var mainMaterialIndex=this.getProperty("mainMaterialIndex",0);var mainBodyTransform=this.getProperty("mainBodyTransform");var mainBodyUnityColor=this.getProperty("mainBodyPaintColor");var mainBodyPaintColor=UNITY.Utilities.ParseColor3(mainBodyUnityColor,BABYLON.Color3.White());if(mainBodyTransform!=null){this.m_bodyAbtractMesh=UNITY.Utilities.ParseChildTransform(this.transform,mainBodyTransform);if(this.m_bodyAbtractMesh!=null){if(this.m_bodyAbtractMesh.material instanceof BABYLON.MultiMaterial){var multiMaterial=this.m_bodyAbtractMesh.material;if(multiMaterial.subMaterials!=null&&multiMaterial.subMaterials.length>mainMaterialIndex){var copyMaterial=multiMaterial.clone(multiMaterial.name+"."+this.transform.name);var subMaterial=copyMaterial.subMaterials[mainMaterialIndex];copyMaterial.subMaterials[mainMaterialIndex]=subMaterial.clone(subMaterial.name+"."+this.transform.name);this.m_bodyMaterial=copyMaterial.subMaterials[mainMaterialIndex];this.m_bodyAbtractMesh.material=copyMaterial}}else{this.m_bodyMaterial=this.m_bodyAbtractMesh.material.clone(this.m_bodyAbtractMesh.material.name+"."+this.transform.name);this.m_bodyAbtractMesh.material=this.m_bodyMaterial}if(this.m_bodyMaterial!=null){if(this.m_bodyMaterial.isFrozen)this.m_bodyMaterial.unfreeze();this.m_bodyMaterial.albedoColor.copyFrom(mainBodyPaintColor);this.m_bodyMaterial.freeze()}}else{UNITY.SceneManager.LogWarning("Failed to find auto body mesh for: "+this.transform.name)}}};AutoBodyGarage.prototype.setupVehicleMaterials=function(bodyColor,wheelColor,wheelType,decalIndex){if(wheelColor===void 0){wheelColor=null}if(wheelType===void 0){wheelType=0}if(decalIndex===void 0){decalIndex=0}if(this.m_bodyMaterial!=null){if(this.m_bodyMaterial.isFrozen)this.m_bodyMaterial.unfreeze();this.m_bodyMaterial.albedoColor.copyFrom(bodyColor);this.m_bodyMaterial.freeze()}};return AutoBodyGarage}(UNITY.ScriptComponent));PROJECT.AutoBodyGarage=AutoBodyGarage})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var CheckpointManager=(function(_super){__extends(CheckpointManager,_super);function CheckpointManager(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.checkPointList=null;_this.checkPointCount=0;_this.checkPointIndex=0;_this.nextCheckPoint=0;_this.startRaceTime=0;_this.totalRaceTime=0;_this.lapNumber=0;_this.lapTimer=0;_this.lapTimes=null;_this.playerID=0;_this.playerName="Player";_this.raceOver=false;_this.nextCheckPointName="";return _this}CheckpointManager.prototype.register=function(id,name){this.playerID=id;this.playerName=name;PROJECT.RaceTrackManager.RegisterPlayer(this.playerID,this.playerName)};CheckpointManager.prototype.getLapTimes=function(){return this.lapTimes};CheckpointManager.prototype.getLapNumber=function(){return this.lapNumber};CheckpointManager.prototype.getCheckPoint=function(){return this.checkPointIndex};CheckpointManager.prototype.getPlayerName=function(){return this.playerName};CheckpointManager.prototype.getPlayerID=function(){return this.playerID};CheckpointManager.prototype.getRaceTime=function(){return this.totalRaceTime};CheckpointManager.prototype.getRaceOver=function(){return this.raceOver};CheckpointManager.prototype.start=function(){this.lapTimes=[];this.lapNumber=0;this.nextCheckPoint=0;this.checkPointList=PROJECT.RaceTrackManager.GetCheckpointList();this.checkPointCount=PROJECT.RaceTrackManager.GetCheckpointCount()};CheckpointManager.prototype.update=function(){if(this.raceOver===false){if(this.checkPointList!=null&&this.checkPointList.length>0){var nextCheckpointMesh=this.checkPointList[this.nextCheckPoint];if(nextCheckpointMesh!=null){this.nextCheckPointName=nextCheckpointMesh.name;if(nextCheckpointMesh.intersectsPoint(this.transform.absolutePosition)){this.checkPointIndex=this.nextCheckPoint;if(this.checkPointIndex===0){if(this.lapNumber>0&&this.lapTimer>0){var lapTime=(UNITY.SceneManager.GetGameTime()-this.lapTimer);if(this.lapTimes==null)this.lapTimes=[];this.lapTimes.push(lapTime)}this.lapNumber++;this.lapTimer=UNITY.SceneManager.GetGameTime();if(this.lapNumber>PROJECT.RaceTrackManager.TotalLapCount){this.startRaceTime=0;this.lapNumber=PROJECT.RaceTrackManager.TotalLapCount;this.raceOver=true;PROJECT.RaceTrackManager.EventBus.PostMessage("GameOver");if(PROJECT.RaceTrackManager.WinnerTransform==null){PROJECT.RaceTrackManager.WinnerTransform=this.transform;console.warn("RACE WINNER: "+this.transform.name)}}}this.nextCheckPoint++;if(this.nextCheckPoint>=this.checkPointCount){this.nextCheckPoint=0}}}}}};CheckpointManager.prototype.late=function(){if(this.raceOver===false){if(this.startRaceTime>0){this.totalRaceTime=(UNITY.SceneManager.GetGameTime()-this.startRaceTime)}if(this.playerID>0){PROJECT.RaceTrackManager.UpdateLeaderboard(this.playerID,this.lapNumber,this.checkPointIndex,this.transform.absolutePosition)}}};CheckpointManager.prototype.startRaceTimer=function(){if(this.startRaceTime===0){this.lapTimes=[];this.raceOver=false;this.startRaceTime=UNITY.SceneManager.GetGameTime()}};return CheckpointManager}(UNITY.ScriptComponent));PROJECT.CheckpointManager=CheckpointManager})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var NetworkCarPrediction=(function(_super){__extends(NetworkCarPrediction,_super);function NetworkCarPrediction(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.autoRegister=true;_this.handlerName="VehiclePrediction";_this.extrapolateTimeMs=200;return _this}NetworkCarPrediction.prototype.awake=function(){if(this.autoRegister===true)this.register()};NetworkCarPrediction.prototype.register=function(){var _this=this;BABYLON.NetworkManager.RegisterCustomInterpolationHandler(this.handlerName,function(networkEntity,remoteTransform,deltaTime){_this.HandleUpdate(networkEntity,remoteTransform,deltaTime)})};NetworkCarPrediction.prototype.HandleUpdate=function(networkEntity,remoteTransform,deltaTime){};NetworkCarPrediction.prototype.LegacyHandleUpdate=function(networkEntity,remoteTransform,deltaTime){var entityDeltaTime=0;var entityElaspedTime=0;var entityDeltaTimeMs=(entityDeltaTime*1000);var entityElaspedTimeMs=(entityElaspedTime*1000);if(entityDeltaTimeMs<=this.extrapolateTimeMs&&entityElaspedTimeMs<=this.extrapolateTimeMs){var rotationSlerpFactor=10.0;var rotationLerpSpeed=(rotationSlerpFactor*deltaTime);rotationLerpSpeed=BABYLON.Scalar.Clamp(rotationLerpSpeed,0,1)}else{}};return NetworkCarPrediction}(UNITY.ScriptComponent));PROJECT.NetworkCarPrediction=NetworkCarPrediction})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var RoutePoint=(function(){function RoutePoint(){}return RoutePoint}());PROJECT.RoutePoint=RoutePoint;var PlayerRaceStats=(function(){function PlayerRaceStats(){}return PlayerRaceStats}());PROJECT.PlayerRaceStats=PlayerRaceStats;var RaceTrackManager=(function(_super){__extends(RaceTrackManager,_super);function RaceTrackManager(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.trackNodes=null;_this.raceLineData_1=null;_this.raceLineData_2=null;_this.raceLineData_3=null;_this.raceLineData_4=null;_this.raceLineData_5=null;_this.raceLineColor_1=null;_this.raceLineColor_2=null;_this.raceLineColor_3=null;_this.raceLineColor_4=null;_this.raceLineColor_5=null;_this.debugMeshLines_1=null;_this.debugMeshLines_2=null;_this.debugMeshLines_3=null;_this.debugMeshLines_4=null;_this.debugMeshLines_5=null;_this.p0n=0;_this.p1n=0;_this.p2n=0;_this.p3n=0;_this.i=0;_this.drawDebugLines=false;return _this}Object.defineProperty(RaceTrackManager,"EventBus",{get:function(){if(PROJECT.RaceTrackManager._EventBus==null){PROJECT.RaceTrackManager._EventBus=new UNITY.LocalMessageBus}return PROJECT.RaceTrackManager._EventBus},enumerable:false,configurable:true});RaceTrackManager.prototype.getTrackNodes=function(){return this.trackNodes};RaceTrackManager.prototype.getControlPoints=function(line){var result=null;switch(line){case 0:result=this.raceLineData_1;break;case 1:result=this.raceLineData_2;break;case 2:result=this.raceLineData_3;break;case 3:result=this.raceLineData_4;break;case 4:result=this.raceLineData_5;break}return result};RaceTrackManager.prototype.awake=function(){this.trackNodes=this.getProperty("TrackNodes",this.trackNodes);this.raceLineData_1=this.getProperty("RaceLineData_1",this.raceLineData_1);this.raceLineData_2=this.getProperty("RaceLineData_2",this.raceLineData_2);this.raceLineData_3=this.getProperty("RaceLineData_3",this.raceLineData_3);this.raceLineData_4=this.getProperty("RaceLineData_4",this.raceLineData_4);this.raceLineData_5=this.getProperty("RaceLineData_5",this.raceLineData_5);this.raceLineColor_1=this.getProperty("RaceLineColor_1",this.raceLineColor_1);this.raceLineColor_2=this.getProperty("RaceLineColor_2",this.raceLineColor_2);this.raceLineColor_3=this.getProperty("RaceLineColor_3",this.raceLineColor_3);this.raceLineColor_4=this.getProperty("RaceLineColor_4",this.raceLineColor_4);this.raceLineColor_5=this.getProperty("RaceLineColor_5",this.raceLineColor_5);this.drawDebugLines=this.getProperty("DrawDebugLines",this.drawDebugLines);var index=0;if(this.trackNodes!=null){PROJECT.RaceTrackManager.TrackLength=0;for(index=0;index<this.trackNodes.length;index++){var element=this.trackNodes[index];var t1=this.trackNodes[(index)%this.trackNodes.length];var t2=this.trackNodes[(index+1)%this.trackNodes.length];if(t1!=null&&t2!=null){var rot=UNITY.Utilities.ParseVector4(element.rotation);element.localRotation=new BABYLON.Quaternion(rot.x,rot.y,rot.z,rot.w);element.localPosition=UNITY.Utilities.ParseVector3(element.position);var p1=UNITY.Utilities.ParseVector3(t1.position);var p2=UNITY.Utilities.ParseVector3(t2.position);element.localDistance=PROJECT.RaceTrackManager.TrackLength;PROJECT.RaceTrackManager.TrackLength+=(p1.subtract(p2)).length()}}}console.warn(">>> Race Track Nodes");console.log(this.trackNodes);if(PROJECT.RaceTrackManager.LeaderBoardList==null){PROJECT.RaceTrackManager.LeaderBoardList=[]}if(PROJECT.RaceTrackManager.CheckPointList==null){PROJECT.RaceTrackManager.CheckPointList=this.scene.getMeshesByTags(PROJECT.RaceTrackManager.CheckPointTag);if(PROJECT.RaceTrackManager.CheckPointList!=null&&PROJECT.RaceTrackManager.CheckPointList.length>0){for(index=0;index<PROJECT.RaceTrackManager.CheckPointList.length;index++){PROJECT.RaceTrackManager.CheckPointList[index].refreshBoundingInfo()}}}};RaceTrackManager.prototype.start=function(){var _this=this;if(this.drawDebugLines===true){var index_1=0;var pointSize_1=0.5;var debugLines_1=new BABYLON.TransformNode(this.transform.name+".DebugLines",this.scene);debugLines_1.position.set(0,0,0);debugLines_1.rotationQuaternion=new BABYLON.Quaternion(0,0,0,1);if(this.trackNodes!=null&&this.trackNodes.length>0){var trackNodePos_1_1=[];var trackNodeCol_1=BABYLON.Color3.White();var trackNodeMat_1_1=new BABYLON.StandardMaterial(this.transform.name+".NodeMaterial",this.scene);trackNodeMat_1_1.diffuseColor=trackNodeCol_1;index_1=0;this.trackNodes.forEach(function(node){var trackNodePosition=new BABYLON.Vector3(node.position.x,node.position.y,node.position.z);var trackNodeRotation=new BABYLON.Quaternion(node.rotation.x,node.rotation.y,node.rotation.z,node.rotation.w);trackNodePos_1_1.push(trackNodePosition);var trackNode=BABYLON.MeshBuilder.CreateCylinder(_this.transform.name+".TrackNode_"+index_1,{diameterTop:0,diameterBottom:(pointSize_1*2),height:2.0},_this.scene);trackNode.parent=debugLines_1;trackNode.position.copyFrom(trackNodePosition);trackNode.position.y+=0.5;trackNode.rotationQuaternion=trackNodeRotation.multiply(UNITY.Utilities.FromEuler(90,0,0));trackNode.material=trackNodeMat_1_1;index_1++})}if(this.raceLineData_5!=null&&this.raceLineData_5.length>0){var raceLinePos_5_1=[];var raceLineCol_5=(this.raceLineColor_5!=null)?new BABYLON.Color3(this.raceLineColor_5.r,this.raceLineColor_5.g,this.raceLineColor_5.b):BABYLON.Color3.White();var raceLineMat_5_1=new BABYLON.StandardMaterial(this.transform.name+".PointMaterial_5",this.scene);raceLineMat_5_1.diffuseColor=raceLineCol_5;index_1=0;this.raceLineData_5.forEach(function(point){var raceLinePoint=new BABYLON.Vector3(point.position.x,point.position.y,point.position.z);raceLinePos_5_1.push(raceLinePoint);var controlPoint_5=BABYLON.MeshBuilder.CreateSphere(_this.transform.name+".ControlPoint_5_"+index_1,{segments:24,diameter:(pointSize_1*2)},_this.scene);controlPoint_5.parent=debugLines_1;controlPoint_5.position.copyFrom(raceLinePoint);controlPoint_5.position.y+=0.5;controlPoint_5.material=raceLineMat_5_1;index_1++});this.debugMeshLines_5=BABYLON.MeshBuilder.CreateLines((this.transform.name+".RaceLine_5"),{points:raceLinePos_5_1},this.scene);this.debugMeshLines_5.parent=debugLines_1;this.debugMeshLines_5.position.y+=0.5;this.debugMeshLines_5.color=raceLineCol_5}if(this.raceLineData_4!=null&&this.raceLineData_4.length>0){var raceLinePos_4_1=[];var raceLineCol_4=(this.raceLineColor_4!=null)?new BABYLON.Color3(this.raceLineColor_4.r,this.raceLineColor_4.g,this.raceLineColor_4.b):BABYLON.Color3.White();var raceLineMat_4_1=new BABYLON.StandardMaterial(this.transform.name+".PointMaterial_4",this.scene);raceLineMat_4_1.diffuseColor=raceLineCol_4;index_1=0;this.raceLineData_4.forEach(function(point){var raceLinePoint=new BABYLON.Vector3(point.position.x,point.position.y,point.position.z);raceLinePos_4_1.push(raceLinePoint);var controlPoint_4=BABYLON.MeshBuilder.CreateSphere(_this.transform.name+".ControlPoint_4_"+index_1,{segments:24,diameter:(pointSize_1*2)},_this.scene);controlPoint_4.parent=debugLines_1;controlPoint_4.position.copyFrom(raceLinePoint);controlPoint_4.position.y+=0.5;controlPoint_4.material=raceLineMat_4_1;index_1++});this.debugMeshLines_4=BABYLON.MeshBuilder.CreateLines((this.transform.name+".RaceLine_4"),{points:raceLinePos_4_1},this.scene);this.debugMeshLines_4.parent=debugLines_1;this.debugMeshLines_4.position.y+=0.5;this.debugMeshLines_4.color=raceLineCol_4}if(this.raceLineData_3!=null&&this.raceLineData_3.length>0){var raceLinePos_3_1=[];var raceLineCol_3=(this.raceLineColor_3!=null)?new BABYLON.Color3(this.raceLineColor_3.r,this.raceLineColor_3.g,this.raceLineColor_3.b):BABYLON.Color3.White();var raceLineMat_3_1=new BABYLON.StandardMaterial(this.transform.name+".PointMaterial_3",this.scene);raceLineMat_3_1.diffuseColor=raceLineCol_3;index_1=0;this.raceLineData_3.forEach(function(point){var raceLinePoint=new BABYLON.Vector3(point.position.x,point.position.y,point.position.z);raceLinePos_3_1.push(raceLinePoint);var controlPoint_3=BABYLON.MeshBuilder.CreateSphere(_this.transform.name+".ControlPoint_3_"+index_1,{segments:24,diameter:(pointSize_1*2)},_this.scene);controlPoint_3.parent=debugLines_1;controlPoint_3.position.copyFrom(raceLinePoint);controlPoint_3.position.y+=0.5;controlPoint_3.material=raceLineMat_3_1;index_1++});this.debugMeshLines_3=BABYLON.MeshBuilder.CreateLines((this.transform.name+".RaceLine_3"),{points:raceLinePos_3_1},this.scene);this.debugMeshLines_3.parent=debugLines_1;this.debugMeshLines_3.position.y+=0.5;this.debugMeshLines_3.color=raceLineCol_3}if(this.raceLineData_2!=null&&this.raceLineData_2.length>0){var raceLinePos_2_1=[];var raceLineCol_2=(this.raceLineColor_2!=null)?new BABYLON.Color3(this.raceLineColor_2.r,this.raceLineColor_2.g,this.raceLineColor_2.b):BABYLON.Color3.White();var raceLineMat_2_1=new BABYLON.StandardMaterial(this.transform.name+".PointMaterial_2",this.scene);raceLineMat_2_1.diffuseColor=raceLineCol_2;index_1=0;this.raceLineData_2.forEach(function(point){var raceLinePoint=new BABYLON.Vector3(point.position.x,point.position.y,point.position.z);raceLinePos_2_1.push(raceLinePoint);var controlPoint_2=BABYLON.MeshBuilder.CreateSphere(_this.transform.name+".ControlPoint_2_"+index_1,{segments:24,diameter:(pointSize_1*2)},_this.scene);controlPoint_2.parent=debugLines_1;controlPoint_2.position.copyFrom(raceLinePoint);controlPoint_2.position.y+=0.5;controlPoint_2.material=raceLineMat_2_1;index_1++});this.debugMeshLines_2=BABYLON.MeshBuilder.CreateLines((this.transform.name+".RaceLine_2"),{points:raceLinePos_2_1},this.scene);this.debugMeshLines_2.parent=debugLines_1;this.debugMeshLines_2.position.y+=0.5;this.debugMeshLines_2.color=raceLineCol_2}if(this.raceLineData_1!=null&&this.raceLineData_1.length>0){var raceLinePos_1_1=[];var raceLineCol_1=(this.raceLineColor_1!=null)?new BABYLON.Color3(this.raceLineColor_1.r,this.raceLineColor_1.g,this.raceLineColor_1.b):BABYLON.Color3.White();var raceLineMat_1_1=new BABYLON.StandardMaterial(this.transform.name+".PointMaterial_1",this.scene);raceLineMat_1_1.diffuseColor=raceLineCol_1;index_1=0;this.raceLineData_1.forEach(function(point){var raceLinePoint=new BABYLON.Vector3(point.position.x,point.position.y,point.position.z);raceLinePos_1_1.push(raceLinePoint);var controlPoint_1=BABYLON.MeshBuilder.CreateSphere(_this.transform.name+".ControlPoint_1_"+index_1,{segments:24,diameter:(pointSize_1*2)},_this.scene);controlPoint_1.parent=debugLines_1;controlPoint_1.position.copyFrom(raceLinePoint);controlPoint_1.position.y+=0.5;controlPoint_1.material=raceLineMat_1_1;index_1++});this.debugMeshLines_1=BABYLON.MeshBuilder.CreateLines((this.transform.name+".RaceLine_1"),{points:raceLinePos_1_1},this.scene);this.debugMeshLines_1.parent=debugLines_1;this.debugMeshLines_1.position.y+=0.5;this.debugMeshLines_1.color=raceLineCol_1}}};RaceTrackManager.prototype.after=function(){if(this.isReady()){PROJECT.RaceTrackManager.SortLeaderboardPositionList()}};RaceTrackManager.prototype.destroy=function(){};RaceTrackManager.prototype.getRoutePoint=function(distance){var result=new RoutePoint;this.getRoutePointToRef(distance,result);return result};RaceTrackManager.prototype.getRoutePointToRef=function(distance,result){var p1=this.getRoutePosition(distance);var p2=this.getRoutePosition(distance+0.1);var delta=p2.subtract(p1);result.position=p1.clone();result.direction=delta.normalizeToNew()};RaceTrackManager.prototype.getRoutePosition=function(distance){var result=new BABYLON.Vector3(0,0,0);this.getRoutePositionToRef(distance,result);return result};RaceTrackManager.prototype.getRoutePositionToRef=function(distance,result){var point=0;var dist=BABYLON.Scalar.Repeat(distance,PROJECT.RaceTrackManager.TrackLength);var numPoints=this.trackNodes.length;while(this.trackNodes[point].localDistance<dist){++point}this.p1n=((point-1)+numPoints)%numPoints;this.p2n=point;this.i=BABYLON.Scalar.InverseLerp(this.trackNodes[this.p1n].localDistance,this.trackNodes[this.p2n].localDistance,dist);BABYLON.Vector3.LerpToRef(this.trackNodes[this.p1n].localPosition,this.trackNodes[this.p2n].localPosition,this.i,result)};RaceTrackManager.GetCheckpointTag=function(){return PROJECT.RaceTrackManager.CheckPointTag};RaceTrackManager.GetCheckpointList=function(){return PROJECT.RaceTrackManager.CheckPointList};RaceTrackManager.GetCheckpointCount=function(){return(PROJECT.RaceTrackManager.CheckPointList!=null)?PROJECT.RaceTrackManager.CheckPointList.length:0};RaceTrackManager.GetCheckpointDistance=function(position,lastPointReached,nextPoint){var displacementFromCurrentNode=position.subtract(lastPointReached);var currentSegmentVector=nextPoint.subtract(lastPointReached);var fraction=BABYLON.Vector3.Dot(displacementFromCurrentNode,currentSegmentVector)/currentSegmentVector.lengthSquared();return BABYLON.Scalar.Clamp(fraction)};RaceTrackManager.RegisterVehicle=function(vehicle){if(PROJECT.RaceTrackManager.PlayerVehicleList==null)PROJECT.RaceTrackManager.PlayerVehicleList=[];PROJECT.RaceTrackManager.PlayerVehicleList.push(vehicle)};RaceTrackManager.GetPlayerVehicles=function(){return PROJECT.RaceTrackManager.PlayerVehicleList};RaceTrackManager.RegisterPlayer=function(id,name){var player=new PROJECT.PlayerRaceStats;player.id=id,player.name=name;player.position=0;if(PROJECT.RaceTrackManager.LeaderBoardList==null)PROJECT.RaceTrackManager.LeaderBoardList=[];PROJECT.RaceTrackManager.LeaderBoardList.push(player)};RaceTrackManager.UpdateLeaderboard=function(id,lap,checkpoint,position){if(PROJECT.RaceTrackManager.LeaderBoardList!=null&&PROJECT.RaceTrackManager.LeaderBoardList.length>0){var leaderboard=PROJECT.RaceTrackManager.LeaderBoardList;for(var index=0;index<leaderboard.length;index++){var element=leaderboard[index];if(element.id===id){if(PROJECT.RaceTrackManager.CheckPointList!=null&&PROJECT.RaceTrackManager.CheckPointList.length>0){var checkPointCount=PROJECT.RaceTrackManager.CheckPointList.length;var nextCheckPointIndex=(checkpoint+1);if(nextCheckPointIndex>=checkPointCount)nextCheckPointIndex=0;var startCheckpointMesh=PROJECT.RaceTrackManager.CheckPointList[checkpoint];var nextCheckpointMesh=PROJECT.RaceTrackManager.CheckPointList[nextCheckPointIndex];var checkPointFraction=PROJECT.RaceTrackManager.GetCheckpointDistance(position,startCheckpointMesh.absolutePosition,nextCheckpointMesh.absolutePosition);element.position=(((lap*1000)+checkpoint)+checkPointFraction)}break}}}};RaceTrackManager.GetLeaderboardPosition=function(id){var result=-1;if(PROJECT.RaceTrackManager.LeaderBoardList!=null&&PROJECT.RaceTrackManager.LeaderBoardList.length>0){var leaderboard=PROJECT.RaceTrackManager.LeaderBoardList;for(var index=0;index<leaderboard.length;index++){var element=leaderboard[index];if(element.id===id){result=(index+1);break}}}return result};RaceTrackManager.GetLeaderboardPositionList=function(){return PROJECT.RaceTrackManager.LeaderBoardList};RaceTrackManager.SortLeaderboardPositionList=function(){if(PROJECT.RaceTrackManager.LeaderBoardList!=null&&PROJECT.RaceTrackManager.LeaderBoardList.length>0){var leaderboard=PROJECT.RaceTrackManager.LeaderBoardList;leaderboard.sort(function(left,right){if(left.position<right.position)return 1;if(left.position>right.position)return-1;return 0})}};RaceTrackManager.TrackLength=0;RaceTrackManager.TotalLapCount=3;RaceTrackManager.WinnerTransform=null;RaceTrackManager.CheckPointTag="Checkpoint";RaceTrackManager.CheckPointList=null;RaceTrackManager.LeaderBoardList=null;RaceTrackManager.PlayerVehicleList=null;RaceTrackManager._EventBus=null;return RaceTrackManager}(UNITY.ScriptComponent));PROJECT.RaceTrackManager=RaceTrackManager})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var RemoteCarController=(function(_super){__extends(RemoteCarController,_super);function RemoteCarController(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.centerOfMass=0.4;_this.burnoutWheelPitch=0.85;_this.linkTrackManager=true;_this.playVehicleSounds=true;_this.smokeTexture=null;_this.skidThreashold=0.65;_this.smokeIntensity=150;_this.wheelDrawVelocity=0.02;_this.smokeOpacity=0.1;_this.smokeDonuts=2.0;_this.steeringWheelHub=null;_this.steeringWheelAxis=2;_this.maxSteeringAngle=35.0;_this.maxSteeringSpeed=10.0;_this._animator=null;_this._engineAudioSource=null;_this._skidAudioSource=null;_this.brakeLightsMesh=null;_this.brakeLightsTrans=null;_this.reverseLightsMesh=null;_this.reverseLightsTrans=null;_this.frontLeftWheelTrans=null;_this.frontRightWheelTrans=null;_this.backLeftWheelTrans=null;_this.backRightWheelTrans=null;_this.frontLeftWheelMesh=null;_this.frontRightWheelMesh=null;_this.backLeftWheelMesh=null;_this.backRightWheelMesh=null;_this.frontLeftWheelEmitter=null;_this.frontRightWheelEmitter=null;_this.backLeftWheelEmitter=null;_this.backRightWheelEmitter=null;_this.frontLeftWheelParticle=null;_this.frontRightWheelParticle=null;_this.backLeftWheelParticle=null;_this.backRightWheelParticle=null;_this.frontLeftContact=false;_this.frontRightContact=false;_this.rearLeftContact=false;_this.rearRightContact=false;_this.frontLeftContactTag="";_this.frontRightContactTag="";_this.rearLeftContactTag="";_this.rearRightContactTag="";_this.frontLeftContactPoint=new BABYLON.Vector3(0,0,0);_this.frontRightContactPoint=new BABYLON.Vector3(0,0,0);_this.rearLeftContactPoint=new BABYLON.Vector3(0,0,0);_this.rearRightContactPoint=new BABYLON.Vector3(0,0,0);_this.frontLeftContactNormal=new BABYLON.Vector3(0,0,0);_this.frontRightContactNormal=new BABYLON.Vector3(0,0,0);_this.rearLeftContactNormal=new BABYLON.Vector3(0,0,0);_this.rearRightContactNormal=new BABYLON.Vector3(0,0,0);_this.frontLeftSensorLine=null;_this.frontRightSensorLine=null;_this.rearLeftSensorLine=null;_this.rearRightSensorLine=null;_this.startRaycastPosition=new BABYLON.Vector3(0,0,0);_this.endRaycastPosition=new BABYLON.Vector3(0,0,0);_this.smokeIntensityFactor=0;_this.downDirection=new BABYLON.Vector3(0,-1,0);_this.downDistance=2.0;_this.lastPitch=0;_this.lastBrake=0;_this.lastReverse=0;_this.lastBurnout=0;_this.lastSteering=0;_this.lastSKID_FL=0;_this.lastSKID_FR=0;_this.lastSKID_RL=0;_this.lastSKID_RR=0;_this.lastSPIN_FL=0;_this.lastSPIN_FR=0;_this.lastSPIN_RL=0;_this.lastSPIN_RR=0;_this.PITCH_FL=0;_this.PITCH_FR=0;_this.PITCH_RL=0;_this.PITCH_RR=0;_this.WHEEL_SKID_PITCH=0;_this.m_frontLeftWheelSkid=-1;_this.m_frontRightWheelSkid=-1;_this.m_backLeftWheelSkid=-1;_this.m_backRightWheelSkid=-1;_this.m_velocityOffset=new BABYLON.Vector3(0,0,0);_this.m_linearVelocity=new BABYLON.Vector3(0,0,0);_this.m_lastPosition=new BABYLON.Vector3(0,0,0);_this.m_positionCenter=new BABYLON.Vector3(0,0,0);_this.m_scaledVelocity=0;return _this}RemoteCarController.prototype.getFrontLeftWheelContact=function(){return this.frontLeftContact};RemoteCarController.prototype.getFrontRightWheelContact=function(){return this.frontRightContact};RemoteCarController.prototype.getRearLeftWheelContact=function(){return this.rearLeftContact};RemoteCarController.prototype.getRearRightWheelContact=function(){return this.rearRightContact};RemoteCarController.prototype.getFrontLeftWheelContactTag=function(){return this.frontLeftContactTag};RemoteCarController.prototype.getFrontRightWheelContactTag=function(){return this.frontRightContactTag};RemoteCarController.prototype.getRearLeftWheelContactTag=function(){return this.rearLeftContactTag};RemoteCarController.prototype.getRearRightWheelContactTag=function(){return this.rearRightContactTag};RemoteCarController.prototype.getFrontLeftWheelContactPoint=function(){return this.frontLeftContactPoint};RemoteCarController.prototype.getFrontRightWheelContactPoint=function(){return this.frontRightContactPoint};RemoteCarController.prototype.getRearLeftWheelContactPoint=function(){return this.rearLeftContactPoint};RemoteCarController.prototype.getRearRightWheelContactPoint=function(){return this.rearRightContactPoint};RemoteCarController.prototype.getFrontLeftWheelContactNormal=function(){return this.frontLeftContactNormal};RemoteCarController.prototype.getFrontRightWheelContactNormal=function(){return this.frontRightContactNormal};RemoteCarController.prototype.getRearLeftWheelContactNormal=function(){return this.rearLeftContactNormal};RemoteCarController.prototype.getRearRightWheelContactNormal=function(){return this.rearRightContactNormal};RemoteCarController.prototype.awake=function(){this.centerOfMass=this.getProperty("centerOfMass",this.centerOfMass);this.burnoutWheelPitch=this.getProperty("burnoutWheelPitch",this.burnoutWheelPitch);this.linkTrackManager=this.getProperty("linkTrackManager",this.linkTrackManager);this.playVehicleSounds=this.getProperty("playVehicleSounds",this.playVehicleSounds);this.wheelDrawVelocity=this.getProperty("wheelDrawVelocity",this.wheelDrawVelocity);this.skidThreashold=this.getProperty("skidThreashold",this.skidThreashold);this.smokeIntensity=this.getProperty("smokeIntensity",this.smokeIntensity);this.smokeOpacity=this.getProperty("smokeOpacity",this.smokeOpacity);this.smokeDonuts=this.getProperty("smokeDonuts",this.smokeDonuts);this.steeringWheelAxis=this.getProperty("steeringWheelAxis",this.steeringWheelAxis);this.maxSteeringAngle=this.getProperty("maxSteeringAngle",this.maxSteeringAngle);this.maxSteeringSpeed=this.getProperty("maxSteeringSpeed",this.maxSteeringSpeed);this.frontLeftWheelTrans=this.getProperty("frontLeftWheelMesh",this.frontLeftWheelTrans);this.frontRightWheelTrans=this.getProperty("frontRightWheelMesh",this.frontRightWheelTrans);this.backLeftWheelTrans=this.getProperty("rearLeftWheelMesh",this.backLeftWheelTrans);this.backRightWheelTrans=this.getProperty("rearRightWheelMesh",this.backRightWheelTrans);this.brakeLightsTrans=this.getProperty("brakeLightsMesh",this.brakeLightsTrans);this.reverseLightsTrans=this.getProperty("reverseLightsMesh",this.reverseLightsTrans);var smokeTextureInfo=this.getProperty("smokeTexture");if(smokeTextureInfo!=null){this.smokeTexture=UNITY.Utilities.ParseTexture(smokeTextureInfo,this.scene)}if(this.linkTrackManager===true)PROJECT.RaceTrackManager.RegisterVehicle(this.transform);this._animator=this.getComponent("UNITY.AnimationState");if(this._animator==null){var animationNode=this.getChildWithScript("UNITY.AnimationState");if(animationNode!=null){this._animator=UNITY.SceneManager.FindScriptComponent(animationNode,"UNITY.AnimationState")}else{}}this._engineAudioSource=this.getComponent("UNITY.AudioSource");if(this._engineAudioSource==null)UNITY.SceneManager.LogWarning("No engine audio source manager found for: "+this.transform.name);var steeringWheelNode=this.getProperty("steeringWheelHub");if(steeringWheelNode!=null&&steeringWheelNode.name!=null&&steeringWheelNode.name!==""){this.steeringWheelHub=this.getChildNode(steeringWheelNode.name,UNITY.SearchType.IndexOf,false)}var brakeLightslName=(this.brakeLightsTrans!=null&&this.brakeLightsTrans.name!=null&&this.brakeLightsTrans.name!=="")?this.brakeLightsTrans.name:null;var reverseLightslName=(this.reverseLightsTrans!=null&&this.reverseLightsTrans.name!=null&&this.reverseLightsTrans.name!=="")?this.reverseLightsTrans.name:null;var frontLeftWheelName=(this.frontLeftWheelTrans!=null&&this.frontLeftWheelTrans.name!=null&&this.frontLeftWheelTrans.name!=="")?this.frontLeftWheelTrans.name:null;var frontRightWheelName=(this.frontRightWheelTrans!=null&&this.frontRightWheelTrans.name!=null&&this.frontRightWheelTrans.name!=="")?this.frontRightWheelTrans.name:null;var backLeftWheelName=(this.backLeftWheelTrans!=null&&this.backLeftWheelTrans.name!=null&&this.backLeftWheelTrans.name!=="")?this.backLeftWheelTrans.name:null;var backRightWheelName=(this.backRightWheelTrans!=null&&this.backRightWheelTrans.name!=null&&this.backRightWheelTrans.name!=="")?this.backRightWheelTrans.name:null;if(brakeLightslName!=null){this.brakeLightsMesh=this.getChildNode(brakeLightslName,UNITY.SearchType.IndexOf,false);if(this.brakeLightsMesh!=null){this.brakeLightsMesh.isVisible=false}}if(reverseLightslName!=null){this.reverseLightsMesh=this.getChildNode(reverseLightslName,UNITY.SearchType.IndexOf,false);if(this.reverseLightsMesh!=null){this.reverseLightsMesh.isVisible=false}}this.frontLeftWheelMesh=this.getChildNode(frontLeftWheelName,UNITY.SearchType.IndexOf,false);if(this.frontLeftWheelMesh!=null){this.frontLeftWheelMesh.spinner=UNITY.SceneManager.FindChildTransformNode(this.frontLeftWheelMesh,"Wheel",UNITY.SearchType.IndexOf,true);this.frontLeftWheelEmitter=new BABYLON.AbstractMesh("Emitter_FL");this.frontLeftWheelEmitter.parent=this.frontLeftWheelMesh.spinner||this.frontLeftWheelMesh;this.frontLeftWheelEmitter.position=new BABYLON.Vector3(0,0,0);this.frontLeftWheelParticle=this.createSmokeParticleSystem(this.transform.name+"Smoke_FL",this.frontLeftWheelEmitter)}this.frontRightWheelMesh=this.getChildNode(frontRightWheelName,UNITY.SearchType.IndexOf,false);if(this.frontRightWheelMesh!=null){this.frontRightWheelMesh.spinner=UNITY.SceneManager.FindChildTransformNode(this.frontRightWheelMesh,"Wheel",UNITY.SearchType.IndexOf,true);this.frontRightWheelEmitter=new BABYLON.AbstractMesh("Emitter_FR");this.frontRightWheelEmitter.parent=this.frontRightWheelMesh.spinner||this.frontRightWheelMesh;this.frontRightWheelEmitter.position=new BABYLON.Vector3(0,0,0);this.frontRightWheelParticle=this.createSmokeParticleSystem(this.transform.name+"Smoke_FR",this.frontRightWheelEmitter)}this.backLeftWheelMesh=this.getChildNode(backLeftWheelName,UNITY.SearchType.IndexOf,false);if(this.backLeftWheelMesh!=null){this.backLeftWheelMesh.spinner=UNITY.SceneManager.FindChildTransformNode(this.backLeftWheelMesh,"Wheel",UNITY.SearchType.IndexOf,true);this.backLeftWheelEmitter=new BABYLON.AbstractMesh("Emitter_RL");this.backLeftWheelEmitter.parent=this.backLeftWheelMesh.spinner||this.backLeftWheelMesh;this.backLeftWheelEmitter.position=new BABYLON.Vector3(0,0,0);this.backLeftWheelParticle=this.createSmokeParticleSystem(this.transform.name+"Smoke_RL",this.backLeftWheelEmitter)}this.backRightWheelMesh=this.getChildNode(backRightWheelName,UNITY.SearchType.IndexOf,false);if(this.backRightWheelMesh!=null){this.backRightWheelMesh.spinner=UNITY.SceneManager.FindChildTransformNode(this.backRightWheelMesh,"Wheel",UNITY.SearchType.IndexOf,true);this.backRightWheelEmitter=new BABYLON.AbstractMesh("Emitter_RR");this.backRightWheelEmitter.parent=this.backRightWheelMesh.spinner||this.backRightWheelMesh;this.backRightWheelEmitter.position=new BABYLON.Vector3(0,0,0);this.backRightWheelParticle=this.createSmokeParticleSystem(this.transform.name+"Smoke_RR",this.backRightWheelEmitter)}if(this._skidAudioSource==null&&this.backRightWheelMesh!=null)this._skidAudioSource=UNITY.SceneManager.FindScriptComponent(this.backRightWheelMesh,"UNITY.AudioSource");if(this._skidAudioSource==null&&this.backLeftWheelMesh!=null)this._skidAudioSource=UNITY.SceneManager.FindScriptComponent(this.backLeftWheelMesh,"UNITY.AudioSource");if(this._skidAudioSource==null&&this.frontRightWheelMesh!=null)this._skidAudioSource=UNITY.SceneManager.FindScriptComponent(this.frontRightWheelMesh,"UNITY.AudioSource");if(this._skidAudioSource==null&&this.frontLeftWheelMesh!=null)this._skidAudioSource=UNITY.SceneManager.FindScriptComponent(this.frontLeftWheelMesh,"UNITY.AudioSource");if(this._skidAudioSource==null)UNITY.SceneManager.LogWarning("No skid audio source manager found for: "+this.transform.name)};RemoteCarController.prototype.start=function(){this.m_positionCenter.set(0,0,-this.centerOfMass)};RemoteCarController.prototype.update=function(){if(UNITY.EntityController.HasNetworkEntity(this.transform)){this.lastPitch=UNITY.EntityController.QueryBufferedAttribute(this.transform,0);this.lastBrake=UNITY.EntityController.QueryBufferedAttribute(this.transform,1);this.lastReverse=UNITY.EntityController.QueryBufferedAttribute(this.transform,2);this.lastBurnout=UNITY.EntityController.QueryBufferedAttribute(this.transform,3);this.lastSKID_FL=UNITY.EntityController.QueryBufferedAttribute(this.transform,4);this.lastSKID_FR=UNITY.EntityController.QueryBufferedAttribute(this.transform,5);this.lastSKID_RL=UNITY.EntityController.QueryBufferedAttribute(this.transform,6);this.lastSKID_RR=UNITY.EntityController.QueryBufferedAttribute(this.transform,7);this.lastSPIN_FL=UNITY.EntityController.QueryBufferedAttribute(this.transform,8);this.lastSPIN_FR=UNITY.EntityController.QueryBufferedAttribute(this.transform,9);this.lastSPIN_RL=UNITY.EntityController.QueryBufferedAttribute(this.transform,10);this.lastSPIN_RR=UNITY.EntityController.QueryBufferedAttribute(this.transform,11);this.lastSteering=UNITY.EntityController.QueryBufferedAttribute(this.transform,12)}this.updateVehicleProperties()};RemoteCarController.prototype.destroy=function(){};RemoteCarController.prototype.updateVehicleProperties=function(){this.m_linearVelocity=this.transform.absolutePosition.subtract(this.m_lastPosition);this.m_scaledVelocity=(this.m_linearVelocity.length()/this.getDeltaSeconds());this.m_linearVelocity.normalize();this.m_linearVelocity.scaleInPlace(this.m_scaledVelocity);if(this.wheelDrawVelocity>0){this.m_velocityOffset.copyFrom(this.m_linearVelocity);this.m_velocityOffset.scaleInPlace(this.wheelDrawVelocity)}else{this.m_velocityOffset.set(0,0,0)}this.m_lastPosition.copyFrom(this.transform.absolutePosition);this.castWheelContactRays();if(this.playVehicleSounds===true){if(this._engineAudioSource!=null){var engineSoundClip=this._engineAudioSource.getSoundClip();if(engineSoundClip!=null)engineSoundClip.setPlaybackRate(this.lastPitch)}}var SPIN_FL_Transform=this.frontLeftWheelMesh.spinner;var SPIN_FR_Transform=this.frontRightWheelMesh.spinner;var SPIN_RL_Transform=this.backLeftWheelMesh.spinner;var SPIN_RR_Transform=this.backRightWheelMesh.spinner;if(SPIN_FL_Transform!=null&&SPIN_FL_Transform.rotationQuaternion!=null){var SPIN_FL_Rotation=BABYLON.Quaternion.FromEulerAngles(this.lastSPIN_FL,0,0);BABYLON.Quaternion.SlerpToRef(SPIN_FL_Transform.rotationQuaternion,SPIN_FL_Rotation,0.5,SPIN_FL_Transform.rotationQuaternion)}if(SPIN_FR_Transform!=null&&SPIN_FR_Transform.rotationQuaternion!=null){var SPIN_FR_Rotation=BABYLON.Quaternion.FromEulerAngles(this.lastSPIN_FR,0,0);BABYLON.Quaternion.SlerpToRef(SPIN_FR_Transform.rotationQuaternion,SPIN_FR_Rotation,0.5,SPIN_FR_Transform.rotationQuaternion)}if(SPIN_RL_Transform!=null&&SPIN_RL_Transform.rotationQuaternion!=null){var SPIN_RL_Rotation=BABYLON.Quaternion.FromEulerAngles(this.lastSPIN_RL,0,0);BABYLON.Quaternion.SlerpToRef(SPIN_RL_Transform.rotationQuaternion,SPIN_RL_Rotation,0.5,SPIN_RL_Transform.rotationQuaternion)}if(SPIN_RR_Transform!=null&&SPIN_RR_Transform.rotationQuaternion!=null){var SPIN_RR_Rotation=BABYLON.Quaternion.FromEulerAngles(this.lastSPIN_RR,0,0);BABYLON.Quaternion.SlerpToRef(SPIN_RR_Transform.rotationQuaternion,SPIN_RR_Rotation,0.5,SPIN_RR_Transform.rotationQuaternion)}this.smokeDonuts=BABYLON.Scalar.Clamp(this.smokeDonuts,1,10);this.smokeIntensityFactor=this.smokeIntensity;if(this.lastBurnout>0)this.smokeIntensityFactor*=this.smokeDonuts;if(this.lastSKID_FL>0&&this.frontLeftContact===true){var skidScaleFL=BABYLON.Scalar.Normalize(this.lastSKID_FL,this.skidThreashold,1.0);this.m_frontLeftWheelSkid=PROJECT.SkidMarkManager.AddSkidMarkSegment(this.frontLeftContactPoint,this.frontLeftContactNormal,skidScaleFL,this.m_frontLeftWheelSkid);if(this.frontLeftWheelParticle!=null){if(this.frontLeftWheelParticle.isStarted()===false){this.frontLeftWheelParticle.start()}var smoke_FL=this.lastSKID_FL*this.lastSKID_FL;this.frontLeftWheelParticle.emitRate=this.smokeIntensityFactor*smoke_FL;this.frontLeftWheelParticle.minSize=0.2*smoke_FL+0.2;this.frontLeftWheelParticle.maxSize=1.5*smoke_FL+1.2}}else{if(this.frontLeftWheelParticle!=null)this.frontLeftWheelParticle.emitRate=0;this.m_frontLeftWheelSkid=-1}if(this.lastSKID_FR>0&&this.frontRightContact===true){var skidScaleFR=BABYLON.Scalar.Normalize(this.lastSKID_FR,this.skidThreashold,1.0);this.m_frontRightWheelSkid=PROJECT.SkidMarkManager.AddSkidMarkSegment(this.frontRightContactPoint,this.frontRightContactNormal,skidScaleFR,this.m_frontRightWheelSkid);if(this.frontRightWheelParticle!=null){if(this.frontRightWheelParticle.isStarted()===false){this.frontRightWheelParticle.start()}var smoke_FR=this.lastSKID_FR*this.lastSKID_FR;this.frontRightWheelParticle.emitRate=this.smokeIntensityFactor*smoke_FR;this.frontRightWheelParticle.minSize=0.2*smoke_FR+0.2;this.frontRightWheelParticle.maxSize=1.5*smoke_FR+1.2}}else{if(this.frontRightWheelParticle!=null)this.frontRightWheelParticle.emitRate=0;this.m_frontRightWheelSkid=-1}this.PITCH_FL=this.lastSKID_FL;this.PITCH_FR=this.lastSKID_FR;if(this.lastBurnout>0){this.PITCH_FL*=this.burnoutWheelPitch;this.PITCH_FR*=this.burnoutWheelPitch}this.PITCH_FL*=0.75;this.PITCH_FR*=0.75;if(this.lastSKID_RL>0&&this.rearLeftContact===true){var skidScaleRL=BABYLON.Scalar.Normalize(this.lastSKID_RL,this.skidThreashold,1.0);this.m_backLeftWheelSkid=PROJECT.SkidMarkManager.AddSkidMarkSegment(this.rearLeftContactPoint,this.rearLeftContactNormal,skidScaleRL,this.m_backLeftWheelSkid);if(this.backLeftWheelParticle!=null){if(this.backLeftWheelParticle.isStarted()===false){this.backLeftWheelParticle.start()}var smoke_RL=this.lastSKID_RL*this.lastSKID_RL;this.backLeftWheelParticle.emitRate=this.smokeIntensityFactor*smoke_RL;this.backLeftWheelParticle.minSize=0.2*smoke_RL+0.2;this.backLeftWheelParticle.maxSize=1.5*smoke_RL+1.2}}else{if(this.backLeftWheelParticle!=null)this.backLeftWheelParticle.emitRate=0;this.m_backLeftWheelSkid=-1}if(this.lastSKID_RR>0&&this.rearRightContact===true){var skidScaleRR=BABYLON.Scalar.Normalize(this.lastSKID_RR,this.skidThreashold,1.0);this.m_backRightWheelSkid=PROJECT.SkidMarkManager.AddSkidMarkSegment(this.rearRightContactPoint,this.rearRightContactNormal,skidScaleRR,this.m_backRightWheelSkid);if(this.backRightWheelParticle!=null){if(this.backRightWheelParticle.isStarted()===false){this.backRightWheelParticle.start()}var smoke_RR=this.lastSKID_RR*this.lastSKID_RR;this.backRightWheelParticle.emitRate=this.smokeIntensityFactor*smoke_RR;this.backRightWheelParticle.minSize=0.2*smoke_RR+0.2;this.backRightWheelParticle.maxSize=1.5*smoke_RR+1.2}}else{if(this.backRightWheelParticle!=null)this.backRightWheelParticle.emitRate=0;this.m_backRightWheelSkid=-1}this.PITCH_RL=this.lastSKID_RL;this.PITCH_RR=this.lastSKID_RR;if(this.lastBurnout>0){this.PITCH_RL*=this.burnoutWheelPitch;this.PITCH_RR*=this.burnoutWheelPitch}this.WHEEL_SKID_PITCH=0;if(this.PITCH_FL>this.WHEEL_SKID_PITCH)this.WHEEL_SKID_PITCH=this.PITCH_FL;if(this.PITCH_FR>this.WHEEL_SKID_PITCH)this.WHEEL_SKID_PITCH=this.PITCH_FR;if(this.PITCH_RL>this.WHEEL_SKID_PITCH)this.WHEEL_SKID_PITCH=this.PITCH_RL;if(this.PITCH_RR>this.WHEEL_SKID_PITCH)this.WHEEL_SKID_PITCH=this.PITCH_RR;if(this.playVehicleSounds===true){if(this._skidAudioSource!=null){var skidSoundClip=this._skidAudioSource.getSoundClip();if(skidSoundClip!=null)skidSoundClip.setPlaybackRate(this.WHEEL_SKID_PITCH)}}if(this.steeringWheelHub!=null){if(this.steeringWheelHub.rotationQuaternion==null){this.steeringWheelHub.rotationQuaternion=BABYLON.Quaternion.FromEulerVector(this.steeringWheelHub.rotation)}var degreesSteerAngle=(this.lastSteering*this.maxSteeringAngle);var radiansSteerAngle=BABYLON.Tools.ToRadians(degreesSteerAngle);var xaxis=(this.steeringWheelAxis===0)?radiansSteerAngle:0;var yaxis=(this.steeringWheelAxis===1)?radiansSteerAngle:0;var zaxis=(this.steeringWheelAxis===2)?radiansSteerAngle:0;BABYLON.Quaternion.FromEulerAnglesToRef(xaxis,yaxis,zaxis,this.steeringWheelHub.rotationQuaternion)}if(this._animator!=null)this._animator.setFloat("TurnAngle",this.lastSteering);if(this.brakeLightsMesh!=null){this.brakeLightsMesh.isVisible=(this.lastBrake>0)}if(this.reverseLightsMesh!=null){this.reverseLightsMesh.isVisible=(this.lastReverse>0)}if(this.lastSKID_FL===0&&this.lastSKID_FL===0&&this.lastSKID_FL===0&&this.lastSKID_FL===0){this.smokeIntensityFactor=0}};RemoteCarController.prototype.castWheelContactRays=function(){var raycast=null;this.frontLeftContact=false;this.frontRightContact=false;this.rearLeftContact=false;this.rearRightContact=false;this.frontLeftContactTag="";this.frontRightContactTag="";this.rearLeftContactTag="";this.rearRightContactTag="";this.frontLeftContactPoint.set(0,0,0);this.frontRightContactPoint.set(0,0,0);this.rearLeftContactPoint.set(0,0,0);this.rearRightContactPoint.set(0,0,0);this.frontLeftContactNormal.set(0,0,0);this.frontRightContactNormal.set(0,0,0);this.rearLeftContactNormal.set(0,0,0);this.rearRightContactNormal.set(0,0,0);UNITY.Utilities.GetAbsolutePositionToRef(this.frontLeftWheelMesh,this.startRaycastPosition);UNITY.Utilities.GetAbsolutePositionToRef(this.frontLeftWheelMesh,this.endRaycastPosition,this.downDirection.scale(this.downDistance));this.startRaycastPosition.addInPlace(this.m_velocityOffset);this.endRaycastPosition.addInPlace(this.m_velocityOffset);if(raycast.hasHit===true&&raycast.collisionObject!=null&&raycast.collisionObject.entity!=null){this.frontLeftContact=true;this.frontLeftContactTag=UNITY.SceneManager.GetTransformTag(raycast.collisionObject.entity);this.frontLeftContactPoint.copyFrom(raycast.hitPoint);this.frontLeftContactNormal.copyFrom(raycast.hitNormal)}if(PROJECT.RemoteCarController.ShowSensorLines===true){if(this.frontLeftSensorLine==null)this.frontLeftSensorLine=new UNITY.LinesMeshRenderer(this.transform.name+".FrontLeftSensorLine",this.scene);if(this.frontLeftContact===true){this.frontLeftSensorLine.drawLine([this.startRaycastPosition,raycast.hitPoint],BABYLON.Color3.Yellow())}else{this.frontLeftSensorLine.drawLine([this.startRaycastPosition,this.endRaycastPosition],BABYLON.Color3.Blue())}}UNITY.Utilities.GetAbsolutePositionToRef(this.frontRightWheelMesh,this.startRaycastPosition);UNITY.Utilities.GetAbsolutePositionToRef(this.frontRightWheelMesh,this.endRaycastPosition,this.downDirection.scale(this.downDistance));this.startRaycastPosition.addInPlace(this.m_velocityOffset);this.endRaycastPosition.addInPlace(this.m_velocityOffset);if(raycast.hasHit===true&&raycast.collisionObject!=null&&raycast.collisionObject.entity!=null){this.frontRightContact=true;this.frontRightContactTag=UNITY.SceneManager.GetTransformTag(raycast.collisionObject.entity);this.frontRightContactPoint.copyFrom(raycast.hitPoint);this.frontRightContactNormal.copyFrom(raycast.hitNormal)}if(PROJECT.RemoteCarController.ShowSensorLines===true){if(this.frontRightSensorLine==null)this.frontRightSensorLine=new UNITY.LinesMeshRenderer(this.transform.name+".FrontRightSensorLine",this.scene);if(this.frontRightContact===true){this.frontRightSensorLine.drawLine([this.startRaycastPosition,raycast.hitPoint],BABYLON.Color3.Yellow())}else{this.frontRightSensorLine.drawLine([this.startRaycastPosition,this.endRaycastPosition],BABYLON.Color3.Blue())}}UNITY.Utilities.GetAbsolutePositionToRef(this.backLeftWheelMesh,this.startRaycastPosition);UNITY.Utilities.GetAbsolutePositionToRef(this.backLeftWheelMesh,this.endRaycastPosition,this.downDirection.scale(this.downDistance));this.startRaycastPosition.addInPlace(this.m_velocityOffset);this.endRaycastPosition.addInPlace(this.m_velocityOffset);if(raycast.hasHit===true&&raycast.collisionObject!=null&&raycast.collisionObject.entity!=null){this.rearLeftContact=true;this.rearLeftContactTag=UNITY.SceneManager.GetTransformTag(raycast.collisionObject.entity);this.rearLeftContactPoint.copyFrom(raycast.hitPoint);this.rearLeftContactNormal.copyFrom(raycast.hitNormal)}if(PROJECT.RemoteCarController.ShowSensorLines===true){if(this.rearLeftSensorLine==null)this.rearLeftSensorLine=new UNITY.LinesMeshRenderer(this.transform.name+".RearLeftSensorLine",this.scene);if(this.rearLeftContact===true){this.rearLeftSensorLine.drawLine([this.startRaycastPosition,raycast.hitPoint],BABYLON.Color3.Yellow())}else{this.rearLeftSensorLine.drawLine([this.startRaycastPosition,this.endRaycastPosition],BABYLON.Color3.Blue())}}UNITY.Utilities.GetAbsolutePositionToRef(this.backRightWheelMesh,this.startRaycastPosition);UNITY.Utilities.GetAbsolutePositionToRef(this.backRightWheelMesh,this.endRaycastPosition,this.downDirection.scale(this.downDistance));this.startRaycastPosition.addInPlace(this.m_velocityOffset);this.endRaycastPosition.addInPlace(this.m_velocityOffset);if(raycast.hasHit===true&&raycast.collisionObject!=null&&raycast.collisionObject.entity!=null){this.rearRightContact=true;this.rearRightContactTag=UNITY.SceneManager.GetTransformTag(raycast.collisionObject.entity);this.rearRightContactPoint.copyFrom(raycast.hitPoint);this.rearRightContactNormal.copyFrom(raycast.hitNormal)}if(PROJECT.RemoteCarController.ShowSensorLines===true){if(this.rearRightSensorLine==null)this.rearRightSensorLine=new UNITY.LinesMeshRenderer(this.transform.name+".RearRightSensorLine",this.scene);if(this.rearRightContact===true){this.rearRightSensorLine.drawLine([this.startRaycastPosition,raycast.hitPoint],BABYLON.Color3.Yellow())}else{this.rearRightSensorLine.drawLine([this.startRaycastPosition,this.endRaycastPosition],BABYLON.Color3.Blue())}}};RemoteCarController.prototype.createSmokeParticleSystem=function(name,emitter){var result=new BABYLON.ParticleSystem(name,10000,this.scene);result.blendMode=BABYLON.ParticleSystem.BLENDMODE_STANDARD;result.particleTexture=this.smokeTexture;result.emitter=emitter;result.emitRate=0;result.updateSpeed=0.01;result.minSize=0.2;result.maxSize=1.3;result.minAngularSpeed=-1.5;result.maxAngularSpeed=1.5;result.minLifeTime=3.0;result.maxLifeTime=5.0;result.addVelocityGradient(0,1);result.addVelocityGradient(0.1,0.7);result.addVelocityGradient(0.7,0.2);result.addVelocityGradient(1.0,0.05);result.gravity=new BABYLON.Vector3(0,-0.1,0);result.minEmitBox=new BABYLON.Vector3(0,-0.25,0);result.maxEmitBox=new BABYLON.Vector3(0,-0.25,0);result.direction1=new BABYLON.Vector3(-1,-1,-1);result.direction2=new BABYLON.Vector3(1,1,1);result.color1=new BABYLON.Color4(0.95,0.95,0.95,this.smokeOpacity);result.color2=new BABYLON.Color4(0.85,0.85,0.85,this.smokeOpacity);result.colorDead=new BABYLON.Color4(0.9,0.9,0.9,(this.smokeOpacity*0.5));return result};RemoteCarController.ShowSensorLines=false;return RemoteCarController}(UNITY.ScriptComponent));PROJECT.RemoteCarController=RemoteCarController})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var SkidMarkSection=(function(){function SkidMarkSection(){this.Pos=BABYLON.Vector3.Zero();this.Normal=BABYLON.Vector3.Zero();this.Tangent=BABYLON.Vector4.Zero();this.Posl=BABYLON.Vector3.Zero();this.Posr=BABYLON.Vector3.Zero();this.Intensity=0.0;this.LastIndex=-1}return SkidMarkSection}());PROJECT.SkidMarkSection=SkidMarkSection;var SkidMarkManager=(function(_super){__extends(SkidMarkManager,_super);function SkidMarkManager(transform,scene,properties){if(properties===void 0){properties={}}var _this=_super.call(this,transform,scene,properties)||this;SkidMarkManager.MAX_MARKS=_this.getProperty("maxSections",SkidMarkManager.MAX_MARKS);SkidMarkManager.MARK_COLOR=UNITY.Utilities.ParseColor3(_this.getProperty("textureColor"),SkidMarkManager.MARK_COLOR);SkidMarkManager.MARK_WIDTH=_this.getProperty("textureWidth",SkidMarkManager.MARK_WIDTH);SkidMarkManager.GROUND_OFFSET=_this.getProperty("groundOffset",SkidMarkManager.GROUND_OFFSET);SkidMarkManager.GPU_TRIANGLES=_this.getProperty("gpuQuadIndices",SkidMarkManager.GPU_TRIANGLES);SkidMarkManager.TEXTURE_MARKS=_this.getProperty("textureMarks",SkidMarkManager.TEXTURE_MARKS);SkidMarkManager.TEX_INTENSITY=_this.getProperty("textureIntensity",SkidMarkManager.TEX_INTENSITY);SkidMarkManager.MIN_DISTANCE=_this.getProperty("textureDistance",SkidMarkManager.MIN_DISTANCE);SkidMarkManager.MIN_SQR_DISTANCE=(SkidMarkManager.MIN_DISTANCE*SkidMarkManager.MIN_DISTANCE);return _this}SkidMarkManager.prototype.start=function(){SkidMarkManager.CreateSkidMarkManager(this.scene)};SkidMarkManager.prototype.update=function(){SkidMarkManager.UpdateSkidMarkManager()};SkidMarkManager.AddSkidMarkSegment=function(pos,normal,intensity,lastIndex){if(SkidMarkManager.SkidMarkMesh==null)return null;SkidMarkManager.TempVector3_POS.set(0,0,0);SkidMarkManager.TempVector3_DIR.set(0,0,0);SkidMarkManager.TempVector3_XDIR.set(0,0,0);SkidMarkManager.TempVector3_SDIR.set(0,0,0);if(intensity>1.0)intensity=1.0;else if(intensity<0.0)return-1.0;if(lastIndex>0){pos.subtractToRef(SkidMarkManager.SkidMarkSections[lastIndex].Pos,SkidMarkManager.TempVector3_POS);var sqrDistance=SkidMarkManager.TempVector3_POS.lengthSquared();if(sqrDistance<SkidMarkManager.MIN_SQR_DISTANCE)return lastIndex}var curSection=SkidMarkManager.SkidMarkSections[SkidMarkManager.SkidMarkIndex];normal.scaleToRef(SkidMarkManager.GROUND_OFFSET,SkidMarkManager.TempVector3_POS);pos.addToRef(SkidMarkManager.TempVector3_POS,curSection.Pos);curSection.Normal.copyFrom(normal);curSection.Intensity=(intensity*SkidMarkManager.TEX_INTENSITY);curSection.LastIndex=lastIndex;if(lastIndex!=-1){var lastSection=SkidMarkManager.SkidMarkSections[lastIndex];curSection.Pos.subtractToRef(lastSection.Pos,SkidMarkManager.TempVector3_DIR);BABYLON.Vector3.CrossToRef(SkidMarkManager.TempVector3_DIR,normal,SkidMarkManager.TempVector3_XDIR);SkidMarkManager.TempVector3_XDIR.normalizeToRef(SkidMarkManager.TempVector3_XDIR);SkidMarkManager.TempVector3_XDIR.scaleToRef(SkidMarkManager.MARK_WIDTH*0.5,SkidMarkManager.TempVector3_SDIR);curSection.Pos.addToRef(SkidMarkManager.TempVector3_SDIR,curSection.Posl);curSection.Pos.subtractToRef(SkidMarkManager.TempVector3_SDIR,curSection.Posr);curSection.Tangent.set(SkidMarkManager.TempVector3_XDIR.x,SkidMarkManager.TempVector3_XDIR.y,SkidMarkManager.TempVector3_XDIR.z,1);if(lastSection.LastIndex===-1){curSection.Pos.addToRef(SkidMarkManager.TempVector3_SDIR,lastSection.Posl);curSection.Pos.subtractToRef(SkidMarkManager.TempVector3_SDIR,lastSection.Posr);lastSection.Tangent.copyFrom(curSection.Tangent)}}SkidMarkManager.AddSkidMarkVertexData();var curIndex=SkidMarkManager.SkidMarkIndex;SkidMarkManager.SkidMarkIndex=++SkidMarkManager.SkidMarkIndex%SkidMarkManager.MAX_MARKS;return curIndex};SkidMarkManager.CreateSkidMarkManager=function(scene){if(SkidMarkManager.SkidMarkMesh==null){var skidmarkMaterial=new BABYLON.StandardMaterial("SkidMarkMaterial",scene);skidmarkMaterial.backFaceCulling=false;skidmarkMaterial.disableLighting=true;skidmarkMaterial.emissiveColor=SkidMarkManager.MARK_COLOR;skidmarkMaterial.diffuseColor=SkidMarkManager.MARK_COLOR;skidmarkMaterial.diffuseTexture=UNITY.Utilities.ParseTexture(SkidMarkManager.TEXTURE_MARKS,scene);if(skidmarkMaterial.diffuseTexture!=null){skidmarkMaterial.diffuseTexture.hasAlpha=true;skidmarkMaterial.useAlphaFromDiffuseTexture=true}skidmarkMaterial.freeze();SkidMarkManager.SkidMarkMesh=new BABYLON.Mesh("SkidMarkMesh",scene);SkidMarkManager.SkidMarkMesh.material=skidmarkMaterial;SkidMarkManager.SkidMarkMesh.renderingGroupId=UNITY.Utilities.DefaultRenderGroup();SkidMarkManager.SkidMarkMesh.alwaysSelectAsActiveMesh=true;SkidMarkManager.SkidMarkMesh.doNotSyncBoundingInfo=true;SkidMarkManager.SkidMarkMesh.receiveShadows=false;SkidMarkManager.SkidMarkMesh.checkCollisions=false;SkidMarkManager.SkidMarkMesh.useVertexColors=true;SkidMarkManager.SkidMarkMesh.hasVertexAlpha=true;SkidMarkManager.SkidMarkMesh.isPickable=false;SkidMarkManager.SkidMarkSections=new Array(SkidMarkManager.MAX_MARKS);for(var i=0;i<SkidMarkManager.SkidMarkSections.length;i++){SkidMarkManager.SkidMarkSections[i]=new SkidMarkSection}SkidMarkManager.SkidBufferPositions=new Float32Array(SkidMarkManager.MAX_MARKS*4*3);SkidMarkManager.SkidBufferNormals=new Float32Array(SkidMarkManager.MAX_MARKS*4*3);SkidMarkManager.SkidBufferTangents=new Float32Array(SkidMarkManager.MAX_MARKS*4*4);SkidMarkManager.SkidBufferColors=new Float32Array(SkidMarkManager.MAX_MARKS*4*4);SkidMarkManager.SkidBufferUvs=new Float32Array(SkidMarkManager.MAX_MARKS*4*2);SkidMarkManager.SkidBufferIndices=new Int32Array(SkidMarkManager.MAX_MARKS*6);var vertexData=new BABYLON.VertexData;vertexData.positions=SkidMarkManager.SkidBufferPositions;vertexData.normals=SkidMarkManager.SkidBufferNormals;vertexData.tangents=SkidMarkManager.SkidBufferTangents;vertexData.colors=SkidMarkManager.SkidBufferColors;vertexData.uvs=SkidMarkManager.SkidBufferUvs;vertexData.indices=SkidMarkManager.SkidBufferIndices;vertexData.applyToMesh(SkidMarkManager.SkidMarkMesh,true);SkidMarkManager.SkidMarkMesh.freezeWorldMatrix()}};SkidMarkManager.AddSkidMarkVertexData=function(){var curr=SkidMarkManager.SkidMarkSections[SkidMarkManager.SkidMarkIndex];if(curr.LastIndex===-1)return;var last=SkidMarkManager.SkidMarkSections[curr.LastIndex];SkidMarkManager.SkidMarkUpdated=true;var index=SkidMarkManager.SkidMarkIndex*4+0;SkidMarkManager.SkidBufferPositions[index*3]=last.Posl.x;SkidMarkManager.SkidBufferPositions[(index*3)+1]=last.Posl.y;SkidMarkManager.SkidBufferPositions[(index*3)+2]=last.Posl.z;index=SkidMarkManager.SkidMarkIndex*4+1;SkidMarkManager.SkidBufferPositions[index*3]=last.Posr.x;SkidMarkManager.SkidBufferPositions[(index*3)+1]=last.Posr.y;SkidMarkManager.SkidBufferPositions[(index*3)+2]=last.Posr.z;index=SkidMarkManager.SkidMarkIndex*4+2;SkidMarkManager.SkidBufferPositions[index*3]=curr.Posl.x;SkidMarkManager.SkidBufferPositions[(index*3)+1]=curr.Posl.y;SkidMarkManager.SkidBufferPositions[(index*3)+2]=curr.Posl.z;index=SkidMarkManager.SkidMarkIndex*4+3;SkidMarkManager.SkidBufferPositions[index*3]=curr.Posr.x;SkidMarkManager.SkidBufferPositions[(index*3)+1]=curr.Posr.y;SkidMarkManager.SkidBufferPositions[(index*3)+2]=curr.Posr.z;index=SkidMarkManager.SkidMarkIndex*4+0;SkidMarkManager.SkidBufferNormals[index*3]=last.Normal.x;SkidMarkManager.SkidBufferNormals[(index*3)+1]=last.Normal.y;SkidMarkManager.SkidBufferNormals[(index*3)+2]=last.Normal.z;index=SkidMarkManager.SkidMarkIndex*4+1;SkidMarkManager.SkidBufferNormals[index*3]=last.Normal.x;SkidMarkManager.SkidBufferNormals[(index*3)+1]=last.Normal.y;SkidMarkManager.SkidBufferNormals[(index*3)+2]=last.Normal.z;index=SkidMarkManager.SkidMarkIndex*4+2;SkidMarkManager.SkidBufferNormals[index*3]=curr.Normal.x;SkidMarkManager.SkidBufferNormals[(index*3)+1]=curr.Normal.y;SkidMarkManager.SkidBufferNormals[(index*3)+2]=curr.Normal.z;index=SkidMarkManager.SkidMarkIndex*4+3;SkidMarkManager.SkidBufferNormals[index*3]=curr.Normal.x;SkidMarkManager.SkidBufferNormals[(index*3)+1]=curr.Normal.y;SkidMarkManager.SkidBufferNormals[(index*3)+2]=curr.Normal.z;index=SkidMarkManager.SkidMarkIndex*4+0;SkidMarkManager.SkidBufferTangents[index*4]=last.Tangent.x;SkidMarkManager.SkidBufferTangents[(index*4)+1]=last.Tangent.y;SkidMarkManager.SkidBufferTangents[(index*4)+2]=last.Tangent.z;SkidMarkManager.SkidBufferTangents[(index*4)+3]=last.Tangent.w;index=SkidMarkManager.SkidMarkIndex*4+1;SkidMarkManager.SkidBufferTangents[index*4]=last.Tangent.x;SkidMarkManager.SkidBufferTangents[(index*4)+1]=last.Tangent.y;SkidMarkManager.SkidBufferTangents[(index*4)+2]=last.Tangent.z;SkidMarkManager.SkidBufferTangents[(index*4)+3]=last.Tangent.w;index=SkidMarkManager.SkidMarkIndex*4+2;SkidMarkManager.SkidBufferTangents[index*4]=curr.Tangent.x;SkidMarkManager.SkidBufferTangents[(index*4)+1]=curr.Tangent.y;SkidMarkManager.SkidBufferTangents[(index*4)+2]=curr.Tangent.z;SkidMarkManager.SkidBufferTangents[(index*4)+3]=curr.Tangent.w;index=SkidMarkManager.SkidMarkIndex*4+3;SkidMarkManager.SkidBufferTangents[index*4]=curr.Tangent.x;SkidMarkManager.SkidBufferTangents[(index*4)+1]=curr.Tangent.y;SkidMarkManager.SkidBufferTangents[(index*4)+2]=curr.Tangent.z;SkidMarkManager.SkidBufferTangents[(index*4)+3]=curr.Tangent.w;index=SkidMarkManager.SkidMarkIndex*4+0;SkidMarkManager.SkidBufferColors[index*4]=1.0;SkidMarkManager.SkidBufferColors[(index*4)+1]=1.0;SkidMarkManager.SkidBufferColors[(index*4)+2]=1.0;SkidMarkManager.SkidBufferColors[(index*4)+3]=last.Intensity;index=SkidMarkManager.SkidMarkIndex*4+1;SkidMarkManager.SkidBufferColors[index*4]=1.0;SkidMarkManager.SkidBufferColors[(index*4)+1]=1.0;SkidMarkManager.SkidBufferColors[(index*4)+2]=1.0;SkidMarkManager.SkidBufferColors[(index*4)+3]=last.Intensity;index=SkidMarkManager.SkidMarkIndex*4+2;SkidMarkManager.SkidBufferColors[index*4]=1.0;SkidMarkManager.SkidBufferColors[(index*4)+1]=1.0;SkidMarkManager.SkidBufferColors[(index*4)+2]=1.0;SkidMarkManager.SkidBufferColors[(index*4)+3]=curr.Intensity;index=SkidMarkManager.SkidMarkIndex*4+3;SkidMarkManager.SkidBufferColors[index*4]=1.0;SkidMarkManager.SkidBufferColors[(index*4)+1]=1.0;SkidMarkManager.SkidBufferColors[(index*4)+2]=1.0;SkidMarkManager.SkidBufferColors[(index*4)+3]=curr.Intensity;index=SkidMarkManager.SkidMarkIndex*4+0;SkidMarkManager.SkidBufferUvs[index*2]=0;SkidMarkManager.SkidBufferUvs[(index*2)+1]=0;index=SkidMarkManager.SkidMarkIndex*4+1;SkidMarkManager.SkidBufferUvs[index*2]=1;SkidMarkManager.SkidBufferUvs[(index*2)+1]=0;index=SkidMarkManager.SkidMarkIndex*4+2;SkidMarkManager.SkidBufferUvs[index*2]=0;SkidMarkManager.SkidBufferUvs[(index*2)+1]=1;index=SkidMarkManager.SkidMarkIndex*4+3;SkidMarkManager.SkidBufferUvs[index*2]=1;SkidMarkManager.SkidBufferUvs[(index*2)+1]=1;SkidMarkManager.SkidBufferIndices[SkidMarkManager.SkidMarkIndex*6+0]=SkidMarkManager.SkidMarkIndex*4+0;SkidMarkManager.SkidBufferIndices[SkidMarkManager.SkidMarkIndex*6+2]=SkidMarkManager.SkidMarkIndex*4+1;SkidMarkManager.SkidBufferIndices[SkidMarkManager.SkidMarkIndex*6+1]=SkidMarkManager.SkidMarkIndex*4+2;SkidMarkManager.SkidBufferIndices[SkidMarkManager.SkidMarkIndex*6+3]=SkidMarkManager.SkidMarkIndex*4+2;SkidMarkManager.SkidBufferIndices[SkidMarkManager.SkidMarkIndex*6+5]=SkidMarkManager.SkidMarkIndex*4+1;SkidMarkManager.SkidBufferIndices[SkidMarkManager.SkidMarkIndex*6+4]=SkidMarkManager.SkidMarkIndex*4+3};SkidMarkManager.UpdateSkidMarkManager=function(){if(SkidMarkManager.SkidMarkMesh!=null&&SkidMarkManager.SkidMarkUpdated===true){SkidMarkManager.SkidMarkUpdated=false;if(SkidMarkManager.SkidMarkMesh.geometry!=null){SkidMarkManager.SkidMarkMesh.geometry.updateVerticesDataDirectly(BABYLON.VertexBuffer.PositionKind,SkidMarkManager.SkidBufferPositions,0,false);SkidMarkManager.SkidMarkMesh.geometry.updateVerticesDataDirectly(BABYLON.VertexBuffer.NormalKind,SkidMarkManager.SkidBufferNormals,0,false);SkidMarkManager.SkidMarkMesh.geometry.updateVerticesDataDirectly(BABYLON.VertexBuffer.TangentKind,SkidMarkManager.SkidBufferTangents,0,false);SkidMarkManager.SkidMarkMesh.geometry.updateVerticesDataDirectly(BABYLON.VertexBuffer.ColorKind,SkidMarkManager.SkidBufferColors,0,false);SkidMarkManager.SkidMarkMesh.geometry.updateVerticesDataDirectly(BABYLON.VertexBuffer.UVKind,SkidMarkManager.SkidBufferUvs,0,false);SkidMarkManager.SkidMarkMesh.geometry.updateIndices(SkidMarkManager.SkidBufferIndices,0,SkidMarkManager.GPU_TRIANGLES)}}};SkidMarkManager.MAX_MARKS=1024;SkidMarkManager.GROUND_OFFSET=0.01;SkidMarkManager.GPU_TRIANGLES=true;SkidMarkManager.MARK_COLOR=BABYLON.Color3.Black();SkidMarkManager.MARK_WIDTH=0.3;SkidMarkManager.TEX_INTENSITY=1.0;SkidMarkManager.MIN_DISTANCE=0.1;SkidMarkManager.MIN_SQR_DISTANCE=(SkidMarkManager.MIN_DISTANCE*SkidMarkManager.MIN_DISTANCE);SkidMarkManager.TEXTURE_MARKS=null;SkidMarkManager.SkidBufferPositions=null;SkidMarkManager.SkidBufferNormals=null;SkidMarkManager.SkidBufferTangents=null;SkidMarkManager.SkidBufferColors=null;SkidMarkManager.SkidBufferUvs=null;SkidMarkManager.SkidBufferIndices=null;SkidMarkManager.SkidMarkSections=null;SkidMarkManager.SkidMarkIndex=0;SkidMarkManager.SkidMarkMesh=null;SkidMarkManager.SkidMarkUpdated=false;SkidMarkManager.TempVector3_POS=new BABYLON.Vector3(0,0,0);SkidMarkManager.TempVector3_DIR=new BABYLON.Vector3(0,0,0);SkidMarkManager.TempVector3_XDIR=new BABYLON.Vector3(0,0,0);SkidMarkManager.TempVector3_SDIR=new BABYLON.Vector3(0,0,0);return SkidMarkManager}(UNITY.ScriptComponent));PROJECT.SkidMarkManager=SkidMarkManager})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var StandardCarController=(function(_super){__extends(StandardCarController,_super);function StandardCarController(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.MIN_RPM=1000;_this.MAX_RPM=6000;_this._animator=null;_this._rigidbody=null;_this._engineAudioSource=null;_this._skidAudioSource=null;_this._nosAudioSource=null;_this.steeringWheelHub=null;_this.steeringWheelAxis=2;_this.maxSteeringAngle=65.0;_this.maxSteeringSpeed=15.0;_this.gearIndex=0;_this.downShift=1000;_this.skiddingTime=0;_this.shiftingTime=0;_this.shiftingSide=1;_this.shiftingBrake=1.0;_this.engineForce=0;_this.handBraking=false;_this.linearDamping=0;_this.angularDamping=0;_this.forwardSpeed=0;_this.absoluteSpeed=0;_this.americanSpeed=0;_this.gradientSpeed=0;_this.frontWheelPower=0;_this.backWheelPower=0;_this.wheelBrakingForce=0;_this.enginePitchLevel=0;_this.smokeIntensityFactor=0;_this.raycastVehicle=null;_this.brakeLightsMesh=null;_this.brakeLightsTrans=null;_this.reverseLightsMesh=null;_this.reverseLightsTrans=null;_this.frontLeftWheelTrans=null;_this.frontRightWheelTrans=null;_this.backLeftWheelTrans=null;_this.backRightWheelTrans=null;_this.frontLeftWheelMesh=null;_this.frontRightWheelMesh=null;_this.backLeftWheelMesh=null;_this.backRightWheelMesh=null;_this.frontLeftWheelEmitter=null;_this.frontRightWheelEmitter=null;_this.backLeftWheelEmitter=null;_this.backRightWheelEmitter=null;_this.frontLeftWheelParticle=null;_this.frontRightWheelParticle=null;_this.backLeftWheelParticle=null;_this.backRightWheelParticle=null;_this.frontLeftWheelCollider=null;_this.frontRightWheelCollider=null;_this.backLeftWheelCollider=null;_this.backRightWheelCollider=null;_this.engineTorqueCurve=null;_this.physicsSteerAngleL=0;_this.physicsSteerAngleR=0;_this.visualSteerAngleL=0;_this.visualSteerAngleR=0;_this.visualSteerBoostL=0;_this.visualSteerBoostR=0;_this.idleNoiseDelta=0;_this.driveNoiseDelta=0;_this.boostSpeedTimer=0;_this.burnoutMeter=0;_this.donutMeter=0;_this.wheelRadius=0;_this.clutchSlip=0;_this.engineRPM=0;_this.pitchRPM=0;_this.shiftRPM=0;_this.SKID_FL=0;_this.SKID_FR=0;_this.SKID_RL=0;_this.SKID_RR=0;_this.PITCH_FL=0;_this.PITCH_FR=0;_this.PITCH_RL=0;_this.PITCH_RR=0;_this.FRONT_LEFT=-1;_this.FRONT_RIGHT=-1;_this.BACK_LEFT=-1;_this.BACK_RIGHT=-1;_this.WHEEL_SKID_PITCH=0;_this.POWER_BOOST_PITCH=0;_this.SPIN_FL_Rotation=new BABYLON.Vector3(0,0,0);_this.SPIN_FR_Rotation=new BABYLON.Vector3(0,0,0);_this.SPIN_RL_Rotation=new BABYLON.Vector3(0,0,0);_this.SPIN_RR_Rotation=new BABYLON.Vector3(0,0,0);_this.smokeTexture=null;_this.skidThreashold=0.65;_this.wheelDrawVelocity=0.02;_this.smokeIntensity=150;_this.smokeOpacity=0.1;_this.smokeDonuts=2.0;_this.noiseTimeScale=1.0;_this.noiseTimeFactor=0;_this.maxBurnoutFactor=1.0;_this.maxSteerBoost=6;_this.overSteerSpeed=1.0;_this.overSteerTimeout=0.2;_this.topEngineSpeed=100;_this.topBoosterSpeed=150;_this.powerChangeRate=5.0;_this.powerCoefficient=1.0;_this.boosterCoefficient=1.0;_this.frictionLerpSpeed=0.5;_this.topSpeedDampener=0.15;_this.lowSpeedSteering=5.0;_this.highSpeedSteering=5.0;_this.donutTurningRadius=5.0;_this.gravitationalForce=3;_this.smoothFlyingForce=250;_this.transmissionRatio=0.75;_this.differentialRatio=3.55;_this.minBoosterSpeed=25.0;_this.maxBoosterTime=10.0;_this.maxPitchControl=0.1;_this.maxFrontBraking=0.0;_this.maxReversePower=0.5;_this.minBrakingForce=50;_this.maxBrakingForce=250;_this.handBrakingForce=2500;_this.handBrakingTimer=0;_this.linearBrakingForce=25.0;_this.angularBrakingForce=0.25;_this.burnoutFrictionSlip=1.0;_this.burnoutTimeDelay=1;_this.burnoutWheelPitch=0.85;_this.burnoutCoefficient=10;_this.burnoutTriggerMark=8;_this.enableAutoBurnouts=false;_this.penaltyGroundTag="Offroad";_this.minPenaltySpeed=65;_this.linearWheelDrag=0.05;_this.frictionWheelSlip=0.215;_this.showSensorLines=false;_this.powerBooster=false;_this.linkTrackManager=true;_this.playVehicleSounds=true;_this.postNetworkAttributes=false;_this.wheelDriveType=0;_this.gearBoxMultiplier=1.0;_this.gearBoxMaxPitching=6500;_this.gearBoxShiftChange=5100;_this.gearBoxShiftDelay=0.35;_this.gearBoxShiftRatios=[4.17,2.34,1.82,1.54,0.96,0.68];_this.gearBoxShiftRanges=[1000,2400,2600,2600,2800,2800];_this.throttleBrakingForce=0;_this.throttleEngineSpeed=0;_this.brakeRecoveryDelay=0.25;_this.brakeRecoverySpeed=0.25;_this.skidRecoverySpeed=0.25;_this.burnoutLerpSpeed=0.05;_this.ackermanWheelBase=2.5;_this.ackermanRearTrack=1.5;_this.ackermanTurnRadius=9;_this.ackermanMaxRadius=12;_this.ackermanTurnFactor=1;_this.roadSurfaceFactor=1.0;_this.movementTilting=false;_this.surfaceDetection=false;_this.idleShakeRate=5.0;_this.idleShakeNoise=0.01;_this.maxForwardAngle=3.0;_this.maxLateralAngle=3.0;_this.lerpForwardFactor=10.0;_this.lerpLateralFactor=10.0;_this.shiftForwardExtra=0.2;_this.shiftLateralExtra=0.2;_this.forwardPitchFactor=0.2;_this.lateralRollFactor=0.2;_this.forwardRecoverRate=0.2;_this.lateralRecoverRate=0.2;_this.lowSpeedScale=1.0;_this.highSpeedScale=5.0;_this.lowForwardNoise=0.05;_this.highForwardNoise=0.05;_this.lowLateralNoise=0.05;_this.highLateralNoise=0.05;_this.speedThreashold=5.0;_this.boosterTransform=null;_this.chassisTransform=null;_this.tiltChassisEulers=new BABYLON.Vector3(0,0,0);_this.m_frontLeftWheel=null;_this.m_frontRightWheel=null;_this.m_backLeftWheel=null;_this.m_backRightWheel=null;_this.m_frontLeftWheelSkid=-1;_this.m_frontRightWheelSkid=-1;_this.m_backLeftWheelSkid=-1;_this.m_backRightWheelSkid=-1;_this.m_angularDampener=new BABYLON.Vector3(1.0,1.0,1.0);_this.m_velocityOffset=new BABYLON.Vector3(0,0,0);_this.m_linearVelocity=new BABYLON.Vector3(0,0,0);_this.m_lastPosition=new BABYLON.Vector3(0,0,0);_this.m_scaledVelocity=0;_this.burnoutTimer=0;_this.restoreTimer=0;_this.cooldownTimer=0;_this.wheelDonuts=false;_this.wheelBurnout=false;_this.wheelSkidding=false;_this.donutSpinTime=0;_this.currentForward=0;_this.currentTurning=0;_this.currentBoosting=false;_this.currentSkidding=false;_this.currentDonuts=false;_this.currentDrivePower=0;_this.targetDrivePower=0;_this.animatorSteerAngle=0;_this.currentPitch=0;_this.currentRoll=0;_this.previousSpeed=0;_this.angularVelocity=new BABYLON.Vector3(0,0,0);_this.frontLeftContact=false;_this.frontRightContact=false;_this.rearLeftContact=false;_this.rearRightContact=false;_this.frontLeftContactTag="";_this.frontRightContactTag="";_this.rearLeftContactTag="";_this.rearRightContactTag="";_this.frontLeftContactPoint=new BABYLON.Vector3(0,0,0);_this.frontRightContactPoint=new BABYLON.Vector3(0,0,0);_this.rearLeftContactPoint=new BABYLON.Vector3(0,0,0);_this.rearRightContactPoint=new BABYLON.Vector3(0,0,0);_this.frontLeftContactNormal=new BABYLON.Vector3(0,0,0);_this.frontRightContactNormal=new BABYLON.Vector3(0,0,0);_this.rearLeftContactNormal=new BABYLON.Vector3(0,0,0);_this.rearRightContactNormal=new BABYLON.Vector3(0,0,0);_this.frontLeftSensorLine=null;_this.frontRightSensorLine=null;_this.rearLeftSensorLine=null;_this.rearRightSensorLine=null;_this.frontLeftFrictionLerping=false;_this.frontRightFrictionLerping=false;_this.rearLeftFrictionLerping=false;_this.rearRightFrictionLerping=false;_this.frontLeftFrictionPenalty=false;_this.frontRightFrictionPenalty=false;_this.rearLeftFrictionPenalty=false;_this.rearRightFrictionPenalty=false;_this.startRaycastPosition=new BABYLON.Vector3(0,0,0);_this.endRaycastPosition=new BABYLON.Vector3(0,0,0);_this.downDirection=new BABYLON.Vector3(0,-1,0);_this.downDistance=2.0;return _this}StandardCarController.prototype.isBraking=function(){return(this.getFootBraking()||this.getHandBraking())};StandardCarController.prototype.isBoosting=function(){return this.currentBoosting};StandardCarController.prototype.getFootBraking=function(){return(this.currentForward<0&&this.forwardSpeed>=0)};StandardCarController.prototype.getHandBraking=function(){return this.handBraking};StandardCarController.prototype.getLinearVelocity=function(){return this.m_linearVelocity};StandardCarController.prototype.getCurrentForward=function(){return this.currentForward};StandardCarController.prototype.getCurrentTurning=function(){return this.currentTurning};StandardCarController.prototype.getCurrentSkidding=function(){return this.currentSkidding};StandardCarController.prototype.getCurrentDonuts=function(){return this.currentDonuts};StandardCarController.prototype.getReverseThrottle=function(){return(this.currentForward<0&&this.forwardSpeed<0)};StandardCarController.prototype.getEnginePitchLevel=function(){return this.enginePitchLevel};StandardCarController.prototype.getCurrentBurnout=function(){return this.wheelBurnout||this.restoreTimer>0};StandardCarController.prototype.getFrontLeftSkid=function(){return this.SKID_FL};StandardCarController.prototype.getFrontRightSkid=function(){return this.SKID_FR};StandardCarController.prototype.getBackLeftSkid=function(){return this.SKID_RL};StandardCarController.prototype.getBackRightSkid=function(){return this.SKID_RR};StandardCarController.prototype.getWheelSkidPitch=function(){return this.WHEEL_SKID_PITCH};StandardCarController.prototype.getRigidbodyPhysics=function(){return this._rigidbody};StandardCarController.prototype.getRaycastVehicle=function(){return this.raycastVehicle};StandardCarController.prototype.getGradientSpeed=function(){return this.gradientSpeed};StandardCarController.prototype.getForwardSpeed=function(){return this.forwardSpeed};StandardCarController.prototype.getAbsoluteSpeed=function(){return this.absoluteSpeed};StandardCarController.prototype.getAmericanSpeed=function(){return this.americanSpeed};StandardCarController.prototype.getTopEngineSpeed=function(){return(this.currentBoosting===true)?this.topBoosterSpeed:this.topEngineSpeed};StandardCarController.prototype.getNormalizedSpeed=function(){return this.americanSpeed/this.getTopEngineSpeed()};StandardCarController.prototype.getMaxReversePower=function(){return this.maxReversePower};StandardCarController.prototype.getCurrentGearIndex=function(){return this.gearIndex};StandardCarController.prototype.getCurrentEngineRPM=function(){return this.engineRPM};StandardCarController.prototype.getCurrentEngineForce=function(){return this.engineForce};StandardCarController.prototype.getCurrentEnginePitch=function(){return BABYLON.Scalar.Clamp((this.pitchRPM/this.gearBoxMaxPitching)+0.1)};StandardCarController.prototype.getGearShiftRatioCount=function(){return(this.gearBoxShiftRatios!=null)?this.gearBoxShiftRatios.length:0};StandardCarController.prototype.getSmokeTextureMask=function(){return this.smokeTexture};StandardCarController.prototype.getBrakeLightsMesh=function(){return this.brakeLightsMesh};StandardCarController.prototype.getReverseLightsMesh=function(){return this.reverseLightsMesh};StandardCarController.prototype.getFrontLeftWheelNode=function(){return this.frontLeftWheelMesh};StandardCarController.prototype.getFrontRightWheelNode=function(){return this.frontRightWheelMesh};StandardCarController.prototype.getBackLeftWheelNode=function(){return this.backLeftWheelMesh};StandardCarController.prototype.getBackRightWheelNode=function(){return this.backRightWheelMesh};StandardCarController.prototype.getWheelBurnoutEnabled=function(){return this.wheelBurnout};StandardCarController.prototype.getWheelDonutsEnabled=function(){return this.wheelDonuts};StandardCarController.prototype.getCurrentDonutSpinTime=function(){return this.donutSpinTime};StandardCarController.prototype.getSmokeIntensityFactor=function(){return this.smokeIntensityFactor};StandardCarController.prototype.getWheelVelocityOffset=function(){return this.m_velocityOffset};StandardCarController.prototype.readBurnoutMeter=function(){return this.burnoutMeter};StandardCarController.prototype.resetBurnoutMeter=function(){this.burnoutMeter=0};StandardCarController.prototype.readDonutMeter=function(){return this.donutMeter};StandardCarController.prototype.resetDonutMeter=function(){this.donutMeter=0};StandardCarController.prototype.getBoosterTime=function(){return this.boostSpeedTimer};StandardCarController.prototype.setBoosterTime=function(time){this.boostSpeedTimer=time};StandardCarController.prototype.resetBoosterTime=function(){this.setBoosterTime(this.maxBoosterTime)};StandardCarController.prototype.awake=function(){this.awakeVehicleState()};StandardCarController.prototype.start=function(){this.initVehicleState()};StandardCarController.prototype.update=function(){this.updateVehicleState()};StandardCarController.prototype.destroy=function(){this.destroyVehicleState()};StandardCarController.prototype.awakeVehicleState=function(){this.engineForce=0;this.frontWheelPower=0;this.backWheelPower=0;this.wheelBrakingForce=0;this.ackermanWheelBase=this.getProperty("ackermanWheelBase",this.ackermanWheelBase);this.ackermanRearTrack=this.getProperty("ackermanRearTrack",this.ackermanRearTrack);this.ackermanTurnRadius=this.getProperty("ackermanTurnRadius",this.ackermanTurnRadius);this.ackermanMaxRadius=this.getProperty("ackermanMaxRadius",this.ackermanMaxRadius);this.wheelDrawVelocity=this.getProperty("wheelDrawVelocity",this.wheelDrawVelocity);this.skidThreashold=this.getProperty("skidThreashold",this.skidThreashold);this.smokeIntensity=this.getProperty("smokeIntensity",this.smokeIntensity);this.smokeOpacity=this.getProperty("smokeOpacity",this.smokeOpacity);this.smokeDonuts=this.getProperty("smokeDonuts",this.smokeDonuts);this.powerBooster=this.getProperty("powerBooster",this.powerBooster);this.movementTilting=this.getProperty("movementTilting",this.movementTilting);this.surfaceDetection=this.getProperty("surfaceDetection",this.surfaceDetection);this.idleShakeNoise=this.getProperty("idleShakeNoise",this.idleShakeNoise);this.idleShakeRate=this.getProperty("idleShakeRate",this.idleShakeRate);this.maxForwardAngle=this.getProperty("maxForwardAngle",this.maxForwardAngle);this.maxLateralAngle=this.getProperty("maxLateralAngle",this.maxLateralAngle);this.forwardPitchFactor=this.getProperty("forwardPitchFactor",this.forwardPitchFactor);this.lateralRollFactor=this.getProperty("lateralRollFactor",this.lateralRollFactor);this.forwardRecoverRate=this.getProperty("forwardRecoverRate",this.forwardRecoverRate);this.lateralRecoverRate=this.getProperty("lateralRecoverRate",this.lateralRecoverRate);this.lowSpeedScale=this.getProperty("lowSpeedScale",this.lowSpeedScale);this.highSpeedScale=this.getProperty("highSpeedScale",this.highSpeedScale);this.lowForwardNoise=this.getProperty("lowForwardNoise",this.lowForwardNoise);this.highForwardNoise=this.getProperty("highForwardNoise",this.highForwardNoise);this.lowLateralNoise=this.getProperty("lowLateralNoise",this.lowLateralNoise);this.highLateralNoise=this.getProperty("highLateralNoise",this.highLateralNoise);this.speedThreashold=this.getProperty("speedThreashold",this.speedThreashold);this.lerpForwardFactor=this.getProperty("lerpForwardFactor",this.lerpForwardFactor);this.lerpLateralFactor=this.getProperty("lerpLateralFactor",this.lerpLateralFactor);this.shiftForwardExtra=this.getProperty("shiftForwardExtra",this.shiftForwardExtra);this.shiftLateralExtra=this.getProperty("shiftLateralExtra",this.shiftLateralExtra);this.topEngineSpeed=this.getProperty("topEngineSpeed",this.topEngineSpeed);this.topBoosterSpeed=this.getProperty("topBoosterSpeed",this.topBoosterSpeed);this.powerChangeRate=this.getProperty("powerChangeRate",this.powerChangeRate);this.powerCoefficient=this.getProperty("powerCoefficient",this.powerCoefficient);this.boosterCoefficient=this.getProperty("boosterCoefficient",this.boosterCoefficient);this.maxBoosterTime=this.getProperty("maxBoosterTime",this.maxBoosterTime);this.minBoosterSpeed=this.getProperty("minBoosterSpeed",this.minBoosterSpeed);this.maxPitchControl=this.getProperty("maxPitchControl",this.maxPitchControl);this.maxFrontBraking=this.getProperty("maxFrontBraking",this.maxFrontBraking);this.maxReversePower=this.getProperty("maxReversePower",this.maxReversePower);this.penaltyGroundTag=this.getProperty("penaltyGroundTag",this.penaltyGroundTag);this.minPenaltySpeed=this.getProperty("minPenaltySpeed",this.minPenaltySpeed);this.linearWheelDrag=this.getProperty("linearWheelDrag",this.linearWheelDrag);this.frictionWheelSlip=this.getProperty("frictionWheelSlip",this.frictionWheelSlip);this.showSensorLines=this.getProperty("showSensorLines",this.showSensorLines);this.gravitationalForce=this.getProperty("gravityMultiplier",this.gravitationalForce);this.smoothFlyingForce=this.getProperty("smoothFlyingForce",this.smoothFlyingForce);this.frictionLerpSpeed=this.getProperty("frictionLerpSpeed",this.frictionLerpSpeed);this.maxBurnoutFactor=this.getProperty("maxBurnoutFactor",this.maxBurnoutFactor);this.maxSteerBoost=this.getProperty("maxSteerBoost",this.maxSteerBoost);this.overSteerSpeed=this.getProperty("overSteerSpeed",this.overSteerSpeed);this.overSteerTimeout=this.getProperty("overSteerTimeout",this.overSteerTimeout);this.wheelDriveType=this.getProperty("wheelDriveType",this.wheelDriveType);this.minBrakingForce=this.getProperty("minBrakingForce",this.minBrakingForce);this.maxBrakingForce=this.getProperty("maxBrakingForce",this.maxBrakingForce);this.handBrakingForce=this.getProperty("handBrakingForce",this.handBrakingForce);this.brakeRecoveryDelay=this.getProperty("brakeRecoveryDelay",this.brakeRecoveryDelay);this.brakeRecoverySpeed=this.getProperty("brakeRecoverySpeed",this.brakeRecoverySpeed);this.skidRecoverySpeed=this.getProperty("skidRecoverySpeed",this.skidRecoverySpeed);this.linearBrakingForce=this.getProperty("linearBrakingForce",this.linearBrakingForce);this.angularBrakingForce=this.getProperty("angularBrakingForce",this.angularBrakingForce);this.steeringWheelAxis=this.getProperty("steeringWheelAxis",this.steeringWheelAxis);this.maxSteeringAngle=this.getProperty("maxSteeringAngle",this.maxSteeringAngle);this.maxSteeringSpeed=this.getProperty("maxSteeringSpeed",this.maxSteeringSpeed);this.topSpeedDampener=this.getProperty("topSpeedDampener",this.topSpeedDampener);this.lowSpeedSteering=this.getProperty("lowSpeedSteering",this.lowSpeedSteering);this.highSpeedSteering=this.getProperty("highSpeedSteering",this.highSpeedSteering);this.donutTurningRadius=this.getProperty("donutTurningRadius",this.donutTurningRadius);this.brakeLightsTrans=this.getProperty("brakeLightsMesh",this.brakeLightsTrans);this.reverseLightsTrans=this.getProperty("reverseLightsMesh",this.reverseLightsTrans);this.frontLeftWheelTrans=this.getProperty("frontLeftWheelMesh",this.frontLeftWheelTrans);this.frontRightWheelTrans=this.getProperty("frontRightWheelMesh",this.frontRightWheelTrans);this.backLeftWheelTrans=this.getProperty("rearLeftWheelMesh",this.backLeftWheelTrans);this.backRightWheelTrans=this.getProperty("rearRightWheelMesh",this.backRightWheelTrans);this.frontLeftWheelCollider=this.getProperty("frontLeftWheelCollider",this.frontLeftWheelCollider);this.frontRightWheelCollider=this.getProperty("frontRightWheelCollider",this.frontRightWheelCollider);this.backLeftWheelCollider=this.getProperty("rearLeftWheelCollider",this.backLeftWheelCollider);this.backRightWheelCollider=this.getProperty("rearRightWheelCollider",this.backRightWheelCollider);this.burnoutFrictionSlip=this.getProperty("burnoutFrictionSlip",this.burnoutFrictionSlip);this.burnoutTimeDelay=this.getProperty("burnoutTimeDelay",this.burnoutTimeDelay);this.burnoutWheelPitch=this.getProperty("burnoutWheelPitch",this.burnoutWheelPitch);this.burnoutCoefficient=this.getProperty("burnoutCoefficient",this.burnoutCoefficient);this.burnoutTriggerMark=this.getProperty("burnoutTriggerMark",this.burnoutTriggerMark);this.enableAutoBurnouts=this.getProperty("enableAutoBurnouts",this.enableAutoBurnouts);this.postNetworkAttributes=this.getProperty("postNetworkAttributes",this.postNetworkAttributes);this.linkTrackManager=this.getProperty("linkTrackManager",this.linkTrackManager);this.playVehicleSounds=this.getProperty("playVehicleSounds",this.playVehicleSounds);this.differentialRatio=this.getProperty("gearBoxDifferential",this.differentialRatio);this.transmissionRatio=this.getProperty("gearBoxOverdrive",this.transmissionRatio);this.gearBoxMultiplier=this.getProperty("gearBoxMultiplier",this.gearBoxMultiplier);this.gearBoxMaxPitching=this.getProperty("gearBoxMaxPitching",this.gearBoxMaxPitching);this.gearBoxShiftChange=this.getProperty("gearBoxShiftChange",this.gearBoxShiftChange);this.gearBoxShiftDelay=this.getProperty("gearBoxShiftDelay",this.gearBoxShiftDelay);this.gearBoxShiftRatios=this.getProperty("gearBoxShiftRatios",this.gearBoxShiftRatios);this.gearBoxShiftRanges=this.getProperty("gearBoxShiftRanges",this.gearBoxShiftRanges);this.MIN_RPM=this.getProperty("gearBoxMinPower",this.MIN_RPM);this.MAX_RPM=this.getProperty("gearBoxMaxPower",this.MAX_RPM);if(this.topSpeedDampener<=0)this.topSpeedDampener=0.15;if(this.maxBurnoutFactor<=0)this.maxBurnoutFactor=1.0;if(this.gravitationalForce<=0)this.gravitationalForce=3;if(this.smoothFlyingForce<=0)this.smoothFlyingForce=0;if(this.maxFrontBraking<=0)this.maxFrontBraking=0;if(this.maxReversePower<=0)this.maxReversePower=0.5;if(this.lowSpeedSteering<=0)this.lowSpeedSteering=5.0;if(this.highSpeedSteering<=0)this.highSpeedSteering=5.0;if(this.donutTurningRadius<=0)this.donutTurningRadius=5.0;if(this.powerCoefficient<=0)this.powerCoefficient=1.0;if(this.topEngineSpeed<=0)this.topEngineSpeed=100;if(this.topBoosterSpeed<=0)this.topBoosterSpeed=150;if(this.gearBoxMultiplier<=0)this.gearBoxMultiplier=1.0;if(this.gearBoxMaxPitching<=0)this.gearBoxMaxPitching=6500;if(this.gearBoxShiftChange<=0)this.gearBoxShiftChange=5100;if(this.gearBoxShiftDelay<=0)this.gearBoxShiftDelay=0.35;if(this.transmissionRatio<=0)this.transmissionRatio=1;if(this.differentialRatio<=0)this.differentialRatio=1;if(this.frictionLerpSpeed<=0)this.frictionLerpSpeed=1;if(this.burnoutLerpSpeed<=0)this.burnoutLerpSpeed=1;if(this.burnoutTimeDelay<=0)this.burnoutTimeDelay=1;if(this.burnoutWheelPitch<=0)this.burnoutWheelPitch=1;if(this.minBoosterSpeed<=0)this.minBoosterSpeed=0;if(this.maxBoosterTime<=0)this.maxBoosterTime=0;this.setBoosterTime(this.maxBoosterTime);var powerBoosterTransform=this.getProperty("boosterTransform");if(powerBoosterTransform!=null&&powerBoosterTransform.name!=null&&powerBoosterTransform.name!==""){this.boosterTransform=this.getChildNode(powerBoosterTransform.name,UNITY.SearchType.IndexOf,false);if(this.boosterTransform!=null)this._nosAudioSource=UNITY.SceneManager.FindScriptComponent(this.boosterTransform,"BABYLON.AudioSource")}var steeringWheelNode=this.getProperty("steeringWheelHub");if(steeringWheelNode!=null&&steeringWheelNode.name!=null&&steeringWheelNode.name!==""){this.steeringWheelHub=this.getChildNode(steeringWheelNode.name,UNITY.SearchType.IndexOf,false)}var angularDampener=this.getProperty("angularDampener");if(angularDampener!=null)this.m_angularDampener=UNITY.Utilities.ParseVector3(angularDampener);var smokeTextureInfo=this.getProperty("smokeTexture");if(smokeTextureInfo!=null){this.smokeTexture=UNITY.Utilities.ParseTexture(smokeTextureInfo,this.scene)}var engineTorqueInfo=this.getProperty("engineTorque");if(engineTorqueInfo!=null&&engineTorqueInfo.animation!=null){this.engineTorqueCurve=BABYLON.Animation.Parse(engineTorqueInfo.animation)}if(this.engineTorqueCurve==null)UNITY.SceneManager.LogWarning("Failed to parse engine torque curve for: "+this.transform.name)};StandardCarController.prototype.initVehicleState=function(){UNITY.Utilities.ValidateTransformQuaternion(this.transform);if(this.linkTrackManager===true)PROJECT.RaceTrackManager.RegisterVehicle(this.transform);this._animator=this.getComponent("UNITY.AnimationState");if(this._animator==null){var animationNode=this.getChildWithScript("UNITY.AnimationState");if(animationNode!=null){this._animator=UNITY.SceneManager.FindScriptComponent(animationNode,"UNITY.AnimationState")}else{}}this._engineAudioSource=this.getComponent("UNITY.AudioSource");if(this._engineAudioSource==null)UNITY.SceneManager.LogWarning("No engine audio source manager found for: "+this.transform.name);this._rigidbody=this.getComponent("UNITY.RigidbodyPhysics");if(this.transform.physicsBody!=null&&this._rigidbody!=null){this.raycastVehicle=this._rigidbody.getRaycastVehicle();if(this.raycastVehicle!=null){this.linearDamping=this.transform.physicsBody.getLinearDamping();this.angularDamping=this.transform.physicsBody.getAngularDamping();var brakeLightslName=(this.brakeLightsTrans!=null&&this.brakeLightsTrans.name!=null&&this.brakeLightsTrans.name!=="")?this.brakeLightsTrans.name:null;var reverseLightslName=(this.reverseLightsTrans!=null&&this.reverseLightsTrans.name!=null&&this.reverseLightsTrans.name!=="")?this.reverseLightsTrans.name:null;var frontLeftWheelName=(this.frontLeftWheelTrans!=null&&this.frontLeftWheelTrans.name!=null&&this.frontLeftWheelTrans.name!=="")?this.frontLeftWheelTrans.name:null;var frontRightWheelName=(this.frontRightWheelTrans!=null&&this.frontRightWheelTrans.name!=null&&this.frontRightWheelTrans.name!=="")?this.frontRightWheelTrans.name:null;var backLeftWheelName=(this.backLeftWheelTrans!=null&&this.backLeftWheelTrans.name!=null&&this.backLeftWheelTrans.name!=="")?this.backLeftWheelTrans.name:null;var backRightWheelName=(this.backRightWheelTrans!=null&&this.backRightWheelTrans.name!=null&&this.backRightWheelTrans.name!=="")?this.backRightWheelTrans.name:null;var frontLeftWheelLabel=(this.frontLeftWheelCollider!=null&&this.frontLeftWheelCollider.name!=null&&this.frontLeftWheelCollider.name!=="")?this.frontLeftWheelCollider.name:null;var frontRightWheelLabel=(this.frontRightWheelCollider!=null&&this.frontRightWheelCollider.name!=null&&this.frontRightWheelCollider.name!=="")?this.frontRightWheelCollider.name:null;var backLeftWheelLabel=(this.backLeftWheelCollider!=null&&this.backLeftWheelCollider.name!=null&&this.backLeftWheelCollider.name!=="")?this.backLeftWheelCollider.name:null;var backRightWheelLabel=(this.backRightWheelCollider!=null&&this.backRightWheelCollider.name!=null&&this.backRightWheelCollider.name!=="")?this.backRightWheelCollider.name:null;if(frontLeftWheelLabel!=null)this.FRONT_LEFT=this.raycastVehicle.getWheelIndexByName(frontLeftWheelLabel);if(frontRightWheelLabel!=null)this.FRONT_RIGHT=this.raycastVehicle.getWheelIndexByName(frontRightWheelLabel);if(backLeftWheelLabel!=null)this.BACK_LEFT=this.raycastVehicle.getWheelIndexByName(backLeftWheelLabel);if(backRightWheelLabel!=null)this.BACK_RIGHT=this.raycastVehicle.getWheelIndexByName(backRightWheelLabel);if(brakeLightslName!=null){this.brakeLightsMesh=this.getChildNode(brakeLightslName,UNITY.SearchType.IndexOf,false);if(this.brakeLightsMesh!=null){this.brakeLightsMesh.isVisible=false}}if(reverseLightslName!=null){this.reverseLightsMesh=this.getChildNode(reverseLightslName,UNITY.SearchType.IndexOf,false);if(this.reverseLightsMesh!=null){this.reverseLightsMesh.isVisible=false}}if(this.raycastVehicle.getNumWheels()>=4){if(this.BACK_LEFT>=0&&backLeftWheelName!=null){this.m_backLeftWheel=this.raycastVehicle.getWheelInfo(this.BACK_LEFT);this.backLeftWheelMesh=this.getChildNode(backLeftWheelName,UNITY.SearchType.IndexOf,false);if(this.backLeftWheelMesh!=null){this.m_backLeftWheel.hub=this.backLeftWheelMesh;this.m_backLeftWheel.spinner=UNITY.SceneManager.FindChildTransformNode(this.backLeftWheelMesh,"Wheel",UNITY.SearchType.IndexOf,true);this.backLeftWheelEmitter=new BABYLON.AbstractMesh("Emitter_RL");this.backLeftWheelEmitter.parent=this.m_backLeftWheel.spinner||this.backLeftWheelMesh;this.backLeftWheelEmitter.position=new BABYLON.Vector3(0,0,0);this.backLeftWheelParticle=this.createSmokeParticleSystem(this.transform.name+"Smoke_RL",this.backLeftWheelEmitter);if(this.wheelDriveType===0||this.wheelDriveType===2){if(this.wheelRadius<=0&&this.m_backLeftWheel!=null){this.wheelRadius=this.m_backLeftWheel.radius}}}}if(this.BACK_RIGHT>=0&&backRightWheelName!=null){this.m_backRightWheel=this.raycastVehicle.getWheelInfo(this.BACK_RIGHT);this.backRightWheelMesh=this.getChildNode(backRightWheelName,UNITY.SearchType.IndexOf,false);if(this.backRightWheelMesh!=null){this.m_backRightWheel.hub=this.backRightWheelMesh;this.m_backRightWheel.spinner=UNITY.SceneManager.FindChildTransformNode(this.backRightWheelMesh,"Wheel",UNITY.SearchType.IndexOf,true);this.backRightWheelEmitter=new BABYLON.AbstractMesh("Emitter_RR");this.backRightWheelEmitter.parent=this.m_backRightWheel.spinner||this.backRightWheelMesh;this.backRightWheelEmitter.position=new BABYLON.Vector3(0,0,0);this.backRightWheelParticle=this.createSmokeParticleSystem(this.transform.name+"Smoke_RR",this.backRightWheelEmitter);if(this.wheelDriveType===0||this.wheelDriveType===2){if(this.wheelRadius<=0&&this.m_backRightWheel!=null){this.wheelRadius=this.m_backRightWheel.radius}}}}if(this.FRONT_LEFT>=0&&frontLeftWheelName!=null){this.m_frontLeftWheel=this.raycastVehicle.getWheelInfo(this.FRONT_LEFT);this.frontLeftWheelMesh=this.getChildNode(frontLeftWheelName,UNITY.SearchType.IndexOf,false);if(this.frontLeftWheelMesh!=null){this.m_frontLeftWheel.hub=this.frontLeftWheelMesh;this.m_frontLeftWheel.spinner=UNITY.SceneManager.FindChildTransformNode(this.frontLeftWheelMesh,"Wheel",UNITY.SearchType.IndexOf,true);this.frontLeftWheelEmitter=new BABYLON.AbstractMesh("Emitter_FL");this.frontLeftWheelEmitter.parent=this.m_frontLeftWheel.spinner||this.frontLeftWheelMesh;this.frontLeftWheelEmitter.position=new BABYLON.Vector3(0,0,0);this.frontLeftWheelParticle=this.createSmokeParticleSystem(this.transform.name+"Smoke_FL",this.frontLeftWheelEmitter);if(this.wheelDriveType===1||this.wheelDriveType===2){if(this.wheelRadius<=0&&this.m_frontLeftWheel!=null){this.wheelRadius=this.m_frontLeftWheel.radius}}}}if(this.FRONT_RIGHT>=0&&frontRightWheelName!=null){this.m_frontRightWheel=this.raycastVehicle.getWheelInfo(this.FRONT_RIGHT);this.frontRightWheelMesh=this.getChildNode(frontRightWheelName,UNITY.SearchType.IndexOf,false);if(this.frontRightWheelMesh!=null){this.m_frontRightWheel.hub=this.frontRightWheelMesh;this.m_frontRightWheel.spinner=UNITY.SceneManager.FindChildTransformNode(this.frontRightWheelMesh,"Wheel",UNITY.SearchType.IndexOf,true);this.frontRightWheelEmitter=new BABYLON.AbstractMesh("Emitter_FR");this.frontRightWheelEmitter.parent=this.m_frontRightWheel.spinner||this.frontRightWheelMesh;this.frontRightWheelEmitter.position=new BABYLON.Vector3(0,0,0);this.frontRightWheelParticle=this.createSmokeParticleSystem(this.transform.name+"Smoke_FR",this.frontRightWheelEmitter);if(this.wheelDriveType===1||this.wheelDriveType===2){if(this.wheelRadius<=0&&this.m_frontRightWheel!=null){this.wheelRadius=this.m_frontRightWheel.radius}}}}this.raycastVehicle.setSmoothFlyingImpulse(this.smoothFlyingForce);this.raycastVehicle.setStabilizingForce(this.gravitationalForce);if(this._skidAudioSource==null&&this.backRightWheelMesh!=null)this._skidAudioSource=UNITY.SceneManager.FindScriptComponent(this.backRightWheelMesh,"UNITY.AudioSource");if(this._skidAudioSource==null&&this.backLeftWheelMesh!=null)this._skidAudioSource=UNITY.SceneManager.FindScriptComponent(this.backLeftWheelMesh,"UNITY.AudioSource");if(this._skidAudioSource==null&&this.frontRightWheelMesh!=null)this._skidAudioSource=UNITY.SceneManager.FindScriptComponent(this.frontRightWheelMesh,"UNITY.AudioSource");if(this._skidAudioSource==null&&this.frontLeftWheelMesh!=null)this._skidAudioSource=UNITY.SceneManager.FindScriptComponent(this.frontLeftWheelMesh,"UNITY.AudioSource");if(this._skidAudioSource==null)UNITY.SceneManager.LogWarning("No skid audio source manager found for: "+this.transform.name)}else{UNITY.SceneManager.LogWarning("Invalid vehicle controller wheel count info for: "+this.transform.name)}}else{UNITY.SceneManager.LogWarning("No wheel collider information found for: "+this.transform.name)}}else{UNITY.SceneManager.LogWarning("Failed to get rigidbody component: "+this.transform.name)}};StandardCarController.prototype.updateVehicleState=function(){this.m_linearVelocity=this.transform.absolutePosition.subtract(this.m_lastPosition);this.m_scaledVelocity=(this.m_linearVelocity.length()/this.getDeltaSeconds());this.m_linearVelocity.normalize();this.m_linearVelocity.scaleInPlace(this.m_scaledVelocity);if(this.wheelDrawVelocity>0){this.m_velocityOffset.copyFrom(this.m_linearVelocity);this.m_velocityOffset.scaleInPlace(this.wheelDrawVelocity)}else{this.m_velocityOffset.set(0,0,0)}this.m_lastPosition.copyFrom(this.transform.absolutePosition);this.castWheelContactRays()};StandardCarController.prototype.destroyVehicleState=function(){this._rigidbody=null;this._engineAudioSource=null;this._skidAudioSource=null;if(this.m_frontLeftWheel!=null){this.m_frontLeftWheel=null}if(this.m_frontRightWheel!=null){this.m_frontRightWheel=null}if(this.m_backLeftWheel!=null){this.m_backLeftWheel=null}if(this.m_backRightWheel!=null){this.m_backRightWheel=null}this.raycastVehicle=null;this.frontLeftWheelMesh=null;this.frontRightWheelMesh=null;this.backLeftWheelMesh=null;this.backRightWheelMesh=null;this.frontLeftWheelTrans=null;this.frontRightWheelTrans=null;this.backLeftWheelTrans=null;this.backRightWheelTrans=null;this.frontLeftWheelCollider=null;this.frontRightWheelCollider=null;this.backLeftWheelCollider=null;this.backRightWheelCollider=null};StandardCarController.prototype.drive=function(throttle,steering,braking,donuts,booster,autopilot,nos){if(booster===void 0){booster=0}if(autopilot===void 0){autopilot=false}if(nos===void 0){nos=false}var deltaTime=this.getDeltaSeconds();this.currentForward=BABYLON.Scalar.Clamp(throttle,-1,1);this.currentTurning=BABYLON.Scalar.Clamp(steering,-1,1);this.currentDonuts=donuts;this.currentSkidding=braking;this.currentBoosting=(nos===true&&this.powerBooster===true&&this.wheelBurnout===false&&this.boostSpeedTimer>0&&this.americanSpeed>=this.minBoosterSpeed);this.targetDrivePower=(this.currentBoosting===true)?this.boosterCoefficient:(this.powerCoefficient+booster);this.currentDrivePower=BABYLON.Scalar.Lerp(this.currentDrivePower,this.targetDrivePower,(this.powerChangeRate*deltaTime));WM.PrintToScreen("MPH: "+this.americanSpeed.toFixed(0)+" --> RPM: "+this.engineRPM.toFixed(0)+" --> Gear: "+this.gearIndex.toFixed(0)+" --> Power: "+this.currentDrivePower.toFixed(2)+" --> Boost Time: "+this.boostSpeedTimer.toFixed(2)+" --> Donut Meter: "+this.donutMeter.toFixed(2)+" --> Burnout Meter: "+this.burnoutMeter.toFixed(2));this.handBraking=(this.getCurrentSkidding()===true&&this.handBrakingForce>0);if(this.handBraking===true){this.handBrakingTimer+=deltaTime}else{this.handBrakingTimer=0}if(this._rigidbody==null||this.raycastVehicle==null)return;if(this.FRONT_LEFT>=0&&this.FRONT_RIGHT>=0&&this.BACK_LEFT>=0&&this.BACK_RIGHT>=0){this.engineForce=0;this.wheelBrakingForce=0;this.frontWheelPower=0;this.backWheelPower=0;var throttleSpeed=(this.throttleEngineSpeed>0)?this.throttleEngineSpeed:this.getTopEngineSpeed();var gearShiftRatio=(this.gearBoxShiftRatios!=null&&this.gearBoxShiftRatios.length>this.gearIndex)?this.gearBoxShiftRatios[this.gearIndex]:1.0;var finalGearRatio=(gearShiftRatio*this.differentialRatio*this.transmissionRatio);var engineMotorTorque=this.getVehicleEngineTorque(this.engineRPM,this.currentDrivePower)*Math.abs(this.currentForward);var allowedEnginePower=(engineMotorTorque*finalGearRatio);var allowedBrakingForce=BABYLON.Scalar.Lerp(this.minBrakingForce,this.maxBrakingForce,this.gradientSpeed)*Math.abs(this.currentForward);if(this.currentForward>0&&this.wheelBurnout===true&&this.wheelDonuts===true){this.engineForce=allowedEnginePower}else{if(this.currentForward>0){if(this.forwardSpeed<-1)this.wheelBrakingForce=allowedBrakingForce;else this.engineForce=allowedEnginePower}else if(this.currentForward<0){if(this.forwardSpeed>1)this.wheelBrakingForce=allowedBrakingForce;else this.engineForce=-(allowedEnginePower*this.maxReversePower)}else{this.engineForce=0;this.wheelBrakingForce=10}}if(this.currentBoosting===false&&this.americanSpeed>this.topEngineSpeed){this.engineForce=0;this.wheelBrakingForce=(allowedBrakingForce*1.0)}var engineBrake=0;if(this.shiftingTime>0||this.americanSpeed>throttleSpeed){engineBrake=this.shiftingBrake;this.engineForce=0}var visualSteerBoost=0;var ackermanSteerLeft=0;var ackermanSteerRight=0;var turningRadius=BABYLON.Scalar.Lerp(this.ackermanTurnRadius,this.ackermanMaxRadius,this.gradientSpeed);var steeringBoost=(Math.abs(this.currentTurning)>=0.02);var steeringRadius=(this.currentForward>0&&this.wheelBurnout===true&&this.wheelDonuts===true)?this.donutTurningRadius:(turningRadius*this.ackermanTurnFactor);var steeringAmount=BABYLON.Scalar.Lerp(this.lowSpeedSteering,this.highSpeedSteering,this.gradientSpeed);var steeringGradient=(steeringAmount*deltaTime);if(this.currentTurning>0){if(this.maxSteerBoost>0&&steeringBoost===true)visualSteerBoost=BABYLON.Tools.ToRadians(this.maxSteerBoost);ackermanSteerLeft=Math.atan(this.ackermanWheelBase/(steeringRadius+(this.ackermanRearTrack/2)))*this.currentTurning;ackermanSteerRight=Math.atan(this.ackermanWheelBase/(steeringRadius-(this.ackermanRearTrack/2)))*this.currentTurning}else if(this.currentTurning<0){if(this.maxSteerBoost>0&&steeringBoost===true)visualSteerBoost=-BABYLON.Tools.ToRadians(this.maxSteerBoost);ackermanSteerLeft=Math.atan(this.ackermanWheelBase/(steeringRadius-(this.ackermanRearTrack/2)))*this.currentTurning;ackermanSteerRight=Math.atan(this.ackermanWheelBase/(steeringRadius+(this.ackermanRearTrack/2)))*this.currentTurning}else{visualSteerBoost=0;ackermanSteerLeft=0;ackermanSteerRight=0}if(this.wheelBurnout===true&&this.wheelDonuts===true){ackermanSteerLeft*=this.maxBurnoutFactor;ackermanSteerRight*=this.maxBurnoutFactor}else if(autopilot===false){var smoothSteerFactor=BABYLON.Scalar.Lerp(1.0,this.topSpeedDampener,this.gradientSpeed);ackermanSteerLeft*=smoothSteerFactor;ackermanSteerRight*=smoothSteerFactor}this.physicsSteerAngleL=BABYLON.Scalar.Lerp(this.physicsSteerAngleL,ackermanSteerLeft,steeringGradient);this.physicsSteerAngleR=BABYLON.Scalar.Lerp(this.physicsSteerAngleR,ackermanSteerRight,steeringGradient);this.visualSteerBoostL=(ackermanSteerLeft+visualSteerBoost);this.visualSteerBoostR=(ackermanSteerRight+visualSteerBoost);if(this.wheelBurnout===true&&this.wheelDonuts===true){this.visualSteerBoostL*=0.5;this.visualSteerBoostR*=0.5}if(this.overSteerSpeed>0&&this.handBraking===true&&this.handBrakingTimer>this.overSteerTimeout){this.visualSteerBoostL*=-1;this.visualSteerBoostR*=-1}this.visualSteerAngleL=BABYLON.Scalar.Lerp(this.visualSteerAngleL,this.visualSteerBoostL,steeringGradient);this.visualSteerAngleR=BABYLON.Scalar.Lerp(this.visualSteerAngleR,this.visualSteerBoostR,steeringGradient);var steeringAngleBoost=2.0;var steeringAngleFactor=Math.abs(this.currentTurning)*steeringAngleBoost;if(this.currentTurning>0){steeringAngleFactor=BABYLON.Scalar.Clamp(steeringAngleFactor,0,1)}else if(this.currentTurning<0){steeringAngleFactor=-BABYLON.Scalar.Clamp(steeringAngleFactor,0,1)}var fixedCurrentTurning=(this.overSteerSpeed>0&&this.handBraking===true&&this.handBrakingTimer>this.overSteerTimeout)?steeringAngleFactor:-steeringAngleFactor;this.animatorSteerAngle=BABYLON.Scalar.Lerp(this.animatorSteerAngle,fixedCurrentTurning,(this.maxSteeringSpeed*deltaTime));if(this.steeringWheelHub!=null){if(this.steeringWheelHub.rotationQuaternion==null){this.steeringWheelHub.rotationQuaternion=BABYLON.Quaternion.FromEulerVector(this.steeringWheelHub.rotation)}var degreesSteerAngle=(this.animatorSteerAngle*this.maxSteeringAngle);var radiansSteerAngle=BABYLON.Tools.ToRadians(degreesSteerAngle);var xaxis=(this.steeringWheelAxis===0)?radiansSteerAngle:0;var yaxis=(this.steeringWheelAxis===1)?radiansSteerAngle:0;var zaxis=(this.steeringWheelAxis===2)?radiansSteerAngle:0;BABYLON.Quaternion.SlerpToRef(this.steeringWheelHub.rotationQuaternion,BABYLON.Quaternion.FromEulerAngles(xaxis,yaxis,zaxis),(this.maxSteeringSpeed*deltaTime),this.steeringWheelHub.rotationQuaternion)}if(this._animator!=null)this._animator.setFloat("TurnAngle",this.animatorSteerAngle);var updateFriction=true;if(this.handBraking===true){this.wheelBurnout=false;this.wheelDonuts=false;this.burnoutTimer=0;if(this.raycastVehicle.lockedWheelIndexes==null)this.raycastVehicle.lockedWheelIndexes=[this.BACK_LEFT,this.BACK_RIGHT];if(this.americanSpeed>=1){if(this.wheelSkidding===false){this.wheelSkidding=true;this.skiddingTime=this.brakeRecoveryDelay;var wheelSkidFriction=0;if(this.m_frontLeftWheel!=null)this.m_frontLeftWheel.frictionSlip=wheelSkidFriction;if(this.m_frontRightWheel!=null)this.m_frontRightWheel.frictionSlip=wheelSkidFriction;if(this.m_backLeftWheel!=null)this.m_backLeftWheel.frictionSlip=wheelSkidFriction;if(this.m_backRightWheel!=null)this.m_backRightWheel.frictionSlip=wheelSkidFriction;this.frontLeftFrictionPenalty=false;this.frontRightFrictionPenalty=false;this.rearLeftFrictionPenalty=false;this.rearRightFrictionPenalty=false;updateFriction=false}}if(this.skiddingTime<=0){this.updateLinearBrakeDamping(this.linearBrakingForce,(deltaTime*this.brakeRecoverySpeed));this.updateAngularBrakeDamping(this.angularBrakingForce,(deltaTime*this.brakeRecoverySpeed));if(updateFriction===true&&this.americanSpeed<=0.25)this.updateCurrentFrictionSlip(deltaTime*this.skidRecoverySpeed)}this.updateCurrentRotationDelta(0);this.updateCurrentRotationBoost(0);this.raycastVehicle.setVisualSteeringAngle(this.visualSteerAngleL,this.FRONT_LEFT);this.raycastVehicle.setVisualSteeringAngle(this.visualSteerAngleR,this.FRONT_RIGHT);this.raycastVehicle.setPhysicsSteeringAngle(this.physicsSteerAngleL,this.FRONT_LEFT);this.raycastVehicle.setPhysicsSteeringAngle(this.physicsSteerAngleR,this.FRONT_RIGHT);this.raycastVehicle.setEngineForce(0,this.FRONT_LEFT);this.raycastVehicle.setEngineForce(0,this.FRONT_RIGHT);this.raycastVehicle.setEngineForce(0,this.BACK_LEFT);this.raycastVehicle.setEngineForce(0,this.BACK_RIGHT);var frontBrakeForce=(this.handBrakingForce*0.1);this.raycastVehicle.setBrakingForce(frontBrakeForce,this.FRONT_LEFT);this.raycastVehicle.setBrakingForce(frontBrakeForce,this.FRONT_RIGHT);var extraBrakeForce=(this.handBrakingForce*10000);this.raycastVehicle.setBrakingForce(extraBrakeForce,this.BACK_LEFT);this.raycastVehicle.setBrakingForce(extraBrakeForce,this.BACK_RIGHT)}else{if(this.raycastVehicle.lockedWheelIndexes!=null){this.raycastVehicle.lockedWheelIndexes=null;this.updateCurrentRotationDelta(0);this.updateCurrentRotationBoost(0)}this.wheelSkidding=false;this.skiddingTime=0;this.burnoutCoefficient=BABYLON.Scalar.Clamp(this.burnoutCoefficient,1,20);this.burnoutTriggerMark=BABYLON.Scalar.Clamp(this.burnoutTriggerMark,1,20);var isBurnoutSpeed=(this.americanSpeed<=this.burnoutTriggerMark);var isFullThrottle=(this.currentForward<-0.9||this.currentForward>0.9);var isFullTurning=(this.currentTurning<-0.9||this.currentTurning>0.9);var wheelLerpSpeed=(deltaTime*this.frictionLerpSpeed);var wheelBoostSpeed=0;if(this.enableAutoBurnouts===true&&this.burnoutTimer<=0&&isFullThrottle===true&&isBurnoutSpeed===true){this.burnoutTimer=(this.burnoutTimeDelay*0.25);this.wheelDonuts=false;this.wheelBurnout=true}if(this.restoreTimer>0){this.restoreTimer-=deltaTime;if(this.restoreTimer<0)this.restoreTimer=0;wheelLerpSpeed*=this.burnoutLerpSpeed}if(this.cooldownTimer>0){this.cooldownTimer-=deltaTime;if(this.cooldownTimer<0)this.cooldownTimer=0}if(this.wheelDonuts===true){this.donutSpinTime+=deltaTime;if(isFullTurning===false){this.burnoutTimer=0}}else{this.donutSpinTime=0}if(this.burnoutTimer>0&&isFullThrottle===true){wheelBoostSpeed=0.2;if(this.burnoutCoefficient>=1.0)this.engineForce*=this.burnoutCoefficient;if(this.m_frontLeftWheel!=null)this.m_frontLeftWheel.frictionSlip=(this.burnoutFrictionSlip);if(this.m_frontRightWheel!=null)this.m_frontRightWheel.frictionSlip=(this.burnoutFrictionSlip);if(this.m_backLeftWheel!=null)this.m_backLeftWheel.frictionSlip=this.burnoutFrictionSlip;if(this.m_backRightWheel!=null)this.m_backRightWheel.frictionSlip=this.burnoutFrictionSlip;this.frontLeftFrictionPenalty=false;this.frontRightFrictionPenalty=false;this.rearLeftFrictionPenalty=false;this.rearRightFrictionPenalty=false;updateFriction=false;this.burnoutTimer-=deltaTime;if(this.burnoutTimer<=0&&isFullTurning===true&&this.cooldownTimer<=0&&this.currentForward>0&&this.currentDonuts===true){this.burnoutTimer=0.01}}else{if(this.americanSpeed>=this.minPenaltySpeed&&this.frictionWheelSlip>0){if(this.frontLeftFrictionLerping===false&&this.frontLeftContactTag===this.penaltyGroundTag){if(this.m_frontLeftWheel!=null&&this.m_frontLeftWheel.defaultFriction!=null){var frontLeftFriction=this.m_frontLeftWheel.defaultFriction*(this.frictionWheelSlip*1.25);this.m_frontLeftWheel.frictionSlip=frontLeftFriction;this.frontLeftFrictionPenalty=true;updateFriction=false}}if(this.frontRightFrictionLerping===false&&this.frontRightContactTag===this.penaltyGroundTag){if(this.m_frontRightWheel!=null&&this.m_frontRightWheel.defaultFriction!=null){var frontRightFriction=this.m_frontRightWheel.defaultFriction*(this.frictionWheelSlip*1.25);this.m_frontRightWheel.frictionSlip=frontRightFriction;this.frontRightFrictionPenalty=true;updateFriction=false}}if(this.rearLeftFrictionLerping===false&&this.rearLeftContactTag===this.penaltyGroundTag){if(this.m_backLeftWheel!=null&&this.m_backLeftWheel.defaultFriction!=null){var backLeftFriction=this.m_backLeftWheel.defaultFriction*this.frictionWheelSlip;this.m_backLeftWheel.frictionSlip=backLeftFriction;this.rearLeftFrictionPenalty=true;updateFriction=false}}if(this.rearRightFrictionLerping===false&&this.rearRightContactTag===this.penaltyGroundTag){if(this.m_backRightWheel!=null&&this.m_backRightWheel.defaultFriction!=null){var backRightFriction=this.m_backRightWheel.defaultFriction*this.frictionWheelSlip;this.m_backRightWheel.frictionSlip=backRightFriction;this.rearRightFrictionPenalty=true;updateFriction=false}}}this.burnoutTimer=0;this.donutSpinTime=0;if(this.wheelDonuts===true){this.wheelDonuts=false;this.cooldownTimer=(this.burnoutTimeDelay*2)}if(this.wheelBurnout===true){this.wheelBurnout=false;this.restoreTimer=(this.burnoutTimeDelay*0.75)}}if(this.wheelBurnout===true&&this.wheelDonuts===true){this.frontWheelPower=(this.engineForce*0.1)}else if(this.wheelDriveType===1||this.wheelDriveType===2){this.frontWheelPower=this.engineForce}if(this.wheelDriveType===0||this.wheelDriveType===2){this.backWheelPower=this.engineForce}if(this.getFootBraking()===true)this.updateCurrentBrakeDamping((this.linearBrakingForce*0.05),(this.angularBrakingForce*0.05));else if(this.throttleBrakingForce>0)this.updateCurrentBrakeDamping(this.throttleBrakingForce,this.angularDamping);else if(this.engineForce!==0)this.updateCurrentBrakeDamping(engineBrake,this.angularDamping);else this.updateCurrentBrakeDamping(this.linearDamping,this.angularDamping);if(updateFriction===true)this.updateCurrentFrictionSlip(wheelLerpSpeed);this.updateCurrentRotationBoost(wheelBoostSpeed);this.raycastVehicle.setVisualSteeringAngle(this.visualSteerAngleL,this.FRONT_LEFT);this.raycastVehicle.setVisualSteeringAngle(this.visualSteerAngleR,this.FRONT_RIGHT);this.raycastVehicle.setPhysicsSteeringAngle(this.physicsSteerAngleL,this.FRONT_LEFT);this.raycastVehicle.setPhysicsSteeringAngle(this.physicsSteerAngleR,this.FRONT_RIGHT);this.raycastVehicle.setEngineForce(this.frontWheelPower,this.FRONT_LEFT);this.raycastVehicle.setEngineForce(this.frontWheelPower,this.FRONT_RIGHT);this.raycastVehicle.setEngineForce(this.backWheelPower,this.BACK_LEFT);this.raycastVehicle.setEngineForce(this.backWheelPower,this.BACK_RIGHT);if(this.maxFrontBraking>0){this.raycastVehicle.setBrakingForce(this.wheelBrakingForce*this.maxFrontBraking,this.FRONT_LEFT);this.raycastVehicle.setBrakingForce(this.wheelBrakingForce*this.maxFrontBraking,this.FRONT_RIGHT)}else{this.raycastVehicle.setBrakingForce(this.wheelBrakingForce,this.FRONT_LEFT);this.raycastVehicle.setBrakingForce(this.wheelBrakingForce,this.FRONT_RIGHT)}this.raycastVehicle.setBrakingForce(this.wheelBrakingForce,this.BACK_LEFT);this.raycastVehicle.setBrakingForce(this.wheelBrakingForce,this.BACK_RIGHT)}}this.syncVehicleState(deltaTime);this.syncVehicleTilting(deltaTime)};StandardCarController.prototype.syncVehicleState=function(deltaTime){var gearCount=this.getGearShiftRatioCount();if(this.skiddingTime>0){this.skiddingTime-=deltaTime;if(this.skiddingTime<0)this.skiddingTime=0}if(this.shiftingTime>0){this.shiftingTime-=deltaTime;if(this.shiftingTime<0)this.shiftingTime=0}if(this.currentBoosting===true){if(this.boostSpeedTimer>0){this.boostSpeedTimer-=deltaTime;if(this.boostSpeedTimer<0)this.boostSpeedTimer=0}}if(this._rigidbody!=null&&this.raycastVehicle!=null){var deadSpeed=0.2;this.forwardSpeed=this.raycastVehicle.getRawCurrentSpeedKph()*PROJECT.StandardCarController.DEFAULT_SPEED_FACTOR;if(Math.abs(this.forwardSpeed)<deadSpeed)this.forwardSpeed=0;this.absoluteSpeed=this.raycastVehicle.getAbsCurrentSpeedKph()*PROJECT.StandardCarController.DEFAULT_SPEED_FACTOR;if(this.absoluteSpeed<deadSpeed)this.absoluteSpeed=0;this.americanSpeed=(this.absoluteSpeed*UNITY.System.Kph2Mph);this.gradientSpeed=BABYLON.Scalar.Clamp((this.absoluteSpeed/this.getTopEngineSpeed()));if(this.gearBoxShiftRatios!=null&&this.gearIndex>=0&&this.gearIndex<gearCount){var minimumDelta=Math.min(Math.max(deltaTime,1/200),1);var wheelDiameter=(this.wheelRadius*2*UNITY.System.Meter2Inch);var finalGearRatio=(this.gearBoxShiftRatios[this.gearIndex]*this.differentialRatio*this.transmissionRatio);var engineLevelFactor=336;this.downShift=(this.gearBoxShiftRanges!=null&&this.gearBoxShiftRanges.length===this.gearBoxShiftRatios.length)?this.gearBoxShiftRanges[this.gearIndex]:1000;this.clutchSlip=BABYLON.Scalar.Lerp(this.clutchSlip,0,1-Math.pow(0.01,minimumDelta));this.engineRPM=((this.americanSpeed*finalGearRatio*engineLevelFactor)/wheelDiameter);this.pitchRPM=BABYLON.Scalar.Lerp(this.shiftRPM,this.engineRPM,(1-this.clutchSlip))+this.MIN_RPM;var enableShifting=(this.currentBoosting===false&&this.currentDonuts===false);if(this.americanSpeed<5){this.gearIndex=0;this.shiftingSide=UNITY.Utilities.GetRandomRange(-10,10)>0?1:-1}else{if(this.engineRPM>this.gearBoxShiftChange){if(this.gearIndex<(gearCount-1)){this.shiftRPM=this.engineRPM;this.clutchSlip=1.0;this.shiftingTime=(enableShifting===true)?this.gearBoxShiftDelay:0;this.shiftingSide=UNITY.Utilities.GetRandomRange(-10,10)>0?1:-1;this.gearIndex++}}else if(this.engineRPM<this.downShift){if(this.gearIndex>0){this.shiftRPM=this.engineRPM;this.clutchSlip=1.0;this.shiftingTime=0;this.shiftingSide=UNITY.Utilities.GetRandomRange(-10,10)>0?1:-1;this.gearIndex--}}}if(this.gearIndex<0)this.gearIndex=0;else if(this.gearIndex>=gearCount)this.gearIndex=(gearCount-1)}}this.enginePitchLevel=(this.getCurrentEnginePitch()*PROJECT.StandardCarController.DEFAULT_PITCH_FACTOR*this.gearBoxMultiplier);if(this.playVehicleSounds===true){if(this._engineAudioSource!=null){var engineSoundClip=this._engineAudioSource.getSoundClip();if(engineSoundClip!=null)engineSoundClip.setPlaybackRate(this.enginePitchLevel)}}this.POWER_BOOST_PITCH=(this.currentBoosting===true)?1:0;if(this.playVehicleSounds===true){if(this._nosAudioSource!=null){var nosSoundClip=this._nosAudioSource.getSoundClip();if(nosSoundClip!=null)nosSoundClip.setPlaybackRate(this.POWER_BOOST_PITCH)}}this.smokeDonuts=BABYLON.Scalar.Clamp(this.smokeDonuts,1,10);this.smokeIntensityFactor=this.smokeIntensity;if(this.wheelBurnout===true&&this.wheelDonuts===true)this.smokeIntensityFactor*=this.smokeDonuts;this.SKID_FL=0,this.SKID_FR=0,this.SKID_RL=0,this.SKID_RR=0;if(this.m_frontLeftWheel!=null){var wheelContactFL=(this.m_frontLeftWheel.raycastResult.body!=null);this.SKID_FL=this.updateCurrentSkidInfo(this.m_frontLeftWheel);if(this.SKID_FL<this.skidThreashold)this.SKID_FL=0;if(this.SKID_FL>0&&wheelContactFL===true){var skidPosFL=this.m_frontLeftWheel.raycastResult.hitPointWorld;var skidNormFL=this.m_frontLeftWheel.raycastResult.hitNormalWorld;var skidScaleFL=BABYLON.Scalar.Normalize(this.SKID_FL,this.skidThreashold,1.0);if(this.wheelDrawVelocity>0)skidPosFL.addInPlace(this.m_velocityOffset);this.m_frontLeftWheelSkid=PROJECT.SkidMarkManager.AddSkidMarkSegment(skidPosFL,skidNormFL,skidScaleFL,this.m_frontLeftWheelSkid);if(this.wheelDonuts===true)this.donutMeter+=this.SKID_FL;this.burnoutMeter+=this.SKID_FL;if(this.frontLeftWheelParticle!=null){if(this.frontLeftWheelParticle.isStarted()===false){this.frontLeftWheelParticle.start()}var smoke_FL=this.SKID_FL*this.SKID_FL;this.frontLeftWheelParticle.emitRate=this.smokeIntensityFactor*smoke_FL;this.frontLeftWheelParticle.minSize=0.2*smoke_FL+0.2;this.frontLeftWheelParticle.maxSize=1.5*smoke_FL+1.2}}else{if(this.frontLeftWheelParticle!=null)this.frontLeftWheelParticle.emitRate=0;this.m_frontLeftWheelSkid=-1}}if(this.m_frontRightWheel!=null){var wheelContactFR=(this.m_frontRightWheel.raycastResult.body!=null);this.SKID_FR=this.updateCurrentSkidInfo(this.m_frontRightWheel);if(this.SKID_FR<this.skidThreashold)this.SKID_FR=0;if(this.SKID_FR>0&&wheelContactFR===true){var skidPosFR=this.m_frontRightWheel.raycastResult.hitPointWorld;var skidNormFR=this.m_frontRightWheel.raycastResult.hitNormalWorld;var skidScaleFR=BABYLON.Scalar.Normalize(this.SKID_FR,this.skidThreashold,1.0);if(this.wheelDrawVelocity>0)skidPosFR.addInPlace(this.m_velocityOffset);this.m_frontRightWheelSkid=PROJECT.SkidMarkManager.AddSkidMarkSegment(skidPosFR,skidNormFR,skidScaleFR,this.m_frontRightWheelSkid);if(this.wheelDonuts===true)this.donutMeter+=this.SKID_FR;this.burnoutMeter+=this.SKID_FR;if(this.frontRightWheelParticle!=null){if(this.frontRightWheelParticle.isStarted()===false){this.frontRightWheelParticle.start()}var smoke_FR=this.SKID_FR*this.SKID_FR;this.frontRightWheelParticle.emitRate=this.smokeIntensityFactor*smoke_FR;this.frontRightWheelParticle.minSize=0.2*smoke_FR+0.2;this.frontRightWheelParticle.maxSize=1.5*smoke_FR+1.2}}else{if(this.frontRightWheelParticle!=null)this.frontRightWheelParticle.emitRate=0;this.m_frontRightWheelSkid=-1}}this.PITCH_FL=this.SKID_FL;this.PITCH_FR=this.SKID_FR;if(this.wheelBurnout==true||this.restoreTimer>0){this.PITCH_FL*=this.burnoutWheelPitch;this.PITCH_FR*=this.burnoutWheelPitch}this.PITCH_FL*=0.75;this.PITCH_FR*=0.75;if(this.m_backLeftWheel!=null){var wheelContactBL=(this.m_backLeftWheel.raycastResult.body!=null);this.SKID_RL=this.updateCurrentSkidInfo(this.m_backLeftWheel);if(this.SKID_RL<this.skidThreashold)this.SKID_RL=0;if(this.SKID_RL>0&&wheelContactBL===true){var skidPosRL=this.m_backLeftWheel.raycastResult.hitPointWorld;var skidNormRL=this.m_backLeftWheel.raycastResult.hitNormalWorld;var skidScaleRL=BABYLON.Scalar.Normalize(this.SKID_RL,this.skidThreashold,1.0);if(this.wheelDrawVelocity>0)skidPosRL.addInPlace(this.m_velocityOffset);this.m_backLeftWheelSkid=PROJECT.SkidMarkManager.AddSkidMarkSegment(skidPosRL,skidNormRL,skidScaleRL,this.m_backLeftWheelSkid);if(this.wheelDonuts===true)this.donutMeter+=this.SKID_RL;this.burnoutMeter+=this.SKID_RL;if(this.backLeftWheelParticle!=null){if(this.backLeftWheelParticle.isStarted()===false){this.backLeftWheelParticle.start()}var smoke_RL=this.SKID_RL*this.SKID_RL;this.backLeftWheelParticle.emitRate=this.smokeIntensityFactor*smoke_RL;this.backLeftWheelParticle.minSize=0.2*smoke_RL+0.2;this.backLeftWheelParticle.maxSize=1.5*smoke_RL+1.2}}else{if(this.backLeftWheelParticle!=null)this.backLeftWheelParticle.emitRate=0;this.m_backLeftWheelSkid=-1}}if(this.m_backRightWheel!=null){var wheelContactBR=(this.m_backRightWheel.raycastResult.body!=null);this.SKID_RR=this.updateCurrentSkidInfo(this.m_backRightWheel);if(this.SKID_RR<this.skidThreashold)this.SKID_RR=0;if(this.SKID_RR>0&&wheelContactBR===true){var skidPosRR=this.m_backRightWheel.raycastResult.hitPointWorld;var skidNormRR=this.m_backRightWheel.raycastResult.hitNormalWorld;var skidScaleRR=BABYLON.Scalar.Normalize(this.SKID_RR,this.skidThreashold,1.0);if(this.wheelDrawVelocity>0)skidPosRR.addInPlace(this.m_velocityOffset);this.m_backRightWheelSkid=PROJECT.SkidMarkManager.AddSkidMarkSegment(skidPosRR,skidNormRR,skidScaleRR,this.m_backRightWheelSkid);if(this.wheelDonuts===true)this.donutMeter+=this.SKID_RR;this.burnoutMeter+=this.SKID_RR;if(this.backRightWheelParticle!=null){if(this.backRightWheelParticle.isStarted()===false){this.backRightWheelParticle.start()}var smoke_RR=this.SKID_RR*this.SKID_RR;this.backRightWheelParticle.emitRate=this.smokeIntensityFactor*smoke_RR;this.backRightWheelParticle.minSize=0.2*smoke_RR+0.2;this.backRightWheelParticle.maxSize=1.5*smoke_RR+1.2}}else{if(this.backRightWheelParticle!=null)this.backRightWheelParticle.emitRate=0;this.m_backRightWheelSkid=-1}}this.PITCH_RL=this.SKID_RL;this.PITCH_RR=this.SKID_RR;if(this.wheelBurnout==true||this.restoreTimer>0){this.PITCH_RL*=this.burnoutWheelPitch;this.PITCH_RR*=this.burnoutWheelPitch}this.WHEEL_SKID_PITCH=0;if(this.PITCH_FL>this.WHEEL_SKID_PITCH)this.WHEEL_SKID_PITCH=this.PITCH_FL;if(this.PITCH_FR>this.WHEEL_SKID_PITCH)this.WHEEL_SKID_PITCH=this.PITCH_FR;if(this.PITCH_RL>this.WHEEL_SKID_PITCH)this.WHEEL_SKID_PITCH=this.PITCH_RL;if(this.PITCH_RR>this.WHEEL_SKID_PITCH)this.WHEEL_SKID_PITCH=this.PITCH_RR;if(this.playVehicleSounds===true){if(this._skidAudioSource!=null){var skidSoundClip=this._skidAudioSource.getSoundClip();if(skidSoundClip!=null)skidSoundClip.setPlaybackRate(this.WHEEL_SKID_PITCH)}}if(this.brakeLightsMesh!=null){this.brakeLightsMesh.isVisible=this.isBraking()}if(this.reverseLightsMesh!=null){this.reverseLightsMesh.isVisible=this.getReverseThrottle()}if(this.SKID_FL===0&&this.SKID_FL===0&&this.SKID_FL===0&&this.SKID_FL===0){this.smokeIntensityFactor=0}if(this.postNetworkAttributes==true&&UNITY.EntityController.HasNetworkEntity(this.transform)){var pitch_Attribute=this.getEnginePitchLevel();var brake_Attribute=this.isBraking()?1:0;var reverse_Attribute=this.getReverseThrottle()?1:0;var burnout_Attribute=(this.getCurrentBurnout()||this.getCurrentDonuts())?1:0;var SKID_FL_Attribute=this.getFrontLeftSkid();var SKID_FR_Attribute=this.getFrontRightSkid();var SKID_RL_Attribute=this.getBackLeftSkid();var SKID_RR_Attribute=this.getBackRightSkid();var SPIN_FL_Transform=this.m_frontLeftWheel.spinner;var SPIN_FR_Transform=this.m_frontRightWheel.spinner;var SPIN_RL_Transform=this.m_backLeftWheel.spinner;var SPIN_RR_Transform=this.m_backRightWheel.spinner;UNITY.EntityController.PostBufferedAttribute(this.transform,0,pitch_Attribute);UNITY.EntityController.PostBufferedAttribute(this.transform,1,brake_Attribute);UNITY.EntityController.PostBufferedAttribute(this.transform,2,reverse_Attribute);UNITY.EntityController.PostBufferedAttribute(this.transform,3,burnout_Attribute);UNITY.EntityController.PostBufferedAttribute(this.transform,4,SKID_FL_Attribute);UNITY.EntityController.PostBufferedAttribute(this.transform,5,SKID_FR_Attribute);UNITY.EntityController.PostBufferedAttribute(this.transform,6,SKID_RL_Attribute);UNITY.EntityController.PostBufferedAttribute(this.transform,7,SKID_RR_Attribute);if(SPIN_FL_Transform!=null&&SPIN_FL_Transform.rotationQuaternion!=null){SPIN_FL_Transform.rotationQuaternion.toEulerAnglesToRef(this.SPIN_FL_Rotation);UNITY.EntityController.PostBufferedAttribute(this.transform,8,this.SPIN_FL_Rotation.x)}else{UNITY.EntityController.PostBufferedAttribute(this.transform,8,0)}if(SPIN_FR_Transform!=null&&SPIN_FR_Transform.rotationQuaternion!=null){SPIN_FR_Transform.rotationQuaternion.toEulerAnglesToRef(this.SPIN_FR_Rotation);UNITY.EntityController.PostBufferedAttribute(this.transform,9,this.SPIN_FR_Rotation.x)}else{UNITY.EntityController.PostBufferedAttribute(this.transform,9,0)}if(SPIN_RL_Transform!=null&&SPIN_RL_Transform.rotationQuaternion!=null){SPIN_RL_Transform.rotationQuaternion.toEulerAnglesToRef(this.SPIN_RL_Rotation);UNITY.EntityController.PostBufferedAttribute(this.transform,10,this.SPIN_RL_Rotation.x)}else{UNITY.EntityController.PostBufferedAttribute(this.transform,10,0)}if(SPIN_RR_Transform!=null&&SPIN_RR_Transform.rotationQuaternion!=null){SPIN_RR_Transform.rotationQuaternion.toEulerAnglesToRef(this.SPIN_RR_Rotation);UNITY.EntityController.PostBufferedAttribute(this.transform,11,this.SPIN_RR_Rotation.x)}else{UNITY.EntityController.PostBufferedAttribute(this.transform,11,0)}UNITY.EntityController.PostBufferedAttribute(this.transform,12,this.animatorSteerAngle)}this.writeTransformMetadata()};StandardCarController.prototype.syncVehicleTilting=function(deltaTime){var vehicle=this.raycastVehicle;if(vehicle==null||this.transform.physicsBody==null)return;if(this.movementTilting===true){var currentSpeed=vehicle.getRawCurrentSpeedKph();var speedChange=(currentSpeed-this.previousSpeed);this.transform.physicsBody.getAngularVelocityToRef(this.angularVelocity);var lateralGForce=this.angularVelocity.y;if(speedChange>0){this.currentPitch-=(this.forwardPitchFactor*Math.min(speedChange,10)*deltaTime)}else if(speedChange<0){if(this.getFootBraking()===true||this.getHandBraking()===true&&this.americanSpeed<10){this.currentPitch+=(this.forwardPitchFactor*Math.min(-speedChange,10)*deltaTime)}}this.currentRoll+=(this.lateralRollFactor*lateralGForce*deltaTime);this.currentPitch*=(1.0-this.forwardRecoverRate);this.currentRoll*=(1.0-this.lateralRecoverRate);var maxPitch=BABYLON.Tools.ToRadians(this.maxForwardAngle);var maxRoll=BABYLON.Tools.ToRadians(this.maxLateralAngle);this.currentPitch=Math.max(-maxPitch,Math.min(maxPitch,this.currentPitch));this.currentRoll=Math.max(-maxRoll,Math.min(maxRoll,this.currentRoll));if(this.shiftingTime>0){var maxShiftEffect=Math.sin(this.shiftingTime*Math.PI);var forwardShiftSign=(this.currentForward>0)?1:-1;var forwardShiftEffect=(forwardShiftSign*maxShiftEffect*this.shiftForwardExtra*0.015);var lateralShiftEffect=(this.shiftingSide*maxShiftEffect*this.shiftLateralExtra*0.015);this.currentPitch+=forwardShiftEffect;this.currentRoll+=lateralShiftEffect}if(this.surfaceDetection===true){this.idleNoiseDelta+=(deltaTime*this.idleShakeRate)*3.0;this.driveNoiseDelta+=(deltaTime*BABYLON.Scalar.Lerp(this.lowSpeedScale,this.highSpeedScale,this.gradientSpeed))*3.0;var movementSpeed=Math.abs(currentSpeed);if(movementSpeed>=1){if(movementSpeed>=this.speedThreashold&&this.handBraking===false){if(this.lowForwardNoise>0||this.highForwardNoise>0){var forwardNoiseIntensity=BABYLON.Scalar.Lerp(this.lowForwardNoise,this.highForwardNoise,this.gradientSpeed);this.currentPitch+=(PROJECT.StandardCarController.SimplexNoise2D(this.driveNoiseDelta,0)*forwardNoiseIntensity*0.065)*this.roadSurfaceFactor}if(this.lowLateralNoise>0||this.highLateralNoise>0){var laterialNoiseIntensity=BABYLON.Scalar.Lerp(this.lowLateralNoise,this.highLateralNoise,this.gradientSpeed);this.currentRoll+=(PROJECT.StandardCarController.SimplexNoise2D(this.driveNoiseDelta,1)*laterialNoiseIntensity*0.065)*this.roadSurfaceFactor}}}else if(this.idleShakeNoise>0){this.currentPitch+=(PROJECT.StandardCarController.SimplexNoise2D(this.idleNoiseDelta,0)*this.idleShakeNoise*0.065);this.currentRoll+=(PROJECT.StandardCarController.SimplexNoise2D(this.idleNoiseDelta,1)*this.idleShakeNoise*0.065)}}if(this.chassisTransform!=null&&this.chassisTransform.rotationQuaternion!=null){this.chassisTransform.rotationQuaternion.toEulerAnglesToRef(this.tiltChassisEulers);var tiltAngleX=BABYLON.Scalar.Lerp(this.tiltChassisEulers.x,this.currentPitch,(this.lerpForwardFactor*deltaTime));var tiltAngleZ=BABYLON.Scalar.Lerp(this.tiltChassisEulers.z,this.currentRoll,(this.lerpLateralFactor*deltaTime));BABYLON.Quaternion.FromEulerAnglesToRef(tiltAngleX,this.tiltChassisEulers.y,tiltAngleZ,this.chassisTransform.rotationQuaternion)}this.previousSpeed=currentSpeed}};StandardCarController.prototype.writeTransformMetadata=function(){if(this.transform.metadata==null)this.transform.metadata={};if(this.transform.metadata.car==null)this.transform.metadata.car={};this.transform.metadata.car.forwardSpeed=this.forwardSpeed;this.transform.metadata.car.reversePower=this.maxReversePower;this.transform.metadata.car.americanSpeed=this.americanSpeed;this.transform.metadata.car.gradientSpeed=this.gradientSpeed;this.transform.metadata.car.currentForward=this.currentForward;this.transform.metadata.car.linearVelocity=this.getLinearVelocity().length();this.transform.metadata.car.normalizedSpeed=this.getNormalizedSpeed()};StandardCarController.prototype.getVehicleEngineTorque=function(rpm,power){var result=0;if(this.engineTorqueCurve!=null){result=(UNITY.Utilities.SampleAnimationFloat(this.engineTorqueCurve,BABYLON.Scalar.Clamp(rpm,this.MIN_RPM,this.MAX_RPM),BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE,false)*power)}return result};StandardCarController.prototype.createSmokeParticleSystem=function(name,emitter){var result=new BABYLON.ParticleSystem(name,10000,this.scene);result.blendMode=BABYLON.ParticleSystem.BLENDMODE_STANDARD;result.renderingGroupId=UNITY.Utilities.DefaultRenderGroup();result.particleTexture=this.smokeTexture;result.emitter=emitter;result.emitRate=0;result.updateSpeed=0.01;result.minSize=0.2;result.maxSize=1.3;result.minAngularSpeed=-1.5;result.maxAngularSpeed=1.5;result.minLifeTime=3.0;result.maxLifeTime=5.0;result.addVelocityGradient(0,1);result.addVelocityGradient(0.1,0.7);result.addVelocityGradient(0.7,0.2);result.addVelocityGradient(1.0,0.05);result.gravity=new BABYLON.Vector3(0,-0.1,0);result.minEmitBox=new BABYLON.Vector3(0,-0.25,0);result.maxEmitBox=new BABYLON.Vector3(0,-0.25,0);result.direction1=new BABYLON.Vector3(-1,-1,-1);result.direction2=new BABYLON.Vector3(1,1,1);result.color1=new BABYLON.Color4(0.95,0.95,0.95,this.smokeOpacity);result.color2=new BABYLON.Color4(0.85,0.85,0.85,this.smokeOpacity);result.colorDead=new BABYLON.Color4(0.9,0.9,0.9,(this.smokeOpacity*0.5));return result};StandardCarController.prototype.updateCurrentSkidInfo=function(wheel){return BABYLON.Scalar.Clamp((1-wheel.skidInfo))};StandardCarController.prototype.updateCurrentBrakeDamping=function(linear,angular,lerp){if(lerp===void 0){lerp=1.0}var totalWheelDampener=0;var destinationLinearDamping=(linear+totalWheelDampener);var destinationAngularDamping=angular;if(this.americanSpeed>=this.minPenaltySpeed&&this.linearWheelDrag>0){if(this.frontLeftContactTag===this.penaltyGroundTag)totalWheelDampener+=this.linearWheelDrag;if(this.frontRightContactTag===this.penaltyGroundTag)totalWheelDampener+=this.linearWheelDrag;if(this.rearLeftContactTag===this.penaltyGroundTag)totalWheelDampener+=this.linearWheelDrag;if(this.rearRightContactTag===this.penaltyGroundTag)totalWheelDampener+=this.linearWheelDrag}if(lerp<1.0){var currentLinearDamping=this.transform.physicsBody.getLinearDamping();var currentAngularDamping=this.transform.physicsBody.getAngularDamping();var smoothedLinearDamping=BABYLON.Scalar.Lerp(currentLinearDamping,destinationLinearDamping,lerp);var smoothedAngularDamping=BABYLON.Scalar.Lerp(currentAngularDamping,destinationAngularDamping,lerp);this.transform.physicsBody.setLinearDamping(smoothedLinearDamping);this.transform.physicsBody.setAngularDamping(smoothedAngularDamping)}else{this.transform.physicsBody.setLinearDamping(destinationLinearDamping);this.transform.physicsBody.setAngularDamping(destinationAngularDamping)}};StandardCarController.prototype.updateLinearBrakeDamping=function(linear,lerp){if(lerp===void 0){lerp=1.0}var totalWheelDampener=0;var destinationLinearDamping=(linear+totalWheelDampener);if(this.americanSpeed>=this.minPenaltySpeed&&this.linearWheelDrag>0){if(this.frontLeftContactTag===this.penaltyGroundTag)totalWheelDampener+=this.linearWheelDrag;if(this.frontRightContactTag===this.penaltyGroundTag)totalWheelDampener+=this.linearWheelDrag;if(this.rearLeftContactTag===this.penaltyGroundTag)totalWheelDampener+=this.linearWheelDrag;if(this.rearRightContactTag===this.penaltyGroundTag)totalWheelDampener+=this.linearWheelDrag}if(lerp<1.0){var currentLinearDamping=this.transform.physicsBody.getLinearDamping();var smoothedLinearDamping=BABYLON.Scalar.Lerp(currentLinearDamping,destinationLinearDamping,lerp);this.transform.physicsBody.setLinearDamping(smoothedLinearDamping)}else{this.transform.physicsBody.setLinearDamping(destinationLinearDamping)}};StandardCarController.prototype.updateAngularBrakeDamping=function(angular,lerp){if(lerp===void 0){lerp=1.0}var totalWheelDampener=0;var destinationAngularDamping=angular;if(this.americanSpeed>=this.minPenaltySpeed&&this.linearWheelDrag>0){if(this.frontLeftContactTag===this.penaltyGroundTag)totalWheelDampener+=this.linearWheelDrag;if(this.frontRightContactTag===this.penaltyGroundTag)totalWheelDampener+=this.linearWheelDrag;if(this.rearLeftContactTag===this.penaltyGroundTag)totalWheelDampener+=this.linearWheelDrag;if(this.rearRightContactTag===this.penaltyGroundTag)totalWheelDampener+=this.linearWheelDrag}if(lerp<1.0){var currentAngularDamping=this.transform.physicsBody.getAngularDamping();var smoothedAngularDamping=BABYLON.Scalar.Lerp(currentAngularDamping,destinationAngularDamping,lerp);this.transform.physicsBody.setAngularDamping(smoothedAngularDamping)}else{this.transform.physicsBody.setAngularDamping(destinationAngularDamping)}};StandardCarController.prototype.updateCurrentRotationDelta=function(delta){if(this.m_frontLeftWheel!=null)this.m_frontLeftWheel.deltaRotation=delta;if(this.m_frontRightWheel!=null)this.m_frontRightWheel.deltaRotation=delta;if(this.m_backLeftWheel!=null)this.m_backLeftWheel.deltaRotation=delta;if(this.m_backRightWheel!=null)this.m_backRightWheel.deltaRotation=delta};StandardCarController.prototype.updateCurrentRotationBoost=function(boost){if(this.wheelDriveType===1||this.wheelDriveType===2){if(this.m_frontLeftWheel!=null)this.m_frontLeftWheel.rotationBoost=boost;if(this.m_frontRightWheel!=null)this.m_frontRightWheel.rotationBoost=boost}if(this.wheelDriveType===0||this.wheelDriveType===2){if(this.m_backLeftWheel!=null)this.m_backLeftWheel.rotationBoost=boost;if(this.m_backRightWheel!=null)this.m_backRightWheel.rotationBoost=boost}};StandardCarController.prototype.updateCurrentFrictionSlip=function(lerpSpeed){if(this.m_frontLeftWheel!=null&&this.m_frontLeftWheel.defaultFriction!=null){var frontLeftFriction=this.m_frontLeftWheel.frictionSlip;if(frontLeftFriction<(this.m_frontLeftWheel.defaultFriction-0.1)){this.frontLeftFrictionLerping=true;frontLeftFriction=BABYLON.Scalar.Lerp(frontLeftFriction,this.m_frontLeftWheel.defaultFriction,(this.frontLeftFrictionPenalty===true)?(lerpSpeed*3.0):lerpSpeed);this.m_frontLeftWheel.frictionSlip=frontLeftFriction}else{this.frontLeftFrictionPenalty=false;this.frontLeftFrictionLerping=false;this.m_frontLeftWheel.frictionSlip=this.m_frontLeftWheel.defaultFriction}}if(this.m_frontRightWheel!=null&&this.m_frontRightWheel.defaultFriction!=null){var frontRightFriction=this.m_frontRightWheel.frictionSlip;if(frontRightFriction<(this.m_frontRightWheel.defaultFriction-0.1)){this.frontRightFrictionLerping=true;frontRightFriction=BABYLON.Scalar.Lerp(frontRightFriction,this.m_frontRightWheel.defaultFriction,(this.frontRightFrictionPenalty===true)?(lerpSpeed*3.0):lerpSpeed);this.m_frontRightWheel.frictionSlip=frontRightFriction}else{this.frontRightFrictionPenalty=false;this.frontRightFrictionLerping=false;this.m_frontRightWheel.frictionSlip=this.m_frontRightWheel.defaultFriction}}if(this.m_backLeftWheel!=null&&this.m_backLeftWheel.defaultFriction!=null){var backLeftFriction=this.m_backLeftWheel.frictionSlip;if(backLeftFriction<(this.m_backLeftWheel.defaultFriction-0.1)){this.rearLeftFrictionLerping=true;backLeftFriction=BABYLON.Scalar.Lerp(backLeftFriction,this.m_backLeftWheel.defaultFriction,(this.rearLeftFrictionPenalty===true)?(lerpSpeed*3.0):lerpSpeed);this.m_backLeftWheel.frictionSlip=backLeftFriction}else{this.rearLeftFrictionPenalty=false;this.rearLeftFrictionLerping=false;this.m_backLeftWheel.frictionSlip=this.m_backLeftWheel.defaultFriction}}if(this.m_backRightWheel!=null&&this.m_backRightWheel.defaultFriction!=null){var backRightFriction=this.m_backRightWheel.frictionSlip;if(backRightFriction<(this.m_backRightWheel.defaultFriction-0.1)){backRightFriction=BABYLON.Scalar.Lerp(backRightFriction,this.m_backRightWheel.defaultFriction,(this.rearRightFrictionPenalty===true)?(lerpSpeed*3.0):lerpSpeed);this.m_backRightWheel.frictionSlip=backRightFriction}else{this.rearRightFrictionPenalty=false;this.rearRightFrictionLerping=false;this.m_backRightWheel.frictionSlip=this.m_backRightWheel.defaultFriction}}};StandardCarController.prototype.getFrontLeftWheelContact=function(){return this.frontLeftContact};StandardCarController.prototype.getFrontRightWheelContact=function(){return this.frontRightContact};StandardCarController.prototype.getRearLeftWheelContact=function(){return this.rearLeftContact};StandardCarController.prototype.getRearRightWheelContact=function(){return this.rearRightContact};StandardCarController.prototype.getFrontLeftWheelContactTag=function(){return this.frontLeftContactTag};StandardCarController.prototype.getFrontRightWheelContactTag=function(){return this.frontRightContactTag};StandardCarController.prototype.getRearLeftWheelContactTag=function(){return this.rearLeftContactTag};StandardCarController.prototype.getRearRightWheelContactTag=function(){return this.rearRightContactTag};StandardCarController.prototype.getFrontLeftWheelContactPoint=function(){return this.frontLeftContactPoint};StandardCarController.prototype.getFrontRightWheelContactPoint=function(){return this.frontRightContactPoint};StandardCarController.prototype.getRearLeftWheelContactPoint=function(){return this.rearLeftContactPoint};StandardCarController.prototype.getRearRightWheelContactPoint=function(){return this.rearRightContactPoint};StandardCarController.prototype.getFrontLeftWheelContactNormal=function(){return this.frontLeftContactNormal};StandardCarController.prototype.getFrontRightWheelContactNormal=function(){return this.frontRightContactNormal};StandardCarController.prototype.getRearLeftWheelContactNormal=function(){return this.rearLeftContactNormal};StandardCarController.prototype.getRearRightWheelContactNormal=function(){return this.rearRightContactNormal};StandardCarController.prototype.castWheelContactRays=function(){if(this.transform.physicsBody==null)return;var raycast=null;this.frontLeftContact=false;this.frontRightContact=false;this.rearLeftContact=false;this.rearRightContact=false;this.frontLeftContactTag="";this.frontRightContactTag="";this.rearLeftContactTag="";this.rearRightContactTag="";this.frontLeftContactPoint.set(0,0,0);this.frontRightContactPoint.set(0,0,0);this.rearLeftContactPoint.set(0,0,0);this.rearRightContactPoint.set(0,0,0);this.frontLeftContactNormal.set(0,0,0);this.frontRightContactNormal.set(0,0,0);this.rearLeftContactNormal.set(0,0,0);this.rearRightContactNormal.set(0,0,0);UNITY.Utilities.GetAbsolutePositionToRef(this.frontLeftWheelMesh,this.startRaycastPosition);UNITY.Utilities.GetAbsolutePositionToRef(this.frontLeftWheelMesh,this.endRaycastPosition,this.downDirection.scale(this.downDistance));this.startRaycastPosition.addInPlace(this.m_velocityOffset);this.endRaycastPosition.addInPlace(this.m_velocityOffset);if(raycast!=null&&raycast.hasHit===true&&raycast.collisionObject!=null&&raycast.collisionObject.entity!=null){this.frontLeftContact=true;this.frontLeftContactTag=UNITY.SceneManager.GetTransformTag(raycast.collisionObject.entity);this.frontLeftContactPoint.copyFrom(raycast.hitPoint);this.frontLeftContactNormal.copyFrom(raycast.hitNormal)}if(this.showSensorLines===true){if(this.frontLeftSensorLine==null)this.frontLeftSensorLine=new UNITY.LinesMeshRenderer(this.transform.name+".FrontLeftSensorLine",this.scene);if(this.frontLeftContact===true){this.frontLeftSensorLine.drawLine([this.startRaycastPosition,raycast.hitPoint],BABYLON.Color3.Yellow())}else{this.frontLeftSensorLine.drawLine([this.startRaycastPosition,this.endRaycastPosition],BABYLON.Color3.Blue())}}UNITY.Utilities.GetAbsolutePositionToRef(this.frontRightWheelMesh,this.startRaycastPosition);UNITY.Utilities.GetAbsolutePositionToRef(this.frontRightWheelMesh,this.endRaycastPosition,this.downDirection.scale(this.downDistance));this.startRaycastPosition.addInPlace(this.m_velocityOffset);this.endRaycastPosition.addInPlace(this.m_velocityOffset);if(raycast!=null&&raycast.hasHit===true&&raycast.collisionObject!=null&&raycast.collisionObject.entity!=null){this.frontRightContact=true;this.frontRightContactTag=UNITY.SceneManager.GetTransformTag(raycast.collisionObject.entity);this.frontRightContactPoint.copyFrom(raycast.hitPoint);this.frontRightContactNormal.copyFrom(raycast.hitNormal)}if(this.showSensorLines===true){if(this.frontRightSensorLine==null)this.frontRightSensorLine=new UNITY.LinesMeshRenderer(this.transform.name+".FrontRightSensorLine",this.scene);if(this.frontRightContact===true){this.frontRightSensorLine.drawLine([this.startRaycastPosition,raycast.hitPoint],BABYLON.Color3.Yellow())}else{this.frontRightSensorLine.drawLine([this.startRaycastPosition,this.endRaycastPosition],BABYLON.Color3.Blue())}}UNITY.Utilities.GetAbsolutePositionToRef(this.backLeftWheelMesh,this.startRaycastPosition);UNITY.Utilities.GetAbsolutePositionToRef(this.backLeftWheelMesh,this.endRaycastPosition,this.downDirection.scale(this.downDistance));this.startRaycastPosition.addInPlace(this.m_velocityOffset);this.endRaycastPosition.addInPlace(this.m_velocityOffset);if(raycast!=null&&raycast.hasHit===true&&raycast.collisionObject!=null&&raycast.collisionObject.entity!=null){this.rearLeftContact=true;this.rearLeftContactTag=UNITY.SceneManager.GetTransformTag(raycast.collisionObject.entity);this.rearLeftContactPoint.copyFrom(raycast.hitPoint);this.rearLeftContactNormal.copyFrom(raycast.hitNormal)}if(this.showSensorLines===true){if(this.rearLeftSensorLine==null)this.rearLeftSensorLine=new UNITY.LinesMeshRenderer(this.transform.name+".RearLeftSensorLine",this.scene);if(this.rearLeftContact===true){this.rearLeftSensorLine.drawLine([this.startRaycastPosition,raycast.hitPoint],BABYLON.Color3.Yellow())}else{this.rearLeftSensorLine.drawLine([this.startRaycastPosition,this.endRaycastPosition],BABYLON.Color3.Blue())}}UNITY.Utilities.GetAbsolutePositionToRef(this.backRightWheelMesh,this.startRaycastPosition);UNITY.Utilities.GetAbsolutePositionToRef(this.backRightWheelMesh,this.endRaycastPosition,this.downDirection.scale(this.downDistance));this.startRaycastPosition.addInPlace(this.m_velocityOffset);this.endRaycastPosition.addInPlace(this.m_velocityOffset);if(raycast!=null&&raycast.hasHit===true&&raycast.collisionObject!=null&&raycast.collisionObject.entity!=null){this.rearRightContact=true;this.rearRightContactTag=UNITY.SceneManager.GetTransformTag(raycast.collisionObject.entity);this.rearRightContactPoint.copyFrom(raycast.hitPoint);this.rearRightContactNormal.copyFrom(raycast.hitNormal)}if(this.showSensorLines===true){if(this.rearRightSensorLine==null)this.rearRightSensorLine=new UNITY.LinesMeshRenderer(this.transform.name+".RearRightSensorLine",this.scene);if(this.rearRightContact===true){this.rearRightSensorLine.drawLine([this.startRaycastPosition,raycast.hitPoint],BABYLON.Color3.Yellow())}else{this.rearRightSensorLine.drawLine([this.startRaycastPosition,this.endRaycastPosition],BABYLON.Color3.Blue())}}};StandardCarController.DEFAULT_SPEED_FACTOR=1.0;StandardCarController.DEFAULT_PITCH_FACTOR=1.0;StandardCarController.SimplexNoise2D=SIMPLEX.createNoise2D();return StandardCarController}(UNITY.ScriptComponent));PROJECT.StandardCarController=StandardCarController})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var VehicleCameraManager=(function(_super){__extends(VehicleCameraManager,_super);function VehicleCameraManager(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.enableCamera=false;_this.followTarget=false;_this.followHeight=1.25;_this.pitchingAngle=0.0;_this.rotationDamping=5.0;_this.minimumDistance=4.0;_this.maximumDistance=5.0;_this.buttonCamera=BABYLON.Xbox360Button.Y;_this.keyboardCamera=UNITY.UserInputKey.P;_this.tickRemoteEntities=false;_this.fastMotionBlur=false;_this.lowSpeedBlurring=0.0;_this.highSpeedBlurring=20.0;_this.motionBlurSamples=32;_this.isObjectBasedBlur=true;_this.fastCameraShake=false;_this.lowSpeedShaking=1.0;_this.highSpeedShaking=1.0;_this.firstPerson=false;_this.cameraPivot=null;_this.targetEulers=BABYLON.Vector3.Zero();_this.cameraRotation=BABYLON.Quaternion.Zero();_this.cameraPivotOffset=BABYLON.Vector3.Zero();_this.autoAttachCamera=false;_this.motionBlurAttached=false;_this.m_freeCamera=null;_this.m_motionBlur=null;_this.m_cameraTransform=null;_this.m_inputController=null;_this.m_standardController=null;_this.m_firstPersonOffset=new BABYLON.Vector3(0.0,1.15,0.15);return _this}VehicleCameraManager.prototype.awake=function(){this.awakeCameraManager()};VehicleCameraManager.prototype.start=function(){this.initCameraManager()};VehicleCameraManager.prototype.late=function(){this.lateUpdateCameraManager()};VehicleCameraManager.prototype.destroy=function(){this.destroyCameraManager()};VehicleCameraManager.prototype.awakeCameraManager=function(){this.enableCamera=this.getProperty("enableCamera",this.enableCamera);this.followTarget=this.getProperty("followTarget",this.followTarget);this.followHeight=this.getProperty("followHeight",this.followHeight);this.pitchingAngle=this.getProperty("pitchingAngle",this.pitchingAngle);this.rotationDamping=this.getProperty("rotationDamping",this.rotationDamping);this.minimumDistance=this.getProperty("minimumDistance",this.minimumDistance);this.maximumDistance=this.getProperty("maximumDistance",this.maximumDistance);this.autoAttachCamera=this.getProperty("attachCamera",this.autoAttachCamera);this.tickRemoteEntities=this.getProperty("tickRemoteEntities",this.tickRemoteEntities);this.fastMotionBlur=this.getProperty("fastMotionBlur",this.fastMotionBlur);this.lowSpeedBlurring=this.getProperty("lowSpeedBlurring",this.lowSpeedBlurring);this.highSpeedBlurring=this.getProperty("highSpeedBlurring",this.highSpeedBlurring);this.motionBlurSamples=this.getProperty("motionBlurSamples",this.motionBlurSamples);this.isObjectBasedBlur=this.getProperty("isObjectBasedBlur",this.isObjectBasedBlur);this.fastCameraShake=this.getProperty("fastCameraShake",this.fastCameraShake);this.lowSpeedShaking=this.getProperty("lowSpeedShaking",this.lowSpeedShaking);this.highSpeedShaking=this.getProperty("highSpeedShaking",this.highSpeedShaking);var firstPersonOffset=this.getProperty("firstPersonOffset");if(firstPersonOffset!=null)this.m_firstPersonOffset=UNITY.Utilities.ParseVector3(firstPersonOffset);if(this.rotationDamping<=0)this.rotationDamping=1};VehicleCameraManager.prototype.initCameraManager=function(){var _this=this;this.m_standardController=this.getComponent("PROJECT.StandardCarController");this.m_inputController=this.getComponent("PROJECT.VehicleInputController");if(this.m_inputController!=null){UNITY.InputController.OnKeyboardPress(this.keyboardCamera,function(){_this.togglePlayerCamera()});UNITY.InputController.OnGamepadButtonPress(this.buttonCamera,function(){_this.togglePlayerCamera()})}};VehicleCameraManager.prototype.lateUpdateCameraManager=function(){if(this.m_cameraTransform==null&&this.autoAttachCamera===true){if(this.m_inputController!=null)this.attachPlayerCamera(this.m_inputController.playerNumber)}if(this.firstPerson===true){this.firstPersonCamera()}else{this.thirdPersonCamera()}if(this.m_freeCamera!=null&&this.m_motionBlur!=null&&this.m_standardController!=null){if(this.m_standardController.isBoosting()){if(this.motionBlurAttached===false){this.m_freeCamera.attachPostProcess(this.m_motionBlur);this.motionBlurAttached=true}this.m_motionBlur.motionStrength=BABYLON.Scalar.Lerp(this.lowSpeedBlurring,this.highSpeedBlurring,this.m_standardController.getGradientSpeed())}else{this.m_motionBlur.motionStrength=this.lowSpeedBlurring;if(this.motionBlurAttached===true){this.m_freeCamera.detachPostProcess(this.m_motionBlur);this.motionBlurAttached=false}}}};VehicleCameraManager.prototype.destroyCameraManager=function(){this.m_standardController=null;this.m_cameraTransform=null};VehicleCameraManager.prototype.attachPlayerCamera=function(player){if(this.m_cameraTransform==null){var playerCamera=(player<=0||player>4)?1:player;this.m_freeCamera=PROJECT.DefaultCameraSystem.GetMainCamera(this.scene);this.m_cameraTransform=PROJECT.DefaultCameraSystem.GetCameraTransform(this.scene,playerCamera);if(this.m_cameraTransform!=null&&this.followTarget===true){if(this.cameraPivot==null){this.cameraPivot=new BABYLON.TransformNode(this.transform.name+".CameraPivot",this.scene);this.cameraPivot.parent=null;this.cameraPivot.position=this.transform.position.clone();this.cameraPivot.rotationQuaternion=this.transform.rotationQuaternion.clone()}this.m_cameraTransform.parent=this.cameraPivot;this.m_cameraTransform.position.set(0,0,0);this.m_cameraTransform.rotationQuaternion=new BABYLON.Quaternion(0,0,0,1)}if(this.m_motionBlur==null&&this.m_freeCamera!=null&&this.fastMotionBlur===true){try{this.m_motionBlur=new BABYLON.MotionBlurPostProcess("FastMotionBlur",this.scene,1.0,this.m_freeCamera)}catch(e){console.warn(e)}try{if(this.m_motionBlur!=null){this.m_freeCamera.detachPostProcess(this.m_motionBlur);this.m_motionBlur.isObjectBased=this.isObjectBasedBlur;this.m_motionBlur.motionStrength=this.lowSpeedBlurring;this.m_motionBlur.motionBlurSamples=this.motionBlurSamples;this.motionBlurAttached=false}}catch(e){console.warn(e)}}}};VehicleCameraManager.prototype.togglePlayerCamera=function(){this.firstPerson=!this.firstPerson};VehicleCameraManager.prototype.firstPersonCamera=function(){if(this.enableCamera===true&&this.m_cameraTransform!=null&&this.m_standardController!=null){if(this.followTarget===true){if(this.cameraPivot!=null){UNITY.Utilities.GetAbsolutePositionToRef(this.transform,this.cameraPivot.position);this.cameraPivot.rotationQuaternion.copyFrom(this.transform.rotationQuaternion);this.m_cameraTransform.position.copyFrom(this.m_firstPersonOffset);UNITY.Utilities.FromEulerToRef(0,0,0,this.m_cameraTransform.rotationQuaternion)}}else{this.m_cameraTransform.lookAt(this.transform.position)}}};VehicleCameraManager.prototype.thirdPersonCamera=function(){if(this.enableCamera===true&&this.m_cameraTransform!=null&&this.m_standardController!=null){if(this.followTarget===true){if(this.cameraPivot!=null){var deltaTime=this.getDeltaSeconds();this.cameraPivotOffset.set(0,this.followHeight,0);UNITY.Utilities.GetAbsolutePositionToRef(this.transform,this.cameraPivot.position,this.cameraPivotOffset);var turnDampener=(deltaTime*this.rotationDamping);this.transform.rotationQuaternion.toEulerAnglesToRef(this.targetEulers);BABYLON.Quaternion.FromEulerAnglesToRef((this.targetEulers.x+BABYLON.Tools.ToRadians(this.pitchingAngle)),this.targetEulers.y,0,this.cameraRotation);BABYLON.Quaternion.SlerpToRef(this.cameraPivot.rotationQuaternion,this.cameraRotation,turnDampener,this.cameraPivot.rotationQuaternion);var cameraBoomDistance=BABYLON.Scalar.Lerp(this.minimumDistance,this.maximumDistance,this.m_standardController.getGradientSpeed());this.m_cameraTransform.position.set(0,0,-cameraBoomDistance)}}else{this.m_cameraTransform.lookAt(this.transform.position)}}};return VehicleCameraManager}(UNITY.ScriptComponent));PROJECT.VehicleCameraManager=VehicleCameraManager})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var VehicleInputController=(function(_super){__extends(VehicleInputController,_super);function VehicleInputController(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.playerDeltaX=0;_this.playerDeltaY=0;_this.playerMouseX=0;_this.playerMouseY=0;_this.ackermanRadius=0.85;_this.recoveryRadius=0.25;_this.waypointPosition=BABYLON.Vector3.Zero();_this.waypointCount=0;_this.waypointIndex=0;_this.noMovementTime=0;_this.reverseFixMode=false;_this.recoveryFixMode=false;_this.nextTargetSpeed=0;_this.prevTargetSpeed=0;_this.vehicleResetCheck=0;_this.randomSkillFactor=0;_this.showChaseRabbit=false;_this.showSensorLines=false;_this.steeringWheelMode=-1;_this.rabbitTrackerLine=null;_this.rabbitTrackerColor=new BABYLON.Color3(1,1,1);_this.greenTrackingColor=new BABYLON.Color3(0,1,0);_this.redTrackingColor=new BABYLON.Color3(1,0,0);_this.localTargetPosition=new BABYLON.Vector3(0,0,0);_this.avoidPositionOffset=new BABYLON.Vector3(0,0,0);_this.avoidanceLerp=0;_this.avoidanceTimer=0;_this.avoidanceValue=0;_this.randomTurning=0;_this.randomBoosting=0;_this.randomDistance=0;_this.lastCheckpoint=-1;_this.mainCenterSensorLine=null;_this.mainRightSensorLine=null;_this.mainLeftSensorLine=null;_this.angleRightSensorLine=null;_this.angleLeftSensorLine=null;_this.sideRightSensorLine=null;_this.sideLeftSensorLine=null;_this.backRightSensorLine=null;_this.backLeftSensorLine=null;_this.sidewaysOffsetVector=BABYLON.Vector3.Zero();_this.backBumperEdgeVector=BABYLON.Vector3.Zero();_this.sensorStartPos=BABYLON.Vector3.Zero();_this.sensorPointPos=BABYLON.Vector3.Zero();_this.sensorAnglePos=BABYLON.Vector3.Zero();_this.rsideStartPos=BABYLON.Vector3.Zero();_this.rsidePointPos=BABYLON.Vector3.Zero();_this.lsideStartPos=BABYLON.Vector3.Zero();_this.lsidePointPos=BABYLON.Vector3.Zero();_this.tempScaleVector=BABYLON.Vector3.Zero();_this.rbackStartPos=BABYLON.Vector3.Zero();_this.rbackPointPos=BABYLON.Vector3.Zero();_this.lbackStartPos=BABYLON.Vector3.Zero();_this.lbackPointPos=BABYLON.Vector3.Zero();_this.trackVehiclePosition=BABYLON.Vector3.Zero();_this.trackRabbitPosition=BABYLON.Vector3.Zero();_this.enableInput=false;_this.resetTiming=3.0;_this.playerNumber=UNITY.PlayerNumber.One;_this.pedelForward=7;_this.triggerForward=UNITY.Xbox360Trigger.Right;_this.keyboardForawrd=UNITY.UserInputKey.W;_this.auxKeyboardForawrd=UNITY.UserInputKey.UpArrow;_this.pedalBackward=6;_this.triggerBackwards=UNITY.Xbox360Trigger.Left;_this.keyboardBackwards=UNITY.UserInputKey.S;_this.auxKeyboardBackwards=UNITY.UserInputKey.DownArrow;_this.pedalBooster=1;_this.keyboardBooster=UNITY.UserInputKey.Ctrl;_this.buttonBooster=BABYLON.Xbox360Button.B;_this.buttonHandbrake=BABYLON.Xbox360Button.X;_this.keyboardHandbrake=UNITY.UserInputKey.SpaceBar;_this.leftWheelHandbrake=4;_this.rightWheelHandbrake=5;_this.keyboardDonut=UNITY.UserInputKey.Shift;_this.leftButtonDonut=BABYLON.Xbox360Button.LB;_this.rightButtonDonut=BABYLON.Xbox360Button.RB;_this.leftWheelDonut=10;_this.rightWheelDonut=11;_this.raceLineNode=0;_this.minLookAhead=5;_this.maxLookAhead=50;_this.driverSkillLevel=1;_this.chaseRabbitSpeed=1.0;_this.throttleSensitivity=1;_this.steeringSensitivity=1;_this.brakingSensitivity=1;_this.brakingTurnAngle=15;_this.brakingSpeedLimit=90;_this.skiddingSpeedLimit=100;_this.linearDampenForce=0.1;_this.driveSpeedMultiplier=5.0;_this.driveLineDistance=1.0;_this.resetMovingTimeout=3;_this.reverseThrottleTime=3;_this.maxRaceTrackSpeed=0;_this.trackManagerIdentity="TrackManager";_this.vehicleTag="Vehicle";_this.obstacleTag="Obstacle";_this.sensorLength=8;_this.spacerWidths=0.85;_this.angleFactors=1.5;_this.initialOffsetX=1;_this.initialOffsetY=0.5;_this.initialOffsetZ=2;_this.sidewaysLength=1.5;_this.sidewaysOffset=0.5;_this.backBumperEdge=2.5;_this.powerBoosting=0.5;_this.wonderDistance=1.0;_this.avoidanceFactor=0.5;_this.avoidanceSpeed=3.0;_this.avoidanceTimeout=3.0;_this.avoidanceDistance=2.0;_this.reversingFlag=false;_this.reversingTime=0.0;_this.reversingWait=2.0;_this.reversingFor=1.5;_this.m_chasePointMesh=null;_this.m_chaseRabbitMesh=null;_this.m_circuitInterfaces=null;_this.m_circuitRaceLine_1=null;_this.m_circuitRaceLine_2=null;_this.m_circuitRaceLine_3=null;_this.m_circuitRaceLine_4=null;_this.m_circuitRaceLine_5=null;_this.m_rigidbodyPhysics=null;_this.m_checkpointManager=null;_this.m_standardCarController=null;_this.autoDriveRaycastResult=new BABYLON.PhysicsRaycastResult;return _this}VehicleInputController.prototype.getPlayerDeltaX=function(){return this.playerDeltaX};;VehicleInputController.prototype.getPlayerDeltaY=function(){return this.playerDeltaY};;VehicleInputController.prototype.getPlayerMouseX=function(){return this.playerMouseX};;VehicleInputController.prototype.getPlayerMouseY=function(){return this.playerMouseY};;VehicleInputController.prototype.getWaypointIndex=function(){return this.waypointIndex};;VehicleInputController.prototype.getChaseRabbitMesh=function(){return this.m_chaseRabbitMesh};;VehicleInputController.prototype.resetChaseRabbitMesh=function(){if(this.m_chaseRabbitMesh!=null){this.m_chaseRabbitMesh.position=this.transform.position.clone();this.m_chaseRabbitMesh.rotationQuaternion=this.transform.rotationQuaternion.clone()}};VehicleInputController.prototype.getChasePointMesh=function(){return this.m_chasePointMesh};;VehicleInputController.prototype.resetChasePointMesh=function(){if(this.m_chasePointMesh!=null){this.m_chasePointMesh.position=this.transform.position.clone();this.m_chasePointMesh.rotationQuaternion=this.transform.rotationQuaternion.clone()}};VehicleInputController.prototype.awake=function(){this.awakeVehicleController()};VehicleInputController.prototype.start=function(){this.initVehicleController()};VehicleInputController.prototype.update=function(){this.updateVehicleController()};VehicleInputController.prototype.destroy=function(){this.destroyVehicleController()};VehicleInputController.prototype.awakeVehicleController=function(){var _this=this;this.enableInput=this.getProperty("enableInput",this.enableInput);this.resetTiming=this.getProperty("resetTiming",this.resetTiming);this.playerNumber=this.getProperty("playerNumber",this.playerNumber);this.ackermanRadius=this.getProperty("ackermanRadius",this.ackermanRadius);this.recoveryRadius=this.getProperty("recoveryRadius",this.recoveryRadius);this.showChaseRabbit=this.getProperty("showChaseRabbit",this.showChaseRabbit);this.showSensorLines=this.getProperty("showSensorLines",this.showSensorLines);this.minLookAhead=this.getProperty("minLookAhead",this.minLookAhead);this.maxLookAhead=this.getProperty("maxLookAhead",this.maxLookAhead);this.driverSkillLevel=this.getProperty("driverSkillLevel",this.driverSkillLevel);this.throttleSensitivity=this.getProperty("throttleSensitivity",this.throttleSensitivity);this.steeringSensitivity=this.getProperty("steeringSensitivity",this.steeringSensitivity);this.brakingSensitivity=this.getProperty("brakingSensitivity",this.brakingSensitivity);this.brakingTurnAngle=this.getProperty("brakingTurnAngle",this.brakingTurnAngle);this.brakingSpeedLimit=this.getProperty("brakingSpeedLimit",this.brakingSpeedLimit);this.skiddingSpeedLimit=this.getProperty("skiddingSpeedLimit",this.skiddingSpeedLimit);this.linearDampenForce=this.getProperty("linearDampenForce",this.linearDampenForce);this.resetMovingTimeout=this.getProperty("resetMovingTimeout",this.resetMovingTimeout);this.reverseThrottleTime=this.getProperty("reverseThrottleTime",this.reverseThrottleTime);this.driveSpeedMultiplier=this.getProperty("driveSpeedMultiplier",this.driveSpeedMultiplier);this.driveLineDistance=this.getProperty("driveLineDistance",this.driveLineDistance);this.maxRaceTrackSpeed=this.getProperty("maxRaceTrackSpeed",this.maxRaceTrackSpeed);this.trackManagerIdentity=this.getProperty("trackManagerIdentity",this.trackManagerIdentity);this.vehicleTag=this.getProperty("vehicleTag",this.vehicleTag);this.obstacleTag=this.getProperty("obstacleTag",this.obstacleTag);this.sensorLength=this.getProperty("sensorLength",this.sensorLength);this.spacerWidths=this.getProperty("spacerWidths",this.spacerWidths);this.angleFactors=this.getProperty("angleFactors",this.angleFactors);this.initialOffsetX=this.getProperty("initialOffsetX",this.initialOffsetX);this.initialOffsetY=this.getProperty("initialOffsetY",this.initialOffsetY);this.initialOffsetZ=this.getProperty("initialOffsetZ",this.initialOffsetZ);this.sidewaysLength=this.getProperty("sidewaysLength",this.sidewaysLength);this.sidewaysOffset=this.getProperty("sidewaysOffset",this.sidewaysOffset);this.backBumperEdge=this.getProperty("backBumperEdge",this.backBumperEdge);this.powerBoosting=this.getProperty("powerBoosting",this.powerBoosting);this.wonderDistance=this.getProperty("wonderDistance",this.wonderDistance);this.avoidanceFactor=this.getProperty("avoidanceFactor",this.avoidanceFactor);this.avoidanceSpeed=this.getProperty("avoidanceSpeed",this.avoidanceSpeed);this.avoidanceTimeout=this.getProperty("avoidanceTimeout",this.avoidanceTimeout);this.avoidanceDistance=this.getProperty("avoidanceDistance",this.avoidanceDistance);if(this.ackermanRadius<=0)this.ackermanRadius=1;if(this.recoveryRadius<=0)this.recoveryRadius=1;if(this.resetMovingTimeout<=0)this.resetMovingTimeout=3;if(this.reverseThrottleTime<=0)this.reverseThrottleTime=3;if(this.throttleSensitivity<=0)this.throttleSensitivity=1;if(this.steeringSensitivity<=0)this.steeringSensitivity=1;if(this.brakingSensitivity<=0)this.brakingSensitivity=1;if(this.linearDampenForce<=0)this.linearDampenForce=0.1;if(this.angleFactors<=0)this.angleFactors=1.5;if(this.sensorLength<=0)this.sensorLength=8;if(this.sidewaysLength<=0)this.sidewaysLength=1;if(this.brakingSpeedLimit<=0)this.brakingSpeedLimit=40;if(this.skiddingSpeedLimit<=0)this.skiddingSpeedLimit=80;if(this.driveSpeedMultiplier<=1)this.driveSpeedMultiplier=5;if(this.trackManagerIdentity==null||this.trackManagerIdentity==="")this.trackManagerIdentity="TrackManager";var initialRaceLineNode=this.getProperty("initialRaceLineNode",1);this.raceLineNode=(initialRaceLineNode-1);var randomizer=this.getRandomNumber(10,15)*1000;UNITY.WindowManager.SetInterval(randomizer,function(){_this.randomSkillFactor=_this.getRandomNumber(1,20)})};VehicleInputController.prototype.initVehicleController=function(){var _this=this;this.m_rigidbodyPhysics=this.getComponent("UNITY.RigidbodyPhysics");this.m_checkpointManager=this.getComponent("PROJECT.CheckpointManager");if(this.m_rigidbodyPhysics!=null){this.m_rigidbodyPhysics.onCollisionEnterObservable.add(function(mesh){var tag=UNITY.SceneManager.GetTransformTag(mesh);if(tag===_this.vehicleTag){}});this.m_rigidbodyPhysics.onCollisionStayObservable.add(function(mesh){if(mesh!=null){var tag=UNITY.SceneManager.GetTransformTag(mesh);if(tag===_this.vehicleTag){}}});this.m_rigidbodyPhysics.onCollisionExitObservable.add(function(mesh){if(mesh!=null){var tag=UNITY.SceneManager.GetTransformTag(mesh);if(tag===_this.vehicleTag){}}})}else{UNITY.SceneManager.LogWarning("Null rigidbody physics for: "+this.transform.name)}this.m_standardCarController=this.getComponent("PROJECT.StandardCarController");var waypointsTransform=UNITY.SceneManager.GetTransformNode(this.scene,this.trackManagerIdentity);if(waypointsTransform!=null){var raceTrackManager=UNITY.SceneManager.FindScriptComponent(waypointsTransform,"PROJECT.RaceTrackManager");if(raceTrackManager!=null){this.waypointCount=0;this.waypointIndex=0;this.m_circuitInterfaces=raceTrackManager.getTrackNodes();this.m_circuitRaceLine_1=raceTrackManager.getControlPoints(0);this.m_circuitRaceLine_2=raceTrackManager.getControlPoints(1);this.m_circuitRaceLine_3=raceTrackManager.getControlPoints(2);this.m_circuitRaceLine_4=raceTrackManager.getControlPoints(3);this.m_circuitRaceLine_5=raceTrackManager.getControlPoints(4);if(this.m_circuitInterfaces!=null&&this.m_circuitInterfaces.length>0){this.waypointCount=this.m_circuitInterfaces.length}}else{UNITY.SceneManager.LogWarning("Fail to locate race track manager for: "+this.transform.name)}}else{UNITY.SceneManager.LogWarning("Fail to locate race track manager '"+this.trackManagerIdentity+"' for: "+this.transform.name)}};VehicleInputController.prototype.updateVehicleController=function(){if(this.enableInput===true){if(this.playerNumber===0){this.updateAutoPilotDrive()}else{this.updateManualInputDrive()}}if(this.resetTiming>0&&this.m_standardCarController!=null){var gameTime=UNITY.SceneManager.GetGameTime();if(this.transform.up.y>0.5||this.m_standardCarController.getAbsoluteSpeed()>1){this.vehicleResetCheck=gameTime}if(gameTime>(this.vehicleResetCheck+this.resetTiming)){this.transform.position.addInPlace(BABYLON.Vector3.Up().scale(0.5));UNITY.Utilities.LookRotationToRef(this.transform.forward,this.transform.rotationQuaternion)}}};VehicleInputController.prototype.updateManualInputDrive=function(){if(this.m_standardCarController!=null){this.playerDeltaX=UNITY.InputController.GetUserInput(UNITY.UserInputAxis.Horizontal,this.playerNumber);this.playerDeltaY=UNITY.InputController.GetUserInput(UNITY.UserInputAxis.Vertical,this.playerNumber);this.playerMouseX=UNITY.InputController.GetUserInput(UNITY.UserInputAxis.MouseX,this.playerNumber);this.playerMouseY=UNITY.InputController.GetUserInput(UNITY.UserInputAxis.MouseY,this.playerNumber);var auxForwardKeyboard=UNITY.InputController.GetKeyboardInput(this.auxKeyboardForawrd);var forwardKeyboard=UNITY.InputController.GetKeyboardInput(this.keyboardForawrd);var forwardTrigger=UNITY.InputController.GetGamepadTriggerInput(this.triggerForward,this.playerNumber);var forwardPedal=UNITY.InputController.GetGamepadButtonInput(this.pedelForward,this.playerNumber);var auxBackwardKeyboard=UNITY.InputController.GetKeyboardInput(this.auxKeyboardBackwards);var backwardKeyboard=UNITY.InputController.GetKeyboardInput(this.keyboardBackwards);var backwardTrigger=UNITY.InputController.GetGamepadTriggerInput(this.triggerBackwards,this.playerNumber);var backwardPedal=UNITY.InputController.GetGamepadButtonInput(this.pedalBackward,this.playerNumber);var boosterPedal=UNITY.InputController.GetGamepadButtonInput(this.pedalBooster,this.playerNumber);var boosterKeyboard=UNITY.InputController.GetKeyboardInput(this.keyboardBooster);var boosterButton=UNITY.InputController.GetGamepadButtonInput(this.buttonBooster,this.playerNumber);var handbrakeKeyboard=UNITY.InputController.GetKeyboardInput(this.keyboardHandbrake);var handbrakeButton=UNITY.InputController.GetGamepadButtonInput(this.buttonHandbrake,this.playerNumber);var handbrakeWheel_L=UNITY.InputController.GetGamepadButtonInput(this.leftWheelHandbrake,this.playerNumber);var handbrakeWheel_R=UNITY.InputController.GetGamepadButtonInput(this.rightWheelHandbrake,this.playerNumber);var donutKeyboard=UNITY.InputController.GetKeyboardInput(this.keyboardDonut);var donutButton_L=UNITY.InputController.GetGamepadButtonInput(this.leftButtonDonut,this.playerNumber);var donutButton_R=UNITY.InputController.GetGamepadButtonInput(this.rightButtonDonut,this.playerNumber);var donutWheel_L=UNITY.InputController.GetGamepadButtonInput(this.leftWheelDonut,this.playerNumber);var donutWheel_R=UNITY.InputController.GetGamepadButtonInput(this.rightWheelDonut,this.playerNumber);var playerMovement=0;var playerSteering=0;var playerHandbrake=false;var playerDonuts=false;var speedBooster=false;var wheelInput=false;if(forwardTrigger>0.2)playerMovement=forwardTrigger;else if(forwardPedal===true){playerMovement=1;wheelInput=true}else if(this.playerNumber===UNITY.PlayerNumber.One&&(forwardKeyboard===true||auxForwardKeyboard===true))playerMovement=1;else if(UNITY.InputController.AllowMobileControls===true&&UNITY.InputController.MobileControlsActive===true&&this.playerDeltaY>0)playerMovement=this.playerDeltaY;if(backwardTrigger>0.2)playerMovement=-backwardTrigger;else if(backwardPedal===true){playerMovement=-1;wheelInput=true}else if(this.playerNumber===UNITY.PlayerNumber.One&&(backwardKeyboard===true||auxBackwardKeyboard===true))playerMovement=-1;else if(UNITY.InputController.AllowMobileControls===true&&UNITY.InputController.MobileControlsActive===true&&this.playerDeltaY<0)playerMovement=this.playerDeltaY;playerSteering=this.playerDeltaX;playerHandbrake=(handbrakeKeyboard===true||handbrakeButton===true||handbrakeWheel_L===true||handbrakeWheel_R===true);playerDonuts=(donutKeyboard===true||donutButton_L===true||donutButton_R===true||donutWheel_L===true||donutWheel_R===true);speedBooster=(boosterKeyboard===true||boosterButton===true||boosterPedal===true);if(this.steeringWheelMode===-1&&UNITY.UserInputOptions.SupportedInputDevices!=null&&UNITY.UserInputOptions.SupportedInputDevices.length>0){var gamepad=UNITY.InputController.GetGamepad(this.playerNumber);if(gamepad!=null&&gamepad.id!=null){var foundSupportedDevice=false;for(var index=0;index<UNITY.UserInputOptions.SupportedInputDevices.length;index++){var wheel=UNITY.UserInputOptions.SupportedInputDevices[index];if(gamepad.id.toLowerCase().indexOf(wheel.deviceName.toLowerCase())>=0){if(wheel.forwardButton>-1)this.pedelForward=wheel.forwardButton;if(wheel.backwardButton>-1)this.pedalBackward=wheel.backwardButton;if(wheel.leftHandBrake>-1)this.leftWheelHandbrake=wheel.leftHandBrake;if(wheel.rightHandBrake>-1)this.rightWheelHandbrake=wheel.rightHandBrake;if(wheel.leftDonutBoost>-1)this.leftWheelDonut=wheel.leftDonutBoost;if(wheel.rightDonutBoost>-1)this.rightWheelDonut=wheel.rightDonutBoost;foundSupportedDevice=true;console.warn(gamepad.id+" steering wheel controls attached to: "+this.transform.name);break}}this.steeringWheelMode=(foundSupportedDevice===true)?1:0}}this.m_standardCarController.ackermanTurnFactor=(wheelInput===true)?this.ackermanRadius:1.0;this.m_standardCarController.throttleEngineSpeed=0;this.m_standardCarController.throttleBrakingForce=0;this.m_standardCarController.drive(playerMovement,playerSteering,playerHandbrake,playerDonuts,0,false,speedBooster)}};VehicleInputController.prototype.updateAutoPilotDrive=function(){var _this=this;if(this.m_standardCarController!=null){var gameTime=this.getGameTime();var deltaTime=this.getDeltaSeconds();var transformPosition=this.transform.getAbsolutePosition();this.raceLineNode=BABYLON.Scalar.Clamp(this.raceLineNode,0,4);if(this.m_chaseRabbitMesh==null){this.m_chaseRabbitMesh=BABYLON.MeshBuilder.CreateSphere(this.transform.name+".Rabbit",{segments:24,diameter:1},this.scene);this.m_chaseRabbitMesh.checkCollisions=false;this.m_chaseRabbitMesh.receiveShadows=false;this.m_chaseRabbitMesh.visibility=1.0;this.m_chaseRabbitMesh.isVisible=false;this.resetChaseRabbitMesh()}if(this.m_chaseRabbitMesh!=null){if(this.m_chaseRabbitMesh.isVisible===true&&this.showChaseRabbit===false){this.m_chaseRabbitMesh.isVisible=false}if(this.m_chaseRabbitMesh.isVisible===false&&this.showChaseRabbit===true){this.m_chaseRabbitMesh.isVisible=true}}if(this.m_chasePointMesh==null){this.m_chasePointMesh=BABYLON.MeshBuilder.CreateBox(this.transform.name+".Point",{size:0.9},this.scene);this.m_chasePointMesh.checkCollisions=false;this.m_chasePointMesh.receiveShadows=false;this.m_chasePointMesh.visibility=1.0;this.m_chasePointMesh.isVisible=false;this.resetChasePointMesh()}if(this.m_chasePointMesh!=null){if(this.m_chasePointMesh.isVisible===true&&this.showChaseRabbit===false){this.m_chasePointMesh.isVisible=false}if(this.m_chasePointMesh.isVisible===false&&this.showChaseRabbit===true){this.m_chasePointMesh.isVisible=true}}if(this.avoidanceTimer>0){this.avoidanceTimer-=deltaTime;if(this.avoidanceTimer<=0){this.avoidanceTimer=0;this.avoidanceValue=0}}var tagname="";var contact=false;var raycast=this.autoDriveRaycastResult;var avoidance=0;this.sidewaysOffsetVector.set(0,0,-this.sidewaysOffset);this.backBumperEdgeVector.set(0,0,-this.backBumperEdge);this.sensorStartPos.copyFrom(transformPosition);this.transform.up.scaleAndAddToRef(this.initialOffsetY,this.sensorStartPos);this.transform.forward.scaleAndAddToRef(this.initialOffsetZ,this.sensorStartPos);this.sensorPointPos.copyFrom(this.sensorStartPos);this.transform.forward.scaleAndAddToRef(this.sensorLength,this.sensorPointPos);this.sensorAnglePos.copyFrom(this.sensorPointPos);UNITY.Utilities.GetAbsolutePositionToRef(this.transform,this.rsideStartPos,this.sidewaysOffsetVector);this.transform.up.scaleAndAddToRef(this.initialOffsetY,this.rsideStartPos);this.transform.right.scaleAndAddToRef(this.initialOffsetX,this.rsideStartPos);this.rsidePointPos.copyFrom(this.rsideStartPos);this.transform.right.scaleAndAddToRef(this.sidewaysLength,this.rsidePointPos);UNITY.Utilities.GetAbsolutePositionToRef(this.transform,this.rbackStartPos,this.backBumperEdgeVector);this.transform.up.scaleAndAddToRef(this.initialOffsetY,this.rbackStartPos);this.transform.right.scaleAndAddToRef(this.initialOffsetX,this.rbackStartPos);this.rbackPointPos.copyFrom(this.rbackStartPos);this.transform.right.scaleAndAddToRef(this.sidewaysLength,this.rbackPointPos);UNITY.Utilities.GetAbsolutePositionToRef(this.transform,this.lsideStartPos,this.sidewaysOffsetVector);this.transform.up.scaleAndAddToRef(this.initialOffsetY,this.lsideStartPos);this.transform.right.scaleAndAddToRef(-this.initialOffsetX,this.lsideStartPos);this.lsidePointPos.copyFrom(this.lsideStartPos);this.transform.right.scaleAndAddToRef(-this.sidewaysLength,this.lsidePointPos);UNITY.Utilities.GetAbsolutePositionToRef(this.transform,this.lbackStartPos,this.backBumperEdgeVector);this.transform.up.scaleAndAddToRef(this.initialOffsetY,this.lbackStartPos);this.transform.right.scaleAndAddToRef(-this.initialOffsetX,this.lbackStartPos);this.lbackPointPos.copyFrom(this.lbackStartPos);this.transform.right.scaleAndAddToRef(-this.sidewaysLength,this.lbackPointPos);var firstSensorStartPos=this.sensorStartPos.clone();var firstSensorPointPos=this.sensorPointPos.clone();var mainRightSensorContact=false;this.transform.right.scaleToRef(this.spacerWidths,this.tempScaleVector);this.sensorStartPos.addInPlace(this.tempScaleVector);this.sensorPointPos.addInPlace(this.tempScaleVector);tagname="";contact=false;raycast.reset();UNITY.RigidbodyPhysics.RaycastToRef(this.sensorStartPos,this.sensorPointPos,this.autoDriveRaycastResult);if(raycast.hasHit===true&&raycast.body!=null&&raycast.body.transformNode!=null){tagname=UNITY.SceneManager.GetTransformTag(raycast.body.transformNode);contact=(tagname==this.vehicleTag||tagname===this.obstacleTag);if(contact===true){mainRightSensorContact=true;avoidance-=1.0}}if(this.showSensorLines===true){if(this.mainRightSensorLine==null)this.mainRightSensorLine=new UNITY.LinesMeshRenderer(this.transform.name+".MainRightSensorLine",this.scene);if(contact===true){this.mainRightSensorLine.drawLine([this.sensorStartPos,raycast.hitPoint],BABYLON.Color3.Yellow())}else{this.mainRightSensorLine.drawLine([this.sensorStartPos,this.sensorPointPos],BABYLON.Color3.Blue())}}var angleRightSensorContact=false;this.transform.right.scaleToRef((this.spacerWidths*2)*this.angleFactors,this.tempScaleVector);this.sensorAnglePos.addInPlace(this.tempScaleVector);tagname="";contact=false;raycast.reset();UNITY.RigidbodyPhysics.RaycastToRef(this.sensorStartPos,this.sensorAnglePos,this.autoDriveRaycastResult);if(mainRightSensorContact===false){if(raycast.hasHit===true&&raycast.body!=null&&raycast.body.transformNode!=null){tagname=UNITY.SceneManager.GetTransformTag(raycast.body.transformNode);contact=(tagname==this.vehicleTag||tagname===this.obstacleTag);if(contact===true){angleRightSensorContact=true;avoidance-=0.5}}}if(this.showSensorLines===true){if(this.angleRightSensorLine==null)this.angleRightSensorLine=new UNITY.LinesMeshRenderer(this.transform.name+".AngleRightSensorLine",this.scene);if(contact===true){this.angleRightSensorLine.drawLine([this.sensorStartPos,raycast.hitPoint],BABYLON.Color3.Yellow())}else{this.angleRightSensorLine.drawLine([this.sensorStartPos,this.sensorAnglePos],BABYLON.Color3.Blue())}}var sideRightSensorContact=false;tagname="";contact=false;raycast.reset();UNITY.RigidbodyPhysics.RaycastToRef(this.rsideStartPos,this.rsidePointPos,this.autoDriveRaycastResult);if(mainRightSensorContact===false&&angleRightSensorContact===false){if(raycast.hasHit===true&&raycast.body!=null&&raycast.body.transformNode!=null){tagname=UNITY.SceneManager.GetTransformTag(raycast.body.transformNode);contact=(tagname==this.vehicleTag||tagname===this.obstacleTag);if(contact===true){sideRightSensorContact=true;avoidance-=0.5}}}if(this.showSensorLines===true){if(this.sideRightSensorLine==null)this.sideRightSensorLine=new UNITY.LinesMeshRenderer(this.transform.name+".SideRightSensorLine",this.scene);if(contact===true){this.sideRightSensorLine.drawLine([this.rsideStartPos,raycast.hitPoint],BABYLON.Color3.Yellow())}else{this.sideRightSensorLine.drawLine([this.rsideStartPos,this.rsidePointPos],BABYLON.Color3.Blue())}}tagname="";contact=false;raycast.reset();UNITY.RigidbodyPhysics.RaycastToRef(this.rbackStartPos,this.rbackPointPos,this.autoDriveRaycastResult);if(mainRightSensorContact===false&&angleRightSensorContact===false&&sideRightSensorContact===false){if(raycast.hasHit===true&&raycast.body!=null&&raycast.body.transformNode!=null){tagname=UNITY.SceneManager.GetTransformTag(raycast.body.transformNode);contact=(tagname==this.vehicleTag||tagname===this.obstacleTag);if(contact===true){avoidance-=0.5}}}if(this.showSensorLines===true){if(this.backRightSensorLine==null)this.backRightSensorLine=new UNITY.LinesMeshRenderer(this.transform.name+".BackRightSensorLine",this.scene);if(contact===true){this.backRightSensorLine.drawLine([this.rbackStartPos,raycast.hitPoint],BABYLON.Color3.Yellow())}else{this.backRightSensorLine.drawLine([this.rbackStartPos,this.rbackPointPos],BABYLON.Color3.Blue())}}var mainLeftSensorContact=false;this.transform.right.scaleToRef(-(this.spacerWidths*2),this.tempScaleVector);this.sensorStartPos.addInPlace(this.tempScaleVector);this.sensorPointPos.addInPlace(this.tempScaleVector);tagname="";contact=false;raycast.reset();UNITY.RigidbodyPhysics.RaycastToRef(this.sensorStartPos,this.sensorPointPos,this.autoDriveRaycastResult);if(raycast.hasHit===true&&raycast.body!=null&&raycast.body.transformNode!=null){tagname=UNITY.SceneManager.GetTransformTag(raycast.body.transformNode);contact=(tagname==this.vehicleTag||tagname===this.obstacleTag);if(contact===true){mainLeftSensorContact=true;avoidance+=1.0}}if(this.showSensorLines===true){if(this.mainLeftSensorLine==null)this.mainLeftSensorLine=new UNITY.LinesMeshRenderer(this.transform.name+".MainLeftSensorLine",this.scene);if(contact===true){this.mainLeftSensorLine.drawLine([this.sensorStartPos,raycast.hitPoint],BABYLON.Color3.Yellow())}else{this.mainLeftSensorLine.drawLine([this.sensorStartPos,this.sensorPointPos],BABYLON.Color3.Blue())}}var angleLeftSensorContact=false;this.transform.right.scaleToRef(-(this.spacerWidths*4)*this.angleFactors,this.tempScaleVector);this.sensorAnglePos.addInPlace(this.tempScaleVector);tagname="";contact=false;raycast.reset();UNITY.RigidbodyPhysics.RaycastToRef(this.sensorStartPos,this.sensorAnglePos,this.autoDriveRaycastResult);if(mainLeftSensorContact===false){if(raycast.hasHit===true&&raycast.body!=null&&raycast.body.transformNode!=null){tagname=UNITY.SceneManager.GetTransformTag(raycast.body.transformNode);contact=(tagname==this.vehicleTag||tagname===this.obstacleTag);if(contact===true){angleLeftSensorContact=true;avoidance+=0.5}}}if(this.showSensorLines===true){if(this.angleLeftSensorLine==null)this.angleLeftSensorLine=new UNITY.LinesMeshRenderer(this.transform.name+".AngleLeftSensorLine",this.scene);if(contact===true){this.angleLeftSensorLine.drawLine([this.sensorStartPos,raycast.hitPoint],BABYLON.Color3.Yellow())}else{this.angleLeftSensorLine.drawLine([this.sensorStartPos,this.sensorAnglePos],BABYLON.Color3.Blue())}}var sideLeftSensorContact=false;tagname="";contact=false;raycast.reset();UNITY.RigidbodyPhysics.RaycastToRef(this.lsideStartPos,this.lsidePointPos,this.autoDriveRaycastResult);if(mainLeftSensorContact===false&&angleLeftSensorContact===false){if(raycast.hasHit===true&&raycast.body!=null&&raycast.body.transformNode!=null){tagname=UNITY.SceneManager.GetTransformTag(raycast.body.transformNode);contact=(tagname==this.vehicleTag||tagname===this.obstacleTag);if(contact===true){sideLeftSensorContact=true;avoidance+=0.5}}}if(this.showSensorLines===true){if(this.sideLeftSensorLine==null)this.sideLeftSensorLine=new UNITY.LinesMeshRenderer(this.transform.name+".SideLeftSensorLine",this.scene);if(contact===true){this.sideLeftSensorLine.drawLine([this.lsideStartPos,raycast.hitPoint],BABYLON.Color3.Yellow())}else{this.sideLeftSensorLine.drawLine([this.lsideStartPos,this.lsidePointPos],BABYLON.Color3.Blue())}}tagname="";contact=false;raycast.reset();UNITY.RigidbodyPhysics.RaycastToRef(this.lbackStartPos,this.lbackPointPos,this.autoDriveRaycastResult);if(mainLeftSensorContact===false&&angleLeftSensorContact===false&&sideLeftSensorContact===false){if(raycast.hasHit===true&&raycast.body!=null&&raycast.body.transformNode!=null){tagname=UNITY.SceneManager.GetTransformTag(raycast.body.transformNode);contact=(tagname==this.vehicleTag||tagname===this.obstacleTag);if(contact===true){avoidance+=0.5}}}if(this.showSensorLines===true){if(this.backLeftSensorLine==null)this.backLeftSensorLine=new UNITY.LinesMeshRenderer(this.transform.name+".BackLeftSensorLine",this.scene);if(contact===true){this.backLeftSensorLine.drawLine([this.lbackStartPos,raycast.hitPoint],BABYLON.Color3.Yellow())}else{this.backLeftSensorLine.drawLine([this.lbackStartPos,this.lbackPointPos],BABYLON.Color3.Blue())}}tagname="";contact=false;raycast.reset();UNITY.RigidbodyPhysics.RaycastToRef(firstSensorStartPos,firstSensorPointPos,this.autoDriveRaycastResult);if(avoidance===0){if(raycast.hasHit===true&&raycast.body!=null&&raycast.body.transformNode!=null){tagname=UNITY.SceneManager.GetTransformTag(raycast.body.transformNode);contact=(tagname==this.vehicleTag||tagname===this.obstacleTag);if(contact===true){if(raycast.hitNormal.x<0){avoidance=-1}else{avoidance=1}}}}if(this.showSensorLines===true){if(this.mainCenterSensorLine==null)this.mainCenterSensorLine=new UNITY.LinesMeshRenderer(this.transform.name+".MainCenterSensorLine",this.scene);if(contact===true){this.mainCenterSensorLine.drawLine([firstSensorStartPos,raycast.hitPoint],BABYLON.Color3.Yellow())}else{this.mainCenterSensorLine.drawLine([firstSensorStartPos,firstSensorPointPos],BABYLON.Color3.Blue())}}var trackNode=this.getCurrentTrackNode(this.waypointIndex);var controlPoint=this.getCurrentControlPoint(this.raceLineNode,this.waypointIndex);if(this.m_chaseRabbitMesh!=null&&this.waypointCount>0&&trackNode!=null&&controlPoint!=null){this.waypointPosition.set(controlPoint.position.x,controlPoint.position.y,controlPoint.position.z);var targetSpeed=(controlPoint.speed>0?controlPoint.speed:100)*this.getDriverSkillFactor();var targetRadius=(trackNode.radius*1);var distToTarget=BABYLON.Vector3.Distance(this.waypointPosition,transformPosition);if(distToTarget<targetRadius){if(this.prevTargetSpeed<=0)this.prevTargetSpeed=targetSpeed;this.nextTargetSpeed=BABYLON.Scalar.Lerp(this.prevTargetSpeed,targetSpeed,(1.0-(distToTarget/targetRadius)));if(this.showChaseRabbit===true)this.rabbitTrackerColor=this.redTrackingColor}else{this.nextTargetSpeed=targetSpeed;if(this.showChaseRabbit===true)this.rabbitTrackerColor=this.greenTrackingColor}var gradientSpeed=this.m_standardCarController.getGradientSpeed();var americanSpeed=this.m_standardCarController.getAmericanSpeed();var isSkidding=this.m_standardCarController.getCurrentSkidding();var lookAhead=BABYLON.Scalar.Lerp(this.minLookAhead,this.maxLookAhead,gradientSpeed);var rabbitPosition=this.m_chaseRabbitMesh.getAbsolutePosition();var rabbitDistance=BABYLON.Vector3.Distance(transformPosition,rabbitPosition);if(rabbitDistance<=lookAhead){this.chaseRabbitSpeed=BABYLON.Scalar.Lerp(1.0,this.driveSpeedMultiplier,gradientSpeed);this.m_chaseRabbitMesh.lookAt(this.waypointPosition);this.m_chaseRabbitMesh.translate(BABYLON.Axis.Z,this.chaseRabbitSpeed)}if(avoidance!==0){this.avoidanceValue=avoidance;this.avoidanceTimer=this.avoidanceTimeout}if(this.m_checkpointManager!=null){var currentCheckpoint=this.m_checkpointManager.getCheckPoint();if(currentCheckpoint!=this.lastCheckpoint){this.randomTurning=this.generateRandonNumber(0,3);if(this.powerBoosting>0){this.randomBoosting=this.generateRandonNumber(0,this.powerBoosting)}if(this.wonderDistance>0){var minimumVal=this.driveLineDistance;var randomSign=Math.sign(this.generateRandonNumber(-1,1));this.randomDistance=this.generateRandonNumber(minimumVal,(minimumVal+this.wonderDistance))*randomSign}this.lastCheckpoint=currentCheckpoint}}else{this.randomTurning=0;this.randomBoosting=0;this.randomDistance=0}var wantedAvoidDistance=(this.avoidanceTimer>0&&this.avoidanceValue!==0)?(this.avoidanceDistance*Math.sign(this.avoidanceValue)):0;wantedAvoidDistance+=this.randomDistance;this.avoidanceLerp=BABYLON.Scalar.Lerp(this.avoidanceLerp,wantedAvoidDistance,(this.avoidanceSpeed*deltaTime));this.avoidPositionOffset.set(this.avoidanceLerp,0,0);UNITY.Utilities.GetAbsolutePositionToRef(this.m_chaseRabbitMesh,this.m_chasePointMesh.position,this.avoidPositionOffset);if(this.showChaseRabbit===true){this.trackVehiclePosition.set(transformPosition.x,(transformPosition.y+0.5),transformPosition.z);this.trackRabbitPosition.set(this.m_chasePointMesh.position.x,(this.m_chasePointMesh.position.y+0.25),this.m_chasePointMesh.position.z);if(this.rabbitTrackerLine==null)this.rabbitTrackerLine=new UNITY.LinesMeshRenderer((this.transform.name+".TrackingLine"),this.scene);if(this.rabbitTrackerLine!=null)this.rabbitTrackerLine.drawLine([this.trackVehiclePosition,this.trackRabbitPosition],this.rabbitTrackerColor)}var waypointDistance=BABYLON.Vector3.Distance(rabbitPosition,this.waypointPosition);if(waypointDistance<=5.0){this.prevTargetSpeed=this.nextTargetSpeed;this.waypointIndex++;if(this.waypointIndex>=this.waypointCount){this.waypointIndex=0}}UNITY.Utilities.InverseTransformPointToRef(this.transform,this.m_chasePointMesh.position,this.localTargetPosition);var localTargetAngle=BABYLON.Tools.ToDegrees(Math.atan2(this.localTargetPosition.x,this.localTargetPosition.z));var cornerAngle=BABYLON.Scalar.Clamp(Math.abs(localTargetAngle),0,90);var cornerFactor=(cornerAngle/90);var braking=0;var slowdown=0;var boosting=this.randomBoosting;var topspeed=this.maxRaceTrackSpeed;var throttle=(1.0*this.throttleSensitivity);var steering=BABYLON.Scalar.Clamp(((this.localTargetPosition.x/this.localTargetPosition.length())*this.steeringSensitivity),-1,1);if(this.avoidanceFactor>0&&avoidance!==0){var lowSpeedAvoidance=((avoidance*0.112)*this.avoidanceFactor);var highSpeedAvoidance=((avoidance*0.06)*this.avoidanceFactor);steering+=BABYLON.Scalar.Lerp(lowSpeedAvoidance,highSpeedAvoidance,gradientSpeed)}var handbraking=false;if(this.nextTargetSpeed<=0)this.nextTargetSpeed=targetSpeed;if(americanSpeed>this.nextTargetSpeed){slowdown=BABYLON.Scalar.Lerp(0.0,this.linearDampenForce,gradientSpeed);throttle*=0.2}if(this.brakingTurnAngle>0){var checkCornerAngle=(this.brakingTurnAngle-this.randomTurning);if(cornerAngle>=checkCornerAngle&&americanSpeed>=this.brakingSpeedLimit){braking=BABYLON.Scalar.Lerp(0,(1+gradientSpeed),cornerFactor);slowdown=0;var skiddingTriggerSpeed=(isSkidding===true)?this.brakingSpeedLimit:this.skiddingSpeedLimit;handbraking=(braking>0&&americanSpeed>=skiddingTriggerSpeed);if(handbraking===true)braking=1.0}}if(braking>0)braking=BABYLON.Scalar.Clamp((braking*this.brakingSensitivity),0,1);if(braking>0)throttle=(-braking);if(this.reverseFixMode===true){throttle=-1;boosting=0;steering=0;slowdown=0;handbraking=false}if(throttle>=0.1&&americanSpeed<2.0){this.noMovementTime+=deltaTime}else{this.noMovementTime=0}if(this.noMovementTime>=this.resetMovingTimeout){this.noMovementTime=0;this.reverseFixMode=true;this.recoveryFixMode=true;var reverseTime=(this.reverseThrottleTime*1000);var recoveryTime=((this.reverseThrottleTime*1000)*3.0);UNITY.WindowManager.SetTimeout(reverseTime,function(){_this.reverseFixMode=false});UNITY.WindowManager.SetTimeout(recoveryTime,function(){_this.recoveryFixMode=false})}var speedBooster=false;this.m_standardCarController.ackermanTurnFactor=(this.recoveryFixMode===true)?this.recoveryRadius:1.0;this.m_standardCarController.throttleEngineSpeed=topspeed;this.m_standardCarController.throttleBrakingForce=slowdown;this.m_standardCarController.drive(throttle,steering,handbraking,false,boosting,true,speedBooster)}}};VehicleInputController.prototype.getDriverSkillFactor=function(){var result=0.60;var skill=this.driverSkillLevel;if(this.randomSkillFactor>=18){skill+=2}else if(this.randomSkillFactor>=12){skill+=1}skill=BABYLON.Scalar.Clamp(skill,1,10);switch(skill){case 10:result=1.00;break;case 9:result=0.98;break;case 8:result=0.95;break;case 7:result=0.90;break;case 6:result=0.85;break;case 5:result=0.80;break;case 4:result=0.75;break;case 3:result=0.70;break;case 2:result=0.65;break;case 1:result=0.60;break}return result};VehicleInputController.prototype.getCurrentTrackNode=function(index){var result=null;if(index>=0&&index<this.waypointCount){result=this.m_circuitInterfaces[index]}return result};VehicleInputController.prototype.getCurrentControlPoint=function(lane,index){var result=null;if(index>=0&&index<this.waypointCount){switch(lane){case 0:result=this.m_circuitRaceLine_1[index];break;case 1:result=this.m_circuitRaceLine_2[index];break;case 2:result=this.m_circuitRaceLine_3[index];break;case 3:result=this.m_circuitRaceLine_4[index];break;case 4:result=this.m_circuitRaceLine_5[index];break}}return result};VehicleInputController.prototype.getRandomNumber=function(min,max){min=Math.ceil(min);max=Math.floor(max);return Math.floor(Math.random()*(max-min+1))+min};VehicleInputController.prototype.generateRandonNumber=function(min,max,decimals){if(decimals===void 0){decimals=2}var rand=(Math.random()*(max-min)+min).toFixed(decimals);return parseFloat(rand)};VehicleInputController.prototype.destroyVehicleController=function(){this.m_circuitInterfaces=null;this.m_circuitRaceLine_1=null;this.m_circuitRaceLine_2=null;this.m_circuitRaceLine_3=null;this.m_circuitRaceLine_4=null;this.m_circuitRaceLine_5=null;this.m_rigidbodyPhysics=null;this.m_standardCarController=null;if(this.m_chasePointMesh!=null){this.m_chasePointMesh.dispose();this.m_chasePointMesh=null}if(this.m_chaseRabbitMesh!=null){this.m_chaseRabbitMesh.dispose();this.m_chaseRabbitMesh=null}};return VehicleInputController}(UNITY.ScriptComponent));PROJECT.VehicleInputController=VehicleInputController})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var VehicleNetworkLabel=(function(_super){__extends(VehicleNetworkLabel,_super);function VehicleNetworkLabel(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.label=null;_this.autoCreate=true;_this.offsetX=0;_this.offsetY=0;_this.labelColor=new BABYLON.Color3(1.0,1.0,1.0);_this.borderColor=new BABYLON.Color3(0.0,0.8431373,0.827451);_this.backgroundColor=new BABYLON.Color3(0.0,0.4745098,0.4666667);_this.labelCreated=false;return _this}VehicleNetworkLabel.prototype.update=function(){if(this.labelCreated===false&&this.autoCreate===true&&this.isReady()){if(BABYLON.NetworkManager.HasJoinedRoom()){var ownerName=UNITY.EntityController.QueryNetworkAttribute(this.transform,"ownerName");if(ownerName!=null&&ownerName!==""){this.autoCreate=false;this.labelCreated=true;this.createLabel(ownerName)}}}};VehicleNetworkLabel.prototype.createLabel=function(name){var advancedTexture=UNITY.SceneManager.GetFullscreenUI(this.scene);this.label=new BABYLON.GUI.TextBlock;this.label.text=name;this.label.color=this.labelColor.toHexString();this.label.fontSize=24;this.rect=new BABYLON.GUI.Rectangle;this.rect.width="200px";this.rect.height="40px";this.rect.cornerRadius=10;this.rect.color=this.borderColor.toHexString();this.rect.thickness=4;this.rect.background=this.backgroundColor.toHexString();this.rect.addControl(this.label);advancedTexture.addControl(this.rect);this.rect.linkWithMesh(this.transform);this.rect.linkOffsetXInPixels=this.offsetX;this.rect.linkOffsetYInPixels=this.offsetY};VehicleNetworkLabel.prototype.destroy=function(){console.warn("*** GOT DESTROY MESSAGE ***");if(this.label!=null){this.label.dispose();this.label=null}if(this.rect!=null){this.rect.dispose();this.rect=null}};return VehicleNetworkLabel}(UNITY.ScriptComponent));PROJECT.VehicleNetworkLabel=VehicleNetworkLabel})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var DefaultCameraSystem=(function(_super){__extends(DefaultCameraSystem,_super);function DefaultCameraSystem(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.mainCamera=false;_this.cameraType=0;_this.cameraInertia=0.5;_this.cameraController=null;_this.immersiveOptions=null;_this.arcRotateConfig=null;_this.multiPlayerSetup=null;_this.fullScreenToggle=0;_this.setPointerLock=true;_this.editorPostProcessing=null;_this.m_cameraRig=null;return _this}DefaultCameraSystem.GetRenderingPipeline=function(){return PROJECT.DefaultCameraSystem.renderingPipeline};;DefaultCameraSystem.GetScreenSpacePipeline=function(){return PROJECT.DefaultCameraSystem.screenSpacePipeline};;DefaultCameraSystem.IsCameraSystemReady=function(){return PROJECT.DefaultCameraSystem.cameraReady};DefaultCameraSystem.prototype.isMainCamera=function(){return this.mainCamera};DefaultCameraSystem.prototype.getCameraType=function(){return this.cameraType};DefaultCameraSystem.prototype.awake=function(){this.awakeCameraSystemState()};DefaultCameraSystem.prototype.start=function(){this.startCameraSystemState()};DefaultCameraSystem.prototype.update=function(){this.updateCameraSystemState()};DefaultCameraSystem.prototype.destroy=function(){this.destroyCameraSystemState()};DefaultCameraSystem.prototype.awakeCameraSystemState=function(){var _this=this;this.mainCamera=(this.getTransformTag()==="MainCamera");this.cameraType=this.getProperty("mainCameraType",this.cameraType);this.cameraInertia=this.getProperty("setCameraInertia",this.cameraInertia);this.fullScreenToggle=this.getProperty("fullScreenToggle",this.fullScreenToggle);this.setPointerLock=this.getProperty("setPointerLock",this.setPointerLock);this.immersiveOptions=this.getProperty("immersiveOptions",this.immersiveOptions);this.arcRotateConfig=this.getProperty("arcRotateConfig",this.arcRotateConfig);this.multiPlayerSetup=this.getProperty("multiPlayerSetup",this.multiPlayerSetup);this.cameraController=this.getProperty("cameraController",this.cameraController);this.editorPostProcessing=this.getProperty("renderingPipeline",this.editorPostProcessing);this.cleanCameraSystemState();if(this.fullScreenToggle===0){UNITY.InputController.OnKeyboardPress(UNITY.UserInputKey.F,function(){SM.EnterFullscreenMode(_this.scene,_this.setPointerLock)})}};DefaultCameraSystem.prototype.startCameraSystemState=function(){return __awaiter(this,void 0,void 0,function(){var cinput,mouseInput,localStorageRequired,webvrFloorMeshes,webvrHelperOptions,webvrImmersiveMode,webvrReferenceType,_a,navmesh,cameraName,playerOneTransform,playerOneName,playerOneCamerax,playerTwoTransform,playerTwoName,playerTwoCamerax,playerThreeTransform,playerThreeName,playerThreeCamerax,playerFourTransform,playerFourName,playerFourCamerax,children,quality,allowProcessing,defaultPipeline,vcolor,colorGradingTexture,curve,ssaoRatio,ssaoPipeline;var _this=this;return __generator(this,function(_b){switch(_b.label){case 0:UNITY.Utilities.ValidateTransformQuaternion(this.transform);if(this.multiPlayerSetup!=null){PROJECT.DefaultCameraSystem.startupMode=this.multiPlayerSetup.playerStartupMode;PROJECT.DefaultCameraSystem.stereoCameras=this.multiPlayerSetup.stereoSideBySide}this.m_cameraRig=this.getCameraRig();if(!(this.m_cameraRig!=null))return[3,6];this.m_cameraRig.inertia=this.cameraInertia;if(this.cameraController!=null){this.m_cameraRig.speed=this.cameraController.cameraSpeed;this.m_cameraRig.inverseRotationSpeed=this.cameraController.invRotationSpeed;if(this.m_cameraRig instanceof BABYLON.UniversalCamera){this.m_cameraRig.gamepadAngularSensibility=this.cameraController.gamepadRotation;this.m_cameraRig.gamepadMoveSensibility=this.cameraController.gamepadMovement;this.m_cameraRig.touchAngularSensibility=this.cameraController.touchRotation;this.m_cameraRig.touchMoveSensibility=this.cameraController.touchMovement}if(this.cameraController.keyboardWASD===true){if(this.m_cameraRig.inputs!=null&&this.m_cameraRig.inputs.attached!=null&&this.m_cameraRig.inputs.attached.keyboard!=null){if(this.m_cameraRig.inputs.attached.keyboard instanceof BABYLON.FreeCameraKeyboardMoveInput){cinput=this.m_cameraRig.inputs.attached.keyboard;cinput.keysUp.push(UNITY.UserInputKey.W);cinput.keysLeft.push(UNITY.UserInputKey.A);cinput.keysDown.push(UNITY.UserInputKey.S);cinput.keysRight.push(UNITY.UserInputKey.D);cinput.rotationSpeed=this.cameraController.rotationSpeed;if(this.cameraController.arrowKeyRotation===true){cinput.keysLeft=[UNITY.UserInputKey.A];cinput.keysRight=[UNITY.UserInputKey.D];cinput.keysRotateLeft=[UNITY.UserInputKey.LeftArrow];cinput.keysRotateRight=[UNITY.UserInputKey.RightArrow]}}}}}if(this.m_cameraRig.inputs!=null&&this.m_cameraRig.inputs.attached!=null&&this.m_cameraRig.inputs.attached.mouse!=null){mouseInput=this.m_cameraRig.inputs.attached.mouse;if(UNITY.Utilities.HasOwnProperty(mouseInput,"touchEnabled")){mouseInput.touchEnabled=true}}if(!(this.cameraType===0||this.cameraType===4))return[3,1];PROJECT.DefaultCameraSystem.PlayerOneCamera=this.m_cameraRig;PROJECT.DefaultCameraSystem.PlayerOneCamera.inertia=this.cameraInertia;PROJECT.DefaultCameraSystem.PlayerOneCamera.transform=this.transform;return[3,5];case 1:if(!(this.cameraType===1||this.cameraType===2))return[3,4];PROJECT.DefaultCameraSystem.PlayerOneCamera=this.m_cameraRig;PROJECT.DefaultCameraSystem.PlayerOneCamera.inertia=this.cameraInertia;PROJECT.DefaultCameraSystem.PlayerOneCamera.transform=this.transform;if(!(this.immersiveOptions!=null))return[3,3];localStorageRequired=(this.immersiveOptions.localStorageOption===true);if(!(localStorageRequired===false||(localStorageRequired===true&&UNITY.WindowManager.GetVirtualRealityEnabled())))return[3,3];webvrFloorMeshes=null;webvrHelperOptions=null;webvrImmersiveMode=(this.cameraType===1)?"immersive-ar":"immersive-vr";webvrReferenceType="local-floor";switch(this.immersiveOptions.referenceSpaceType){case 0:webvrReferenceType="viewer";break;case 1:webvrReferenceType="local";break;case 2:webvrReferenceType="local-floor";break;case 4:webvrReferenceType="unbounded";break;default:webvrReferenceType="local-floor";break}if(this.immersiveOptions.setFloorMeshesTags==null||this.immersiveOptions.setFloorMeshesTags==="")this.immersiveOptions.setFloorMeshesTags="Navigation";if(this.immersiveOptions.defaultTeleportationSetup.useTeleportation===true)webvrFloorMeshes=this.scene.getMeshesByTags(this.immersiveOptions.setFloorMeshesTags);if(this.immersiveOptions.defaultTeleportationSetup.useTeleportation===true&&webvrFloorMeshes!=null&&webvrFloorMeshes.length>0){webvrHelperOptions={floorMeshes:webvrFloorMeshes,optionalFeatures:this.immersiveOptions.optionalFeatures,useStablePlugins:this.immersiveOptions.useStablePlugins,renderingGroupId:this.immersiveOptions.renderingGroupNum,disableDefaultUI:this.immersiveOptions.disableUserInterface,disableTeleportation:(this.immersiveOptions.defaultTeleportationSetup.useTeleportation===false),disablePointerSelection:this.immersiveOptions.disablePointerSelect,ignoreNativeCameraTransformation:this.immersiveOptions.ignoreNativeCamera,inputOptions:{doNotLoadControllerMeshes:this.immersiveOptions.experienceInputOptions.disableMeshLoad,forceInputProfile:this.immersiveOptions.experienceInputOptions.forceInputProfile,disableOnlineControllerRepository:this.immersiveOptions.experienceInputOptions.disableRepository,customControllersRepositoryURL:this.immersiveOptions.experienceInputOptions.customRepository,disableControllerAnimation:this.immersiveOptions.experienceInputOptions.disableModelAnim,controllerOptions:{disableMotionControllerAnimation:this.immersiveOptions.experienceInputOptions.controllerOptions.disableCtrlAnim,doNotLoadControllerMesh:this.immersiveOptions.experienceInputOptions.controllerOptions.disableCtrlMesh,forceControllerProfile:this.immersiveOptions.experienceInputOptions.controllerOptions.forceCtrlProfile,renderingGroupId:this.immersiveOptions.experienceInputOptions.controllerOptions.renderingGroup}},uiOptions:{sessionMode:webvrImmersiveMode,referenceSpaceType:webvrReferenceType}}}else{webvrHelperOptions={optionalFeatures:this.immersiveOptions.optionalFeatures,useStablePlugins:this.immersiveOptions.useStablePlugins,renderingGroupId:this.immersiveOptions.renderingGroupNum,disableDefaultUI:this.immersiveOptions.disableUserInterface,disableTeleportation:(this.immersiveOptions.defaultTeleportationSetup.useTeleportation===false),disablePointerSelection:this.immersiveOptions.disablePointerSelect,ignoreNativeCameraTransformation:this.immersiveOptions.ignoreNativeCamera,inputOptions:{doNotLoadControllerMeshes:this.immersiveOptions.experienceInputOptions.disableMeshLoad,forceInputProfile:this.immersiveOptions.experienceInputOptions.forceInputProfile,disableOnlineControllerRepository:this.immersiveOptions.experienceInputOptions.disableRepository,customControllersRepositoryURL:this.immersiveOptions.experienceInputOptions.customRepository,disableControllerAnimation:this.immersiveOptions.experienceInputOptions.disableModelAnim,controllerOptions:{disableMotionControllerAnimation:this.immersiveOptions.experienceInputOptions.controllerOptions.disableCtrlAnim,doNotLoadControllerMesh:this.immersiveOptions.experienceInputOptions.controllerOptions.disableCtrlMesh,forceControllerProfile:this.immersiveOptions.experienceInputOptions.controllerOptions.forceCtrlProfile,renderingGroupId:this.immersiveOptions.renderingGroupNum}},uiOptions:{sessionMode:webvrImmersiveMode,referenceSpaceType:webvrReferenceType}}}_a=PROJECT.DefaultCameraSystem;return[4,this.scene.createDefaultXRExperienceAsync(webvrHelperOptions)];case 2:_a.XRExperienceHelper=_b.sent();if(PROJECT.DefaultCameraSystem.XRExperienceHelper!=null&&PROJECT.DefaultCameraSystem.XRExperienceHelper.baseExperience!=null){if(PROJECT.DefaultCameraSystem.XRExperienceHelper.teleportation!=null){PROJECT.DefaultCameraSystem.XRExperienceHelper.teleportation.rotationAngle=BABYLON.Tools.ToRadians(this.immersiveOptions.defaultTeleportationSetup.turningAxisAngle);PROJECT.DefaultCameraSystem.XRExperienceHelper.teleportation.rotationEnabled=this.immersiveOptions.defaultTeleportationSetup.rotationsEnabled;PROJECT.DefaultCameraSystem.XRExperienceHelper.teleportation.backwardsMovementEnabled=this.immersiveOptions.defaultTeleportationSetup.backwardsEnabled;PROJECT.DefaultCameraSystem.XRExperienceHelper.teleportation.backwardsTeleportationDistance=this.immersiveOptions.defaultTeleportationSetup.backwardsDistance;PROJECT.DefaultCameraSystem.XRExperienceHelper.teleportation.parabolicCheckRadius=this.immersiveOptions.defaultTeleportationSetup.parabolicRadius}if(PROJECT.DefaultCameraSystem.OnXRExperienceHelperObservable&&PROJECT.DefaultCameraSystem.OnXRExperienceHelperObservable.hasObservers()){PROJECT.DefaultCameraSystem.OnXRExperienceHelperObservable.notifyObservers(PROJECT.DefaultCameraSystem.XRExperienceHelper)}if(UNITY.SceneManager.HasNavigationData()){navmesh=UNITY.SceneManager.GetNavigationMesh();PROJECT.DefaultCameraSystem.SetupNavigationWebXR(navmesh,this.immersiveOptions.setFloorMeshesTags)}else{UNITY.SceneManager.OnNavMeshReadyObservable.addOnce(function(navmesh){PROJECT.DefaultCameraSystem.SetupNavigationWebXR(navmesh,_this.immersiveOptions.setFloorMeshesTags)})}}else{UNITY.SceneManager.LogWarning("WebXR not supported in current browser.")}_b.label=3;case 3:return[3,5];case 4:if(this.cameraType===3){cameraName=this.m_cameraRig.name;playerOneTransform=new BABYLON.TransformNode("Player Camera 1",this.scene);playerOneTransform.rotationQuaternion=this.transform.rotationQuaternion.clone();playerOneTransform.position=this.transform.position.clone();playerOneTransform.parent=this.transform.parent;playerOneName=cameraName+".1";playerOneCamerax=this.m_cameraRig.clone(playerOneName);playerOneCamerax.name=playerOneName;playerOneCamerax.parent=playerOneTransform;playerOneCamerax.position=new BABYLON.Vector3(0,0,0);playerOneCamerax.rotationQuaternion=new BABYLON.Quaternion(0,0,0,1);playerOneCamerax.viewport=new BABYLON.Viewport(0,0,0,0);playerOneCamerax.setEnabled(false);PROJECT.DefaultCameraSystem.PlayerOneCamera=playerOneCamerax;PROJECT.DefaultCameraSystem.PlayerOneCamera.inertia=this.cameraInertia;PROJECT.DefaultCameraSystem.PlayerOneCamera.transform=playerOneTransform;playerOneTransform.cameraRig=PROJECT.DefaultCameraSystem.PlayerOneCamera;playerTwoTransform=new BABYLON.TransformNode("Player Camera 2",this.scene);playerTwoTransform.rotationQuaternion=this.transform.rotationQuaternion.clone();playerTwoTransform.position=this.transform.position.clone();playerTwoTransform.parent=this.transform.parent;playerTwoName=cameraName+".2";playerTwoCamerax=this.m_cameraRig.clone(playerTwoName);playerTwoCamerax.name=playerTwoName;playerTwoCamerax.parent=playerTwoTransform;playerTwoCamerax.position=new BABYLON.Vector3(0,0,0);playerTwoCamerax.rotationQuaternion=new BABYLON.Quaternion(0,0,0,1);playerTwoCamerax.viewport=new BABYLON.Viewport(0,0,0,0);playerTwoCamerax.setEnabled(false);PROJECT.DefaultCameraSystem.PlayerTwoCamera=playerTwoCamerax;PROJECT.DefaultCameraSystem.PlayerTwoCamera.inertia=this.cameraInertia;PROJECT.DefaultCameraSystem.PlayerTwoCamera.transform=playerTwoTransform;playerTwoTransform.cameraRig=PROJECT.DefaultCameraSystem.PlayerTwoCamera;playerThreeTransform=new BABYLON.TransformNode("Player Camera 3",this.scene);playerThreeTransform.rotationQuaternion=this.transform.rotationQuaternion.clone();playerThreeTransform.position=this.transform.position.clone();playerThreeTransform.parent=this.transform.parent;playerThreeName=cameraName+".3";playerThreeCamerax=this.m_cameraRig.clone(playerThreeName);playerThreeCamerax.name=playerThreeName;playerThreeCamerax.parent=playerThreeTransform;playerThreeCamerax.position=new BABYLON.Vector3(0,0,0);playerThreeCamerax.rotationQuaternion=new BABYLON.Quaternion(0,0,0,1);playerThreeCamerax.viewport=new BABYLON.Viewport(0,0,0,0);playerThreeCamerax.setEnabled(false);PROJECT.DefaultCameraSystem.PlayerThreeCamera=playerThreeCamerax;PROJECT.DefaultCameraSystem.PlayerThreeCamera.inertia=this.cameraInertia;PROJECT.DefaultCameraSystem.PlayerThreeCamera.transform=playerThreeTransform;playerThreeTransform.cameraRig=PROJECT.DefaultCameraSystem.PlayerThreeCamera;playerFourTransform=new BABYLON.TransformNode("Player Camera 4",this.scene);playerFourTransform.rotationQuaternion=this.transform.rotationQuaternion.clone();playerFourTransform.position=this.transform.position.clone();playerFourTransform.parent=this.transform.parent;playerFourName=cameraName+".4";playerFourCamerax=this.m_cameraRig.clone(playerFourName);playerFourCamerax.name=playerFourName;playerFourCamerax.parent=playerFourTransform;playerFourCamerax.position=new BABYLON.Vector3(0,0,0);playerFourCamerax.rotationQuaternion=new BABYLON.Quaternion(0,0,0,1);playerFourCamerax.viewport=new BABYLON.Viewport(0,0,0,0);playerFourCamerax.setEnabled(false);PROJECT.DefaultCameraSystem.PlayerFourCamera=playerFourCamerax;PROJECT.DefaultCameraSystem.PlayerFourCamera.inertia=this.cameraInertia;PROJECT.DefaultCameraSystem.PlayerFourCamera.transform=playerFourTransform;playerFourTransform.cameraRig=PROJECT.DefaultCameraSystem.PlayerFourCamera;PROJECT.DefaultCameraSystem.multiPlayerView=true;PROJECT.DefaultCameraSystem.SetMultiPlayerViewLayout(this.scene,PROJECT.DefaultCameraSystem.startupMode)}_b.label=5;case 5:if(this.cameraController.attachControl===true){this.m_cameraRig.parent=null;this.m_cameraRig.position.copyFrom(this.transform.position);this.m_cameraRig.rotationQuaternion=(this.transform.rotationQuaternion!=null)?this.transform.rotationQuaternion.clone():BABYLON.Quaternion.FromEulerAngles(this.transform.rotation.x,this.transform.rotation.y,this.transform.rotation.z);children=this.transform.getChildren(null,true);if(children!=null){children.forEach(function(child){child.parent=_this.m_cameraRig})}if(this.m_cameraRig instanceof BABYLON.FreeCamera){this.m_cameraRig.checkCollisions=this.cameraController.checkCollisions;this.m_cameraRig.applyGravity=this.cameraController.setApplyGravity}this.m_cameraRig.attachControl(this.cameraController.preventDefault)}_b.label=6;case 6:quality=UNITY.RenderQuality.High;allowProcessing=(quality===UNITY.RenderQuality.High);if(allowProcessing===true&&this.editorPostProcessing!=null&&this.editorPostProcessing.usePostProcessing===true){PROJECT.DefaultCameraSystem.renderingPipeline=new BABYLON.DefaultRenderingPipeline("DefaultCameraSystem",this.editorPostProcessing.highDynamicRange,this.scene,this.scene.cameras,true);if(PROJECT.DefaultCameraSystem.renderingPipeline.isSupported===true){defaultPipeline=PROJECT.DefaultCameraSystem.renderingPipeline;defaultPipeline.samples=this.editorPostProcessing.screenAntiAliasing.msaaSamples;defaultPipeline.imageProcessingEnabled=this.editorPostProcessing.imageProcessingConfig.imageProcessing;if(defaultPipeline.imageProcessingEnabled){defaultPipeline.imageProcessing.contrast=this.editorPostProcessing.imageProcessingConfig.imageContrast;defaultPipeline.imageProcessing.exposure=this.editorPostProcessing.imageProcessingConfig.imageExposure;defaultPipeline.imageProcessing.toneMappingEnabled=this.editorPostProcessing.imageProcessingConfig.toneMapping;defaultPipeline.imageProcessing.toneMappingType=this.editorPostProcessing.imageProcessingConfig.toneMapType;defaultPipeline.imageProcessing.vignetteEnabled=this.editorPostProcessing.imageProcessingConfig.vignetteEnabled;if(defaultPipeline.imageProcessing.vignetteEnabled){defaultPipeline.imageProcessing.vignetteBlendMode=this.editorPostProcessing.imageProcessingConfig.vignetteBlendMode;defaultPipeline.imageProcessing.vignetteCameraFov=this.editorPostProcessing.imageProcessingConfig.vignetteCameraFov;defaultPipeline.imageProcessing.vignetteCentreX=this.editorPostProcessing.imageProcessingConfig.vignetteCentreX;defaultPipeline.imageProcessing.vignetteCentreY=this.editorPostProcessing.imageProcessingConfig.vignetteCentreY;defaultPipeline.imageProcessing.vignetteStretch=this.editorPostProcessing.imageProcessingConfig.vignetteStretch;defaultPipeline.imageProcessing.vignetteWeight=this.editorPostProcessing.imageProcessingConfig.vignetteWeight;if(this.editorPostProcessing.imageProcessingConfig.vignetteColor!=null){vcolor=UNITY.Utilities.ParseColor4(this.editorPostProcessing.imageProcessingConfig.vignetteColor);if(vcolor!=null)defaultPipeline.imageProcessing.vignetteColor=vcolor}}defaultPipeline.imageProcessing.colorGradingEnabled=this.editorPostProcessing.imageProcessingConfig.useColorGrading;if(defaultPipeline.imageProcessing.colorGradingEnabled){if(this.editorPostProcessing.imageProcessingConfig.setGradingTexture!=null){colorGradingTexture=UNITY.Utilities.ParseTexture(this.editorPostProcessing.imageProcessingConfig.setGradingTexture,this.scene,true,false);colorGradingTexture.wrapU=BABYLON.Texture.CLAMP_ADDRESSMODE;colorGradingTexture.wrapV=BABYLON.Texture.CLAMP_ADDRESSMODE;defaultPipeline.imageProcessing.colorGradingTexture=colorGradingTexture;defaultPipeline.imageProcessing.colorGradingWithGreenDepth=false}}defaultPipeline.imageProcessing.colorCurvesEnabled=this.editorPostProcessing.imageProcessingConfig.imagingColorCurves.curvesEnabled;if(defaultPipeline.imageProcessing.colorCurvesEnabled){curve=new BABYLON.ColorCurves;curve.globalDensity=this.editorPostProcessing.imageProcessingConfig.imagingColorCurves.globalDen;curve.globalExposure=this.editorPostProcessing.imageProcessingConfig.imagingColorCurves.globalExp;curve.globalHue=this.editorPostProcessing.imageProcessingConfig.imagingColorCurves.globalHue;curve.globalSaturation=this.editorPostProcessing.imageProcessingConfig.imagingColorCurves.globalSat;curve.highlightsDensity=this.editorPostProcessing.imageProcessingConfig.imagingColorCurves.highlightsDen;curve.highlightsExposure=this.editorPostProcessing.imageProcessingConfig.imagingColorCurves.highlightsExp;curve.highlightsHue=this.editorPostProcessing.imageProcessingConfig.imagingColorCurves.highlightsHue;curve.highlightsSaturation=this.editorPostProcessing.imageProcessingConfig.imagingColorCurves.highlightsSat;curve.midtonesDensity=this.editorPostProcessing.imageProcessingConfig.imagingColorCurves.midtonesDen;curve.midtonesExposure=this.editorPostProcessing.imageProcessingConfig.imagingColorCurves.midtonesExp;curve.midtonesHue=this.editorPostProcessing.imageProcessingConfig.imagingColorCurves.midtonesHue;curve.midtonesSaturation=this.editorPostProcessing.imageProcessingConfig.imagingColorCurves.midtonesSat;curve.shadowsDensity=this.editorPostProcessing.imageProcessingConfig.imagingColorCurves.shadowsDen;curve.shadowsExposure=this.editorPostProcessing.imageProcessingConfig.imagingColorCurves.shadowsExp;curve.shadowsHue=this.editorPostProcessing.imageProcessingConfig.imagingColorCurves.shadowsHue;curve.shadowsSaturation=this.editorPostProcessing.imageProcessingConfig.imagingColorCurves.shadowsSat;defaultPipeline.imageProcessing.colorCurves=curve}}defaultPipeline.bloomEnabled=this.editorPostProcessing.bloomEffectProperties.bloomEnabled;if(defaultPipeline.bloomEnabled){defaultPipeline.bloomKernel=this.editorPostProcessing.bloomEffectProperties.bloomKernel;defaultPipeline.bloomScale=this.editorPostProcessing.bloomEffectProperties.bloomScale;defaultPipeline.bloomWeight=this.editorPostProcessing.bloomEffectProperties.bloomWeight;defaultPipeline.bloomThreshold=this.editorPostProcessing.bloomEffectProperties.bloomThreshold}defaultPipeline.chromaticAberrationEnabled=this.editorPostProcessing.chromaticAberration.aberrationEnabled;if(defaultPipeline.chromaticAberrationEnabled){defaultPipeline.chromaticAberration.aberrationAmount=this.editorPostProcessing.chromaticAberration.aberrationAmount;defaultPipeline.chromaticAberration.adaptScaleToCurrentViewport=this.editorPostProcessing.chromaticAberration.adaptScaleViewport;defaultPipeline.chromaticAberration.alphaMode=this.editorPostProcessing.chromaticAberration.alphaMode;defaultPipeline.chromaticAberration.alwaysForcePOT=this.editorPostProcessing.chromaticAberration.alwaysForcePOT;defaultPipeline.chromaticAberration.enablePixelPerfectMode=this.editorPostProcessing.chromaticAberration.pixelPerfectMode;defaultPipeline.chromaticAberration.forceFullscreenViewport=this.editorPostProcessing.chromaticAberration.fullscreenViewport}defaultPipeline.depthOfFieldEnabled=this.editorPostProcessing.focalDepthOfField.depthOfField;if(defaultPipeline.depthOfFieldEnabled&&defaultPipeline.depthOfField.isSupported){defaultPipeline.depthOfFieldBlurLevel=this.editorPostProcessing.focalDepthOfField.blurLevel;defaultPipeline.depthOfField.fStop=this.editorPostProcessing.focalDepthOfField.focalStop;defaultPipeline.depthOfField.focalLength=this.editorPostProcessing.focalDepthOfField.focalLength;defaultPipeline.depthOfField.focusDistance=this.editorPostProcessing.focalDepthOfField.focusDistance;defaultPipeline.depthOfField.lensSize=this.editorPostProcessing.focalDepthOfField.maxLensSize}defaultPipeline.fxaaEnabled=this.editorPostProcessing.screenAntiAliasing.fxaaEnabled;if(defaultPipeline.fxaaEnabled){defaultPipeline.fxaa.samples=this.editorPostProcessing.screenAntiAliasing.fxaaSamples;defaultPipeline.fxaa.adaptScaleToCurrentViewport=this.editorPostProcessing.screenAntiAliasing.fxaaScaling}defaultPipeline.glowLayerEnabled=this.editorPostProcessing.glowLayerProperties.glowEnabled;if(defaultPipeline.glowLayerEnabled){defaultPipeline.glowLayer.intensity=this.editorPostProcessing.glowLayerProperties.glowIntensity;defaultPipeline.glowLayer.blurKernelSize=this.editorPostProcessing.glowLayerProperties.blurKernelSize}defaultPipeline.grainEnabled=this.editorPostProcessing.grainEffectProperties.grainEnabled;if(defaultPipeline.grainEnabled){defaultPipeline.grain.animated=this.editorPostProcessing.grainEffectProperties.grainAnimated;defaultPipeline.grain.intensity=this.editorPostProcessing.grainEffectProperties.grainIntensity;defaultPipeline.grain.adaptScaleToCurrentViewport=this.editorPostProcessing.grainEffectProperties.adaptScaleViewport}defaultPipeline.sharpenEnabled=this.editorPostProcessing.sharpEffectProperties.sharpenEnabled;if(defaultPipeline.sharpenEnabled){defaultPipeline.sharpen.edgeAmount=this.editorPostProcessing.sharpEffectProperties.sharpEdgeAmount;defaultPipeline.sharpen.colorAmount=this.editorPostProcessing.sharpEffectProperties.sharpColorAmount;defaultPipeline.sharpen.adaptScaleToCurrentViewport=this.editorPostProcessing.sharpEffectProperties.adaptScaleViewport}}else{UNITY.SceneManager.LogWarning("Babylon.js default rendering pipeline not supported")}if(this.editorPostProcessing.screenSpaceRendering!=null&&this.editorPostProcessing.screenSpaceRendering.SSAO===true){ssaoRatio={ssaoRatio:this.editorPostProcessing.screenSpaceRendering.SSAORatio,combineRatio:this.editorPostProcessing.screenSpaceRendering.combineRatio};PROJECT.DefaultCameraSystem.screenSpacePipeline=new BABYLON.SSAORenderingPipeline("DefaultCameraSystem-SSAO",this.scene,ssaoRatio,this.scene.cameras);if(PROJECT.DefaultCameraSystem.screenSpacePipeline.isSupported===true){ssaoPipeline=PROJECT.DefaultCameraSystem.screenSpacePipeline;ssaoPipeline.fallOff=this.editorPostProcessing.screenSpaceRendering.fallOff;ssaoPipeline.area=this.editorPostProcessing.screenSpaceRendering.area;ssaoPipeline.radius=this.editorPostProcessing.screenSpaceRendering.radius;ssaoPipeline.totalStrength=this.editorPostProcessing.screenSpaceRendering.totalStrength;ssaoPipeline.base=this.editorPostProcessing.screenSpaceRendering.baseValue}else{UNITY.SceneManager.LogWarning("Babylon.js SSAO rendering pipeline not supported")}}}PROJECT.DefaultCameraSystem.cameraReady=true;return[2]}})})};DefaultCameraSystem.prototype.updateCameraSystemState=function(){if(this.m_cameraRig!=null){if(this.cameraType===0){}else if(this.cameraType===1){}else if(this.cameraType===2){}else if(this.cameraType===3){}}};DefaultCameraSystem.prototype.cleanCameraSystemState=function(){if(PROJECT.DefaultCameraSystem.PlayerOneCamera!=null){PROJECT.DefaultCameraSystem.PlayerOneCamera=null}if(PROJECT.DefaultCameraSystem.PlayerTwoCamera!=null){PROJECT.DefaultCameraSystem.PlayerTwoCamera=null}if(PROJECT.DefaultCameraSystem.PlayerThreeCamera!=null){PROJECT.DefaultCameraSystem.PlayerThreeCamera=null}if(PROJECT.DefaultCameraSystem.PlayerFourCamera!=null){PROJECT.DefaultCameraSystem.PlayerFourCamera=null}};DefaultCameraSystem.prototype.destroyCameraSystemState=function(){this.immersiveOptions=null};DefaultCameraSystem.GetWebXR=function(){return PROJECT.DefaultCameraSystem.XRExperienceHelper};DefaultCameraSystem.IsInWebXR=function(){return(PROJECT.DefaultCameraSystem.XRExperienceHelper!=null&&PROJECT.DefaultCameraSystem.XRExperienceHelper.baseExperience!=null&&PROJECT.DefaultCameraSystem.XRExperienceHelper.baseExperience.state===BABYLON.WebXRState.IN_XR)};DefaultCameraSystem.SetupNavigationWebXR=function(mesh,tag){var webxr=PROJECT.DefaultCameraSystem.XRExperienceHelper;if(webxr!=null&&webxr.teleportation!=null&&mesh!=null&&tag!=null&&tag!=""){var hastag=BABYLON.Tags.MatchesQuery(mesh,tag);if(hastag===true)webxr.teleportation.addFloorMesh(mesh)}};DefaultCameraSystem.GetMainCamera=function(scene,detach){if(detach===void 0){detach=false}return PROJECT.DefaultCameraSystem.GetPlayerCamera(scene,UNITY.PlayerNumber.One,detach)};DefaultCameraSystem.GetPlayerCamera=function(scene,player,detach){if(player===void 0){player=UNITY.PlayerNumber.One}if(detach===void 0){detach=false}var result=null;var transform=PROJECT.DefaultCameraSystem.GetCameraTransform(scene,player);if(PROJECT.DefaultCameraSystem.IsCameraSystemReady()){if(player===UNITY.PlayerNumber.One&&PROJECT.DefaultCameraSystem.PlayerOneCamera!=null)result=PROJECT.DefaultCameraSystem.PlayerOneCamera;else if(player===UNITY.PlayerNumber.Two&&PROJECT.DefaultCameraSystem.PlayerTwoCamera!=null)result=PROJECT.DefaultCameraSystem.PlayerTwoCamera;else if(player===UNITY.PlayerNumber.Three&&PROJECT.DefaultCameraSystem.PlayerThreeCamera!=null)result=PROJECT.DefaultCameraSystem.PlayerThreeCamera;else if(player===UNITY.PlayerNumber.Four&&PROJECT.DefaultCameraSystem.PlayerFourCamera!=null)result=PROJECT.DefaultCameraSystem.PlayerFourCamera;if(result!=null&&detach===true&&parent!=null){result.parent=null;if(transform!=null){result.position.copyFrom(transform.position);result.rotationQuaternion=(transform.rotationQuaternion!=null)?transform.rotationQuaternion.clone():BABYLON.Quaternion.FromEulerAngles(transform.rotation.x,transform.rotation.y,transform.rotation.z);var children=transform.getChildren(null,true);if(children!=null){children.forEach(function(child){child.parent=result})}}}}return result};DefaultCameraSystem.GetCameraTransform=function(scene,player){if(player===void 0){player=UNITY.PlayerNumber.One}var result=null;if(PROJECT.DefaultCameraSystem.IsCameraSystemReady()){if(player===UNITY.PlayerNumber.One&&PROJECT.DefaultCameraSystem.PlayerOneCamera!=null&&PROJECT.DefaultCameraSystem.PlayerOneCamera.transform!=null)result=PROJECT.DefaultCameraSystem.PlayerOneCamera.transform;else if(player===UNITY.PlayerNumber.Two&&PROJECT.DefaultCameraSystem.PlayerTwoCamera!=null&&PROJECT.DefaultCameraSystem.PlayerTwoCamera.transform!=null)result=PROJECT.DefaultCameraSystem.PlayerTwoCamera.transform;else if(player===UNITY.PlayerNumber.Three&&PROJECT.DefaultCameraSystem.PlayerThreeCamera!=null&&PROJECT.DefaultCameraSystem.PlayerThreeCamera.transform!=null)result=PROJECT.DefaultCameraSystem.PlayerThreeCamera.transform;else if(player===UNITY.PlayerNumber.Four&&PROJECT.DefaultCameraSystem.PlayerFourCamera!=null&&PROJECT.DefaultCameraSystem.PlayerFourCamera.transform!=null)result=PROJECT.DefaultCameraSystem.PlayerFourCamera.transform}return result};DefaultCameraSystem.IsStereoCameras=function(){return PROJECT.DefaultCameraSystem.stereoCameras};DefaultCameraSystem.IsMultiPlayerView=function(){return PROJECT.DefaultCameraSystem.multiPlayerView};DefaultCameraSystem.GetMultiPlayerCount=function(){return PROJECT.DefaultCameraSystem.multiPlayerCount};DefaultCameraSystem.ActivateMultiPlayerCameras=function(scene){var result=false;if(PROJECT.DefaultCameraSystem.multiPlayerCameras!=null&&PROJECT.DefaultCameraSystem.multiPlayerCameras.length>0){scene.activeCameras=PROJECT.DefaultCameraSystem.multiPlayerCameras;result=true}return result};DefaultCameraSystem.DisposeMultiPlayerCameras=function(){if(PROJECT.DefaultCameraSystem.PlayerOneCamera!=null){PROJECT.DefaultCameraSystem.PlayerOneCamera.dispose();PROJECT.DefaultCameraSystem.PlayerOneCamera=null}if(PROJECT.DefaultCameraSystem.PlayerTwoCamera!=null){PROJECT.DefaultCameraSystem.PlayerTwoCamera.dispose();PROJECT.DefaultCameraSystem.PlayerTwoCamera=null}if(PROJECT.DefaultCameraSystem.PlayerThreeCamera!=null){PROJECT.DefaultCameraSystem.PlayerThreeCamera.dispose();PROJECT.DefaultCameraSystem.PlayerThreeCamera=null}if(PROJECT.DefaultCameraSystem.PlayerFourCamera!=null){PROJECT.DefaultCameraSystem.PlayerFourCamera.dispose();PROJECT.DefaultCameraSystem.PlayerFourCamera=null}};DefaultCameraSystem.SetMultiPlayerViewLayout=function(scene,totalNumPlayers){var result=false;var players=BABYLON.Scalar.Clamp(totalNumPlayers,1,4);if(PROJECT.DefaultCameraSystem.IsMultiPlayerView()){if(PROJECT.DefaultCameraSystem.PlayerOneCamera!=null&&PROJECT.DefaultCameraSystem.PlayerTwoCamera!=null&&PROJECT.DefaultCameraSystem.PlayerThreeCamera!=null&&PROJECT.DefaultCameraSystem.PlayerFourCamera!=null){PROJECT.DefaultCameraSystem.multiPlayerCameras=[];if(players===1){PROJECT.DefaultCameraSystem.PlayerOneCamera.viewport=new BABYLON.Viewport(0,0,1,1);PROJECT.DefaultCameraSystem.PlayerTwoCamera.viewport=new BABYLON.Viewport(0,0,0,0);PROJECT.DefaultCameraSystem.PlayerTwoCamera.setEnabled(false);PROJECT.DefaultCameraSystem.PlayerThreeCamera.viewport=new BABYLON.Viewport(0,0,0,0);PROJECT.DefaultCameraSystem.PlayerThreeCamera.setEnabled(false);PROJECT.DefaultCameraSystem.PlayerFourCamera.viewport=new BABYLON.Viewport(0,0,0,0);PROJECT.DefaultCameraSystem.PlayerFourCamera.setEnabled(false);PROJECT.DefaultCameraSystem.multiPlayerCameras.push(PROJECT.DefaultCameraSystem.PlayerOneCamera)}else if(players===2){if(PROJECT.DefaultCameraSystem.stereoCameras===true){PROJECT.DefaultCameraSystem.PlayerOneCamera.viewport=new BABYLON.Viewport(0,0,0.5,1);PROJECT.DefaultCameraSystem.PlayerTwoCamera.viewport=new BABYLON.Viewport(0.5,0,0.5,1)}else{PROJECT.DefaultCameraSystem.PlayerOneCamera.viewport=new BABYLON.Viewport(0,0.5,1,0.5);PROJECT.DefaultCameraSystem.PlayerTwoCamera.viewport=new BABYLON.Viewport(0,0,1,0.5)}PROJECT.DefaultCameraSystem.PlayerTwoCamera.setEnabled(true);PROJECT.DefaultCameraSystem.PlayerThreeCamera.viewport=new BABYLON.Viewport(0,0,0,0);PROJECT.DefaultCameraSystem.PlayerThreeCamera.setEnabled(false);PROJECT.DefaultCameraSystem.PlayerFourCamera.viewport=new BABYLON.Viewport(0,0,0,0);PROJECT.DefaultCameraSystem.PlayerFourCamera.setEnabled(false);PROJECT.DefaultCameraSystem.multiPlayerCameras.push(PROJECT.DefaultCameraSystem.PlayerOneCamera);PROJECT.DefaultCameraSystem.multiPlayerCameras.push(PROJECT.DefaultCameraSystem.PlayerTwoCamera)}else if(players===3){PROJECT.DefaultCameraSystem.PlayerOneCamera.viewport=new BABYLON.Viewport(0,0,0.5,1);PROJECT.DefaultCameraSystem.PlayerTwoCamera.viewport=new BABYLON.Viewport(0.5,0.5,0.5,0.5);PROJECT.DefaultCameraSystem.PlayerTwoCamera.setEnabled(true);PROJECT.DefaultCameraSystem.PlayerThreeCamera.viewport=new BABYLON.Viewport(0.5,0,0.5,0.5);PROJECT.DefaultCameraSystem.PlayerThreeCamera.setEnabled(true);PROJECT.DefaultCameraSystem.PlayerFourCamera.viewport=new BABYLON.Viewport(0,0,0,0);PROJECT.DefaultCameraSystem.PlayerFourCamera.setEnabled(false);PROJECT.DefaultCameraSystem.multiPlayerCameras.push(PROJECT.DefaultCameraSystem.PlayerOneCamera);PROJECT.DefaultCameraSystem.multiPlayerCameras.push(PROJECT.DefaultCameraSystem.PlayerTwoCamera);PROJECT.DefaultCameraSystem.multiPlayerCameras.push(PROJECT.DefaultCameraSystem.PlayerThreeCamera)}else if(players===4){PROJECT.DefaultCameraSystem.PlayerOneCamera.viewport=new BABYLON.Viewport(0,0.5,0.5,0.5);PROJECT.DefaultCameraSystem.PlayerTwoCamera.viewport=new BABYLON.Viewport(0,0,0.5,0.5);PROJECT.DefaultCameraSystem.PlayerTwoCamera.setEnabled(true);PROJECT.DefaultCameraSystem.PlayerThreeCamera.viewport=new BABYLON.Viewport(0.5,0.5,0.5,0.5);PROJECT.DefaultCameraSystem.PlayerThreeCamera.setEnabled(true);PROJECT.DefaultCameraSystem.PlayerFourCamera.viewport=new BABYLON.Viewport(0.5,0,0.5,0.5);PROJECT.DefaultCameraSystem.PlayerFourCamera.setEnabled(true);PROJECT.DefaultCameraSystem.multiPlayerCameras.push(PROJECT.DefaultCameraSystem.PlayerOneCamera);PROJECT.DefaultCameraSystem.multiPlayerCameras.push(PROJECT.DefaultCameraSystem.PlayerTwoCamera);PROJECT.DefaultCameraSystem.multiPlayerCameras.push(PROJECT.DefaultCameraSystem.PlayerThreeCamera);PROJECT.DefaultCameraSystem.multiPlayerCameras.push(PROJECT.DefaultCameraSystem.PlayerFourCamera)}else{UNITY.SceneManager.LogWarning("Babylon.js camera rig invalid player count specified: "+players)}}else{UNITY.SceneManager.LogWarning("Babylon.js camera rig failed to initialize multi player cameras")}PROJECT.DefaultCameraSystem.multiPlayerCount=players;result=PROJECT.DefaultCameraSystem.ActivateMultiPlayerCameras(scene);if(result===false)UNITY.SceneManager.LogWarning("Babylon.js camera rig failed to initialize multi player views")}else{UNITY.SceneManager.LogWarning("Babylon.js camera rig multi player view option not enabled")}return result};DefaultCameraSystem.PlayerOneCamera=null;DefaultCameraSystem.PlayerTwoCamera=null;DefaultCameraSystem.PlayerThreeCamera=null;DefaultCameraSystem.PlayerFourCamera=null;DefaultCameraSystem.XRExperienceHelper=null;DefaultCameraSystem.multiPlayerView=false;DefaultCameraSystem.multiPlayerCount=1;DefaultCameraSystem.multiPlayerCameras=null;DefaultCameraSystem.stereoCameras=true;DefaultCameraSystem.startupMode=1;DefaultCameraSystem.cameraReady=false;DefaultCameraSystem.renderingPipeline=null;DefaultCameraSystem.screenSpacePipeline=null;DefaultCameraSystem.OnXRExperienceHelperObservable=new BABYLON.Observable;return DefaultCameraSystem}(UNITY.ScriptComponent));PROJECT.DefaultCameraSystem=DefaultCameraSystem})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var DebugInformation=(function(_super){__extends(DebugInformation,_super);function DebugInformation(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.keys=true;_this.show=true;_this.popup=false;_this.views=false;_this.xbox=false;_this.color=BABYLON.Color3.Green();return _this}DebugInformation.prototype.awake=function(){this.keys=this.getProperty("enableDebugKeys",this.keys);this.show=this.getProperty("showDebugLabels",this.show);this.popup=this.getProperty("popupDebugPanel",this.popup);this.views=this.getProperty("togglePlayerViews",this.views);this.xbox=this.getProperty("allowXboxLiveSignIn",this.xbox);var debugLabelColor=this.getProperty("debugOutputTextColor");if(debugLabelColor!=null)this.color=UNITY.Utilities.ParseColor3(debugLabelColor);if(UNITY.WindowManager.IsWindows())this.popup=false;UNITY.SceneManager.LogMessage("Debug information overlay loaded")};DebugInformation.prototype.start=function(){var _this=this;if(this.show===true){}if(this.keys===true){if(this.views===true){UNITY.SceneManager.LogMessage("Enable Multiplayer Keys");UNITY.InputController.OnKeyboardPress(UNITY.UserInputKey.Num1,function(){PROJECT.DefaultCameraSystem.SetMultiPlayerViewLayout(_this.scene,1);UNITY.SceneManager.LogMessage("1 player pressed")});UNITY.InputController.OnKeyboardPress(UNITY.UserInputKey.Num2,function(){PROJECT.DefaultCameraSystem.SetMultiPlayerViewLayout(_this.scene,2);UNITY.SceneManager.LogMessage("2 players pressed")});UNITY.InputController.OnKeyboardPress(UNITY.UserInputKey.Num3,function(){PROJECT.DefaultCameraSystem.SetMultiPlayerViewLayout(_this.scene,3);UNITY.SceneManager.LogMessage("3 players pressed")});UNITY.InputController.OnKeyboardPress(UNITY.UserInputKey.Num4,function(){PROJECT.DefaultCameraSystem.SetMultiPlayerViewLayout(_this.scene,4);UNITY.SceneManager.LogMessage("4 players pressed")})}UNITY.InputController.OnKeyboardPress(UNITY.UserInputKey.R,function(){window.location.reload()});UNITY.InputController.OnKeyboardPress(UNITY.UserInputKey.I,function(){if(_this.popup===true){UNITY.WindowManager.PopupDebug(_this.scene)}else{UNITY.WindowManager.ToggleDebug(_this.scene,true,null)}});UNITY.InputController.OnKeyboardPress(UNITY.UserInputKey.F,function(){_this.openFullscreen(window.top.document.documentElement)})}var printColor=this.color.toHexString();var graphicsVersion=UNITY.SceneManager.GetEngineVersionString(this.scene);UNITY.WindowManager.PrintToScreen(graphicsVersion,printColor)};DebugInformation.prototype.destroy=function(){};DebugInformation.prototype.openFullscreen=function(elem){DebugInformation._RequestFullscreen(elem)};DebugInformation.prototype.closeFullscreen=function(){DebugInformation._ExitFullscreen()};DebugInformation._RequestFullscreen=function(element){var requestFunction=element.requestFullscreen||element.webkitRequestFullscreen;if(!requestFunction){return}requestFunction.call(element)};DebugInformation._ExitFullscreen=function(){var anyDoc=document;if(document.exitFullscreen){document.exitFullscreen()}else if(anyDoc.webkitCancelFullScreen){anyDoc.webkitCancelFullScreen()}};return DebugInformation}(UNITY.ScriptComponent));PROJECT.DebugInformation=DebugInformation})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var UserInterface=(function(_super){__extends(UserInterface,_super);function UserInterface(transform,scene,properties){var _this=_super.call(this,transform,scene,properties)||this;_this.exportLowerCase=false;_this.backgroundData=null;_this.textureSampleMode=2;_this.idealRenderingSize=0;_this.viewportRenderSize=0;_this.customViewportSize=new BABYLON.Vector2(1920,1080);_this.defaultImageLocation="scenes/assets/";_this.defaultImageControl=true;_this.isManagedTexture=true;_this.scaleTextureSize=true;_this.setAdaptiveScale=true;_this.drawAtIdealSize=true;_this.useSmallestIdeal=false;_this.fontFamilyList=null;PROJECT.UserInterface.SetSceneController(scene);_this.attachWebFonts();return _this}UserInterface.IsCanvasReady=function(){return(PROJECT.UserInterface.AdvancedTexture!=null)};UserInterface.GetCanvasElement=function(name){return(PROJECT.UserInterface.AdvancedTexture!=null)?PROJECT.UserInterface.AdvancedTexture.getControlByName(name):null};UserInterface.ShowCanvasElement=function(element,fadeSpeedRatio,onAnimationComplete){if(fadeSpeedRatio===void 0){fadeSpeedRatio=0.0}if(onAnimationComplete===void 0){onAnimationComplete=null}var result=null;if(element!=null){if(fadeSpeedRatio>0){var alphaStart=element.alpha;var alphaEnd=1.0;element.isEnabled=true;element.alpha=alphaEnd;if(onAnimationComplete!=null)onAnimationComplete()}else{element.isEnabled=true;element.alpha=1.0}}return result};UserInterface.HideCanvasElement=function(element,fadeSpeedRatio,onAnimationComplete){if(fadeSpeedRatio===void 0){fadeSpeedRatio=0.0}if(onAnimationComplete===void 0){onAnimationComplete=null}var result=null;if(element!=null){if(fadeSpeedRatio>0){element.isEnabled=false;var alphaStart=element.alpha;var alphaEnd=0.0;element.isEnabled=false;element.alpha=alphaEnd;if(onAnimationComplete!=null)onAnimationComplete()}else{element.isEnabled=false;element.alpha=0.0}}return result};UserInterface.SetSceneController=function(scene){PROJECT.UserInterface.SceneController=scene};UserInterface.GetAdvancedTexture=function(){return PROJECT.UserInterface.AdvancedTexture};UserInterface.GetBackgroundTexture=function(){return PROJECT.UserInterface.BackgroundTexture};UserInterface.prototype.awake=function(){this.setupProperties();this.preloadWebFonts()};UserInterface.prototype.start=function(){this.setupInterface()};UserInterface.prototype.destroy=function(){PROJECT.UserInterface.OnFontFacesReady.clear();PROJECT.UserInterface.OnFontFacesReady=null;PROJECT.UserInterface.OnFontFacesLoaded.clear();PROJECT.UserInterface.OnFontFacesLoaded=null;PROJECT.UserInterface.OnParseNodeObject.clear();PROJECT.UserInterface.OnParseNodeObject=null;PROJECT.UserInterface.OnInterfaceLoaded.clear();PROJECT.UserInterface.OnInterfaceLoaded=null;if(this.isManagedTexture===false&&PROJECT.UserInterface.AdvancedTexture!=null){PROJECT.UserInterface.AdvancedTexture.dispose()}PROJECT.UserInterface.AdvancedTexture=null;if(PROJECT.UserInterface.BackgroundTexture!=null){PROJECT.UserInterface.BackgroundTexture.dispose()}PROJECT.UserInterface.BackgroundTexture=null};UserInterface.prototype.engineResize=function(){this.scene.getEngine().resize(true)};UserInterface.prototype.setupProperties=function(){if(this.defaultImageLocation!=null&&this.defaultImageLocation!==""){this.defaultImageLocation=this.defaultImageLocation.trim()}if(this.defaultImageLocation!=null&&this.defaultImageLocation!==""&&this.defaultImageLocation.endsWith("/")===false){this.defaultImageLocation=(this.defaultImageLocation+"/")}if(this.customViewportSize.x<=0)this.customViewportSize.x=1920;if(this.customViewportSize.y<=0)this.customViewportSize.y=1080};UserInterface.prototype.setupInterface=function(){var interfaceParsed=null;var backgroundParsed=null;var interfaceText=this.getProperty("base64UserInterface");if(interfaceText!=null&&interfaceText!==""){var interfaceJson=window.atob(interfaceText);if(interfaceJson!=null&&interfaceJson!==""){interfaceParsed=JSON.parse(interfaceJson);if(interfaceParsed!=null){if(interfaceParsed.root!=null){this.parseNodeObject(interfaceParsed.root)}var width=(this.viewportRenderSize===0&&interfaceParsed.width!==null&&interfaceParsed.width>=0)?interfaceParsed.width:this.customViewportSize.x;var height=(this.viewportRenderSize===0&&interfaceParsed.height!==null&&interfaceParsed.height>=0)?interfaceParsed.height:this.customViewportSize.y;if(this.viewportRenderSize===1){width=this.scene.getEngine().getRenderingCanvas().width;height=this.scene.getEngine().getRenderingCanvas().height}if(this.isManagedTexture===true){if(UNITY.SceneManager.AdvDynamicTexture==null)UNITY.SceneManager.AdvDynamicTexture=BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI("Default-Screen-UI",true,this.scene,this.textureSampleMode,this.setAdaptiveScale);PROJECT.UserInterface.AdvancedTexture=UNITY.SceneManager.AdvDynamicTexture}else{PROJECT.UserInterface.AdvancedTexture=BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI("GUI",true,this.scene,this.textureSampleMode,this.setAdaptiveScale)}if(PROJECT.UserInterface.AdvancedTexture!=null){if(this.idealRenderingSize>0){if(this.idealRenderingSize===1||this.idealRenderingSize===3){PROJECT.UserInterface.AdvancedTexture.idealWidth=width}if(this.idealRenderingSize===2||this.idealRenderingSize===3){PROJECT.UserInterface.AdvancedTexture.idealHeight=height}if(this.idealRenderingSize===3){PROJECT.UserInterface.AdvancedTexture.useSmallestIdeal=this.useSmallestIdeal}PROJECT.UserInterface.AdvancedTexture.renderAtIdealSize=this.drawAtIdealSize}else{PROJECT.UserInterface.AdvancedTexture.useSmallestIdeal=false;PROJECT.UserInterface.AdvancedTexture.renderAtIdealSize=false}if(this.scaleTextureSize===true){PROJECT.UserInterface.AdvancedTexture.parseSerializedObject(interfaceParsed,false);PROJECT.UserInterface.AdvancedTexture.scaleTo(width,height)}else{PROJECT.UserInterface.AdvancedTexture.parseSerializedObject(interfaceParsed,false)}}if(this.backgroundData!=null&&this.backgroundData.createBackground===true){var backgroundText=this.getProperty("base64BackgroundData");if(backgroundText!=null&&backgroundText!==""){var backgroundJson=window.atob(backgroundText);if(backgroundJson!=null&&backgroundJson!==""){backgroundParsed=JSON.parse(backgroundJson);if(backgroundParsed!=null){if(backgroundParsed.root!=null){this.parseNodeObject(backgroundParsed.root)}}}}PROJECT.UserInterface.BackgroundTexture=BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI("BACKGROUND",false,this.scene,this.textureSampleMode,this.setAdaptiveScale);if(PROJECT.UserInterface.BackgroundTexture!=null){if(this.backgroundData.scaleToForeground===true){if(PROJECT.UserInterface.AdvancedTexture.idealWidth!=null){PROJECT.UserInterface.BackgroundTexture.idealWidth=PROJECT.UserInterface.AdvancedTexture.idealWidth}if(PROJECT.UserInterface.AdvancedTexture.idealHeight!=null){PROJECT.UserInterface.BackgroundTexture.idealHeight=PROJECT.UserInterface.AdvancedTexture.idealHeight}if(PROJECT.UserInterface.AdvancedTexture.useSmallestIdeal!=null){PROJECT.UserInterface.BackgroundTexture.useSmallestIdeal=PROJECT.UserInterface.AdvancedTexture.useSmallestIdeal}if(PROJECT.UserInterface.AdvancedTexture.renderAtIdealSize!=null){PROJECT.UserInterface.BackgroundTexture.renderAtIdealSize=PROJECT.UserInterface.AdvancedTexture.renderAtIdealSize}}else{PROJECT.UserInterface.BackgroundTexture.useSmallestIdeal=false;PROJECT.UserInterface.BackgroundTexture.renderAtIdealSize=false}if(backgroundParsed!=null)PROJECT.UserInterface.BackgroundTexture.parseSerializedObject(backgroundParsed,false);if(this.backgroundData.scaleToForeground===true)PROJECT.UserInterface.BackgroundTexture.scaleTo(width,height)}}}}}if(PROJECT.UserInterface.OnInterfaceLoaded&&PROJECT.UserInterface.OnInterfaceLoaded.hasObservers()){try{PROJECT.UserInterface.OnInterfaceLoaded.notifyObservers(PROJECT.UserInterface.AdvancedTexture)}catch(error){console.warn(error.message)}}this.engineResize()};UserInterface.prototype.attachWebFonts=function(){var _this=this;if(PROJECT.UserInterface.FontFacesAttached===false){PROJECT.UserInterface.FontFacesAttached=true;document.fonts.ready.then(function(){BABYLON.Tools.Log("Document fonts ready.");if(PROJECT.UserInterface.OnFontFacesReady&&PROJECT.UserInterface.OnFontFacesReady.hasObservers()){try{PROJECT.UserInterface.OnFontFacesReady.notifyObservers(document.fonts)}catch(error){console.warn(error.message)}}});document.fonts.onloadingdone=function(fontFaceSetEvent){_this.engineResize();BABYLON.Tools.Warn("All document fonts loaded.");if(PROJECT.UserInterface.OnFontFacesLoaded&&PROJECT.UserInterface.OnFontFacesLoaded.hasObservers()){try{PROJECT.UserInterface.OnFontFacesLoaded.notifyObservers(fontFaceSetEvent)}catch(error){console.warn(error.message)}}}}};UserInterface.prototype.preloadWebFonts=function(){if(PROJECT.UserInterface.FontFacesPreloaded===false){PROJECT.UserInterface.FontFacesPreloaded=true;if(this.fontFamilyList!=null&&this.fontFamilyList.length>0){this.fontFamilyList.forEach(function(family){var txt=document.createElement("span");txt.style.fontFamily=family;document.body.appendChild(txt)})}}};UserInterface.prototype.parseNodeObject=function(object){var _this=this;if(object!=null){if(this.defaultImageControl===true){try{if(object.name!=null&&object.source!=null&&object.source!==""&&object.source.toLowerCase().indexOf("./images/")>=0){object.source=(this.defaultImageLocation.endsWith("/"))?object.source.replace("./images/",this.defaultImageLocation):object.source.replace("./images",this.defaultImageLocation);if(this.exportLowerCase===true)object.source=object.source.toLowerCase()}}catch(error){console.warn(error.message)}}if(PROJECT.UserInterface.OnParseNodeObject&&PROJECT.UserInterface.OnParseNodeObject.hasObservers()){try{PROJECT.UserInterface.OnParseNodeObject.notifyObservers(object)}catch(error){console.warn(error.message)}}if(object.children!=null){object.children.forEach(function(child){_this.parseNodeObject(child)})}}};UserInterface.OnFontFacesReady=new BABYLON.Observable;UserInterface.OnFontFacesLoaded=new BABYLON.Observable;UserInterface.OnParseNodeObject=new BABYLON.Observable;UserInterface.OnInterfaceLoaded=new BABYLON.Observable;UserInterface.SceneController=null;UserInterface.AdvancedTexture=null;UserInterface.BackgroundTexture=null;UserInterface.FontFacesAttached=false;UserInterface.FontFacesPreloaded=false;return UserInterface}(UNITY.ScriptComponent));PROJECT.UserInterface=UserInterface})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var AssetExporter=(function(_super){__extends(AssetExporter,_super);function AssetExporter(){return _super!==null&&_super.apply(this,arguments)||this}AssetExporter.prototype.awake=function(){};AssetExporter.prototype.start=function(){};AssetExporter.prototype.fixed=function(){};AssetExporter.prototype.update=function(){};AssetExporter.prototype.late=function(){};AssetExporter.prototype.after=function(){};AssetExporter.prototype.ready=function(){};AssetExporter.prototype.destroy=function(){};return AssetExporter}(UNITY.ScriptComponent));PROJECT.AssetExporter=AssetExporter})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var AssetPreloader=(function(_super){__extends(AssetPreloader,_super);function AssetPreloader(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.parentMeshes=false;_this.importMeshes=null;_this.assetContainers=null;return _this}AssetPreloader.prototype.destroy=function(){this.importMeshes=null;this.assetContainers=null};AssetPreloader.prototype.addPreloaderTasks=function(assetsManager){var _this=this;var sceneRootUrl=UNITY.SceneManager.GetRootUrl(this.scene);var rooturl=sceneRootUrl;var filename="";if(this.importMeshes!=null){this.importMeshes.forEach(function(imporUrl,importIndex){rooturl=sceneRootUrl;filename=imporUrl;if(imporUrl.indexOf("://")>=0){rooturl=imporUrl.substring(0,imporUrl.lastIndexOf('/'))+"/";filename=imporUrl.substring(imporUrl.lastIndexOf('/')+1)}var importTask=assetsManager.addMeshTask((_this.transform.name+".MeshTask."+importIndex.toString()),null,rooturl,filename);importTask.onSuccess=function(task){if(task.loadedMeshes!=null){if(_this.parentMeshes===true)task.loadedMeshes[0].parent=_this.transform;var meshTaskKey=task.sceneFilename.toString().toLowerCase();UNITY.SceneManager.RegisterImportMeshes(_this.scene,meshTaskKey,task.loadedMeshes)}};importTask.onError=function(task,message,exception){console.error(message,exception)}})}if(this.assetContainers!=null){this.assetContainers.forEach(function(assetUrl,assetIndex){var rooturl=sceneRootUrl;var filename=assetUrl;if(assetUrl.indexOf("://")>=0){rooturl=assetUrl.substring(0,assetUrl.lastIndexOf('/'))+"/";filename=assetUrl.substring(assetUrl.lastIndexOf('/')+1)}var assetTask=assetsManager.addContainerTask((_this.transform.name+".ContainerTask."+assetIndex.toString()),null,rooturl,filename);assetTask.onSuccess=function(task){if(task.loadedContainer!=null){var assetTaskKey=task.sceneFilename.toString().toLowerCase();UNITY.SceneManager.RegisterAssetContainer(_this.scene,assetTaskKey,task.loadedContainer)}};assetTask.onError=function(task,message,exception){console.error(message,exception)}})}};return AssetPreloader}(UNITY.ScriptComponent));PROJECT.AssetPreloader=AssetPreloader})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var NodeMaterialInstance=(function(_super){__extends(NodeMaterialInstance,_super);function NodeMaterialInstance(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.nodeMaterialData=null;_this.setCustomRootUrl=null;_this.m_nodeMaterial=null;return _this}NodeMaterialInstance.prototype.getMaterialInstance=function(){return this.m_nodeMaterial};NodeMaterialInstance.prototype.awake=function(){if(this.nodeMaterialData!=null){var rootUrl=(this.setCustomRootUrl!=null&&this.setCustomRootUrl!=="")?this.setCustomRootUrl.trim():"";this.m_nodeMaterial=BABYLON.NodeMaterial.Parse(this.nodeMaterialData,this.scene,rootUrl);this.m_nodeMaterial.name=this.transform.name+".NodeMaterial"}};NodeMaterialInstance.prototype.destroy=function(){if(this.m_nodeMaterial!=null){this.m_nodeMaterial.dispose();this.m_nodeMaterial=null}};return NodeMaterialInstance}(UNITY.ScriptComponent));PROJECT.NodeMaterialInstance=NodeMaterialInstance})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var NodeMaterialParticle=(function(_super){__extends(NodeMaterialParticle,_super);function NodeMaterialParticle(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.nodeMaterialEditor=null;return _this}NodeMaterialParticle.prototype.awake=function(){};NodeMaterialParticle.prototype.start=function(){if(this.nodeMaterialEditor!=null){var nme=SM.FindScriptComponent(this.nodeMaterialEditor,"PROJECT.NodeMaterialInstance");if(nme!=null){var materialInstance=nme.getMaterialInstance();if(materialInstance!=null){this.setupNodeMaterial(materialInstance)}else{console.warn("Null node material instance on: "+this.nodeMaterialEditor.name)}}else{console.warn("Failed to locate node material editor on: "+this.nodeMaterialEditor.name)}}};NodeMaterialParticle.prototype.setupNodeMaterial=function(materialInstance){};NodeMaterialParticle.prototype.update=function(){};NodeMaterialParticle.prototype.late=function(){};NodeMaterialParticle.prototype.after=function(){};NodeMaterialParticle.prototype.fixed=function(){};NodeMaterialParticle.prototype.ready=function(){};NodeMaterialParticle.prototype.destroy=function(){this.nodeMaterialEditor=null};return NodeMaterialParticle}(UNITY.ScriptComponent));PROJECT.NodeMaterialParticle=NodeMaterialParticle})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var NodeMaterialProcess=(function(_super){__extends(NodeMaterialProcess,_super);function NodeMaterialProcess(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.nodeMaterialEditor=null;_this.numberOfSamples=1;_this.samplingMode=0;_this.textureType=0;_this.textureFormat=BABYLON.Constants.TEXTUREFORMAT_RGBA;_this.sizeRatio=1.0;_this.resuable=false;_this.m_postProcess=null;return _this}NodeMaterialProcess.prototype.getPostProcess=function(){return this.m_postProcess};NodeMaterialProcess.prototype.start=function(){if(this.nodeMaterialEditor!=null){var nme=SM.FindScriptComponent(this.nodeMaterialEditor,"PROJECT.NodeMaterialInstance");if(nme!=null){var materialInstance=nme.getMaterialInstance();if(materialInstance!=null){this.setupNodeMaterial(materialInstance)}else{console.warn("Null node material instance on: "+this.nodeMaterialEditor.name)}}else{console.warn("Failed to locate node material editor on: "+this.nodeMaterialEditor.name)}}};NodeMaterialProcess.prototype.setupNodeMaterial=function(materialInstance){var camera=this.getCameraRig();if(camera!=null){this.m_postProcess=materialInstance.createPostProcess(camera,this.sizeRatio,this.samplingMode,this.scene.getEngine(),this.resuable,this.textureType,this.textureFormat);if(this.m_postProcess!=null){this.m_postProcess.name=(this.transform.name+".Process");this.m_postProcess.samples=this.numberOfSamples}else{console.warn("Failed to create post process for: "+this.transform.name)}}else{console.warn("Null camera rig for: "+this.transform.name)}};NodeMaterialProcess.prototype.destroy=function(){this.nodeMaterialEditor=null;if(this.m_postProcess!=null){this.m_postProcess.dispose();this.m_postProcess=null}};return NodeMaterialProcess}(UNITY.ScriptComponent));PROJECT.NodeMaterialProcess=NodeMaterialProcess})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var NodeMaterialTexture=(function(_super){__extends(NodeMaterialTexture,_super);function NodeMaterialTexture(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.nodeMaterialEditor=null;_this.textureSize=256;_this.m_proceduralTexture=null;return _this}NodeMaterialTexture.prototype.getProceduralTexture=function(){return this.m_proceduralTexture};NodeMaterialTexture.prototype.start=function(){if(this.nodeMaterialEditor!=null){var nme=SM.FindScriptComponent(this.nodeMaterialEditor,"PROJECT.NodeMaterialInstance");if(nme!=null){var materialInstance=nme.getMaterialInstance();if(materialInstance!=null){this.setupNodeMaterial(materialInstance)}else{console.warn("Null node material instance on: "+this.nodeMaterialEditor.name)}}else{console.warn("Failed to locate node material editor on: "+this.nodeMaterialEditor.name)}}};NodeMaterialTexture.prototype.setupNodeMaterial=function(materialInstance){this.m_proceduralTexture=materialInstance.createProceduralTexture(this.textureSize,this.scene);if(this.m_proceduralTexture!=null){this.m_proceduralTexture.name=(this.transform.name+".Texture")}};NodeMaterialTexture.prototype.destroy=function(){this.nodeMaterialEditor=null;if(this.m_proceduralTexture!=null){this.m_proceduralTexture.dispose();this.m_proceduralTexture=null}};return NodeMaterialTexture}(UNITY.ScriptComponent));PROJECT.NodeMaterialTexture=NodeMaterialTexture})(PROJECT||(PROJECT={}));var __decorate=(this&&this.__decorate)||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if(typeof Reflect==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;return c>3&&r&&Object.defineProperty(target,key,r),r};var PROJECT;(function(PROJECT){var MobileInputController=(function(_super){__extends(MobileInputController,_super);function MobileInputController(transform,scene,properties){var _this=_super.call(this,transform,scene,properties)||this;_this.styleSheet=null;_this.controlType=0;_this.parentElement="root";_this.maxReadyTimeout=200;_this.maxMoveDistance=28;_this.maxMoveDeadzone=4;_this.uiParentElement=null;_this.leftBaseElement=null;_this.rightBaseElement=null;_this.buttonBaseElement=null;_this.leftStickStyle=0;_this.rightStickStyle=0;_this.leftStickFactor=1.0;_this.rightStickFactor=1.0;_this.invertLeftStickY=true;_this.centerLeftJoystick=false;_this.enableLeftJoystick=true;_this.invertRightStickY=true;_this.centerRightJoystick=false;_this.enableRightJoystick=true;_this.enableMouseAxes=false;_this.enableVirtualButtons=false;_this.virtualButtonControls=null;_this.m_leftStick=null;_this.m_rightStick=null;_this.m_mobileDevice=false;PROJECT.MobileInputController.StaticInstance=_this;return _this}Object.defineProperty(MobileInputController,"Instance",{get:function(){return PROJECT.MobileInputController.StaticInstance},enumerable:false,configurable:true});MobileInputController.prototype.getLeftStick=function(){return this.m_leftStick};MobileInputController.prototype.getRightStick=function(){return this.m_rightStick};MobileInputController.prototype.getLeftStickEnabled=function(){return this.enableLeftJoystick};MobileInputController.prototype.getRightStickEnabled=function(){return this.enableRightJoystick};MobileInputController.prototype.getLeftStickElement=function(){return this.leftBaseElement};MobileInputController.prototype.getRightStickElement=function(){return this.rightBaseElement};MobileInputController.prototype.showLeftStickElement=function(show){if(this.leftBaseElement!=null)this.leftBaseElement.style.display=(show===true)?"block":"none"};MobileInputController.prototype.showRightStickElement=function(show){if(this.rightBaseElement!=null)this.rightBaseElement.style.display=(show===true)?"block":"none"};MobileInputController.prototype.awake=function(){if(this.controlType===1||this.m_mobileDevice===true){this.m_mobileDevice=UNITY.WindowManager.IsMobile()}var rootElement=(this.parentElement!=null&&this.parentElement!==""&&this.parentElement.toLowerCase()!=="body")?document.getElementById(this.parentElement):null;this.uiParentElement=(rootElement!=null)?rootElement:document.body};MobileInputController.prototype.start=function(){if(this.controlType===1||this.m_mobileDevice===true){this.loadStyleSheet();this.loadHtmlMarkup()}};MobileInputController.prototype.ready=function(){var _this=this;if(this.controlType===1||this.m_mobileDevice===true){UNITY.SceneManager.VirtualJoystickEnabled=!this.enableMouseAxes;var displayTimeout=(this.maxReadyTimeout>=10)?this.maxReadyTimeout:10;UNITY.WindowManager.SetTimeout(displayTimeout,function(){_this.createHtmlElements();if(_this.enableLeftJoystick===true)_this.m_leftStick=new UNITY.TouchJoystickHandler("stick1",_this.maxMoveDistance,_this.maxMoveDeadzone);if(_this.enableRightJoystick===true)_this.m_rightStick=new UNITY.TouchJoystickHandler("stick2",_this.maxMoveDistance,_this.maxMoveDeadzone)})}};MobileInputController.prototype.update=function(){if(this.controlType===1||this.m_mobileDevice===true){if(UNITY.InputController.AllowMobileControls===true){if(this.enableLeftJoystick===true&&this.m_leftStick!=null){UNITY.InputController.MobileControlsActive=true;var leftStickValueX=this.m_leftStick.getValueX();var leftStickValueY=this.m_leftStick.getValueY();var leftStickFixedX=BABYLON.Scalar.Clamp((leftStickValueX*this.leftStickFactor),-1,1);var leftStickFixedY=BABYLON.Scalar.Clamp((leftStickValueY*this.leftStickFactor),-1,1);UNITY.InputController.SetLeftJoystickBuffer(leftStickFixedX,leftStickFixedY,this.invertLeftStickY)}if(this.enableRightJoystick===true&&this.m_rightStick!=null){UNITY.InputController.MobileControlsActive=true;var rightStickValueX=this.m_rightStick.getValueX();var rightStickValueY=this.m_rightStick.getValueY();var rightStickFixedX=BABYLON.Scalar.Clamp((rightStickValueX*this.rightStickFactor),-1,1);var rightStickFixedY=BABYLON.Scalar.Clamp((rightStickValueY*this.rightStickFactor),-1,1);UNITY.InputController.SetRightJoystickBuffer(rightStickFixedX,rightStickFixedY,this.invertRightStickY)}if(this.enableVirtualButtons===true){UNITY.InputController.MobileControlsActive=true}}else{}}};MobileInputController.prototype.destroy=function(){if(this.m_leftStick!=null){this.m_leftStick.dispose();this.m_leftStick=null}if(this.m_rightStick!=null){this.m_rightStick.dispose();this.m_rightStick=null}};MobileInputController.prototype.loadStyleSheet=function(){if(this.styleSheet!=null&&this.styleSheet!==""){var style=document.createElement("style");style.id="MobileStyleSheet";style.type="text/css";if(style.styleSheet){style.styleSheet.cssText=this.styleSheet}else{style.appendChild(document.createTextNode(this.styleSheet))}document.head.appendChild(style)}else{console.warn("WARNING: Mobile Style Sheet Not Defined For: "+this.transform.name)}};MobileInputController.prototype.loadHtmlMarkup=function(){};MobileInputController.prototype.createHtmlElements=function(){var _this=this;var rootUrl=UNITY.SceneManager.GetRootUrl(this.scene);var leftBaseImageData=this.getProperty("leftStickBase");var rightBaseImageData=this.getProperty("rightStickBase");var leftStickImageData=this.getProperty("leftStickImage");var rightStickImageData=this.getProperty("rightStickImage");var lbaseImageFilename=(leftBaseImageData!=null)?leftBaseImageData.filename:"baseImage.png";var rbaseImageFilename=(rightBaseImageData!=null)?rightBaseImageData.filename:"baseImage.png";var leftStickImageFilename=(leftStickImageData!=null)?leftStickImageData.filename:"leftStick.png";var rightStickImageFilename=(rightStickImageData!=null)?rightStickImageData.filename:"rightStick.png";if(this.enableLeftJoystick===true){this.leftBaseElement=document.createElement("div");this.leftBaseElement.id="base1";this.leftBaseElement.style.display=(this.leftStickStyle===0)?"block":"none";this.leftBaseElement.className=(this.centerLeftJoystick===true)?"GamepadCenterStick":"GamepadLeftStick";var baseImg1=document.createElement("img");baseImg1.id="image1";baseImg1.src=(rootUrl+lbaseImageFilename);baseImg1.className="GamepadLeftBase";var ballDiv1=document.createElement("div");ballDiv1.id="stick1";ballDiv1.className="GamepadLeftContent";var ballImg1=document.createElement("img");ballImg1.id="ball1";ballImg1.src=(rootUrl+leftStickImageFilename);ballImg1.className="GamepadLeftControl";ballDiv1.appendChild(ballImg1);this.leftBaseElement.appendChild(baseImg1);this.leftBaseElement.appendChild(ballDiv1);this.uiParentElement.appendChild(this.leftBaseElement)}if(this.enableRightJoystick===true){this.rightBaseElement=document.createElement("div");this.rightBaseElement.id="base2";this.rightBaseElement.style.display=(this.rightStickStyle===0)?"block":"none";this.rightBaseElement.className=(this.centerRightJoystick===true)?"GamepadCenterStick":"GamepadRightStick";var baseImg2=document.createElement("img");baseImg2.id="image2";baseImg2.src=(rootUrl+rbaseImageFilename);baseImg2.className="GamepadRightBase";var ballDiv2=document.createElement("div");ballDiv2.id="stick2";ballDiv2.className="GamepadRightContent";var ballImg2=document.createElement("img");ballImg2.id="ball2";ballImg2.src=(rootUrl+rightStickImageFilename);ballImg2.className="GamepadRightControl";ballDiv2.appendChild(ballImg2);this.rightBaseElement.appendChild(baseImg2);this.rightBaseElement.appendChild(ballDiv2);this.uiParentElement.appendChild(this.rightBaseElement)}if(this.enableVirtualButtons===true){this.buttonBaseElement=document.createElement("div");this.buttonBaseElement.id="base0";this.buttonBaseElement.style.pointerEvents="none";this.buttonBaseElement.className="GamepadButtonGroup";if(this.virtualButtonControls!=null){this.virtualButtonControls.forEach(function(element,index){var buttonIndexCount=(index+1);var buttonImageData=element.buttonImage;var virtualButton=document.createElement("div");virtualButton.id=("button"+buttonIndexCount.toFixed(0));virtualButton.style.cursor="pointer";virtualButton.style.pointerEvents="auto";virtualButton.className=element.className;virtualButton.addEventListener("pointerdown",function(e){UNITY.InputController.InputKeyDownHandler(element.inputKeyCode,e)});virtualButton.addEventListener("pointerup",function(e){UNITY.InputController.InputKeyUpHandler(element.inputKeyCode,e)});if(buttonImageData!=null&&buttonImageData.filename!=null){if(element.buttonCover===0){var buttonImg=document.createElement("img");buttonImg.id=(virtualButton.id+".Image");buttonImg.src=(rootUrl+buttonImageData.filename);buttonImg.style.top="0px";buttonImg.style.left="0px";buttonImg.style.width="100%";buttonImg.style.height="100%";buttonImg.style.border="none";buttonImg.style.margin="0px";buttonImg.style.padding="0px";buttonImg.style.position="absolute";virtualButton.appendChild(buttonImg)}else{virtualButton.textContent=element.buttonName;virtualButton.style.backgroundImage=("url("+rootUrl+buttonImageData.filename+")");virtualButton.style.backgroundRepeat="no-repeat";virtualButton.style.backgroundSize=(element.buttonCover===1)?"cover":"contain"}}else{virtualButton.textContent=element.buttonName}_this.buttonBaseElement.appendChild(virtualButton)})}this.uiParentElement.appendChild(this.buttonBaseElement)}};MobileInputController.StaticInstance=null;return MobileInputController}(UNITY.ScriptComponent));PROJECT.MobileInputController=MobileInputController;var FreeCameraTouchJoystickInput=(function(){function FreeCameraTouchJoystickInput(){this.joystickAngularSensibility=200;this.joystickMoveSensibility=40.0;this.deadzoneDelta=0.1;this._yAxisScale=1.0;this.LSValues=new BABYLON.Vector2(0,0);this.RSValues=new BABYLON.Vector2(0,0);this._cameraTransform=BABYLON.Matrix.Identity();this._deltaTransform=BABYLON.Vector3.Zero();this._vector3=BABYLON.Vector3.Zero();this._vector2=BABYLON.Vector2.Zero();this._attached=false}Object.defineProperty(FreeCameraTouchJoystickInput.prototype,"invertYAxis",{get:function(){return this._yAxisScale!==1.0},set:function(value){this._yAxisScale=value?-1.0:1.0},enumerable:false,configurable:true});FreeCameraTouchJoystickInput.prototype.attachControl=function(){this._attached=true};FreeCameraTouchJoystickInput.prototype.detachControl=function(ignored){this._attached=false};FreeCameraTouchJoystickInput.prototype.checkInputs=function(){if(this.camera!=null&&this.controller!=null&&this._attached===true){var LStick=this.controller.getLeftStick();if(LStick!=null){this.LSValues.set(LStick.getValueX(),LStick.getValueY());if(this.joystickMoveSensibility!==0){this.LSValues.x=(Math.abs(this.LSValues.x)>this.deadzoneDelta)?this.LSValues.x/this.joystickMoveSensibility:0;this.LSValues.y=(Math.abs(this.LSValues.y)>this.deadzoneDelta)?this.LSValues.y/this.joystickMoveSensibility:0}}else{this.LSValues.set(0,0)}var RStick=this.controller.getRightStick();if(RStick!=null){this.RSValues.set(RStick.getValueX(),RStick.getValueY());if(this.joystickAngularSensibility!==0){this.RSValues.x=(Math.abs(this.RSValues.x)>this.deadzoneDelta)?this.RSValues.x/this.joystickAngularSensibility:0;this.RSValues.y=((Math.abs(this.RSValues.y)>this.deadzoneDelta)?this.RSValues.y/this.joystickAngularSensibility:0)*this._yAxisScale}}else{this.RSValues.set(0,0)}if(!this.camera.rotationQuaternion){BABYLON.Matrix.RotationYawPitchRollToRef(this.camera.rotation.y,this.camera.rotation.x,0,this._cameraTransform)}else{this.camera.rotationQuaternion.toRotationMatrix(this._cameraTransform)}var speed=this.camera._computeLocalCameraSpeed()*50.0;this._vector3.copyFromFloats(this.LSValues.x*speed,0,-this.LSValues.y*speed);BABYLON.Vector3.TransformCoordinatesToRef(this._vector3,this._cameraTransform,this._deltaTransform);this.camera.cameraDirection.addInPlace(this._deltaTransform);this._vector2.copyFromFloats(this.RSValues.y,this.RSValues.x);this.camera.cameraRotation.addInPlace(this._vector2)}};FreeCameraTouchJoystickInput.prototype.getClassName=function(){return"FreeCameraTouchJoystickInput"};FreeCameraTouchJoystickInput.prototype.getSimpleName=function(){return"joystick"};__decorate([BABYLON.serialize()],FreeCameraTouchJoystickInput.prototype,"joystickAngularSensibility",void 0);__decorate([BABYLON.serialize()],FreeCameraTouchJoystickInput.prototype,"joystickMoveSensibility",void 0);return FreeCameraTouchJoystickInput}());PROJECT.FreeCameraTouchJoystickInput=FreeCameraTouchJoystickInput;BABYLON.CameraInputTypes["FreeCameraTouchJoystickInput"]=PROJECT.FreeCameraTouchJoystickInput})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var MobileOccludeMaterial=(function(_super){__extends(MobileOccludeMaterial,_super);function MobileOccludeMaterial(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.applyToMaterial=true;return _this}MobileOccludeMaterial.prototype.awake=function(){if(this.applyToMaterial===true&&this.transform instanceof BABYLON.AbstractMesh){this.transform.material.disableColorWrite=true}};return MobileOccludeMaterial}(UNITY.ScriptComponent));PROJECT.MobileOccludeMaterial=MobileOccludeMaterial})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var MobileShadowMaterial=(function(_super){__extends(MobileShadowMaterial,_super);function MobileShadowMaterial(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.createNewMaterial=true;return _this}MobileShadowMaterial.prototype.awake=function(){if(this.createNewMaterial===true&&this.transform instanceof BABYLON.AbstractMesh){var materialName=this.transform.name.replace(" ","")+".ShadowMaterial";this.transform.material=new BABYLON.ShadowOnlyMaterial(materialName,this.scene)}};MobileShadowMaterial.prototype.destroy=function(){if(this.createNewMaterial===true&&this.transform instanceof BABYLON.AbstractMesh){if(this.transform.material!=null&&this.transform.material instanceof BABYLON.ShadowOnlyMaterial){this.transform.material.dispose()}}};return MobileShadowMaterial}(UNITY.ScriptComponent));PROJECT.MobileShadowMaterial=MobileShadowMaterial})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var BallSocketJoint=(function(_super){__extends(BallSocketJoint,_super);function BallSocketJoint(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.bodyA=null;_this.bodyB=null;_this.pivotA=new BABYLON.Vector3(-0.5,0,-0.5);_this.pivotB=new BABYLON.Vector3(-0.5,0,0.5);_this.axisA=new BABYLON.Vector3(0,1,0);_this.axisB=new BABYLON.Vector3(0,1,0);_this.constraint=null;_this.collisionsEnabled=false;return _this}BallSocketJoint.prototype.awake=function(){var bodyAInfo=this.getProperty("bodyA");var bodyBInfo=this.getProperty("bodyB");if(bodyAInfo!=null&&bodyBInfo!=null){this.bodyA=(this.transform.name===bodyAInfo.name)?this.transform:this.getChildNode(bodyAInfo.name);this.bodyB=this.getChildNode(bodyBInfo.name);if(this.bodyA!=null&&this.bodyB!=null){if(this.bodyA.physicsBody!=null&&this.bodyB.physicsBody!=null){this.constraint=new BABYLON.BallAndSocketConstraint(this.pivotA,this.pivotB,this.axisA,this.axisB,this.scene);this.bodyA.physicsBody.addConstraint(this.bodyB.physicsBody,this.constraint);this.constraint.isCollisionsEnabled=this.collisionsEnabled}}}};BallSocketJoint.prototype.destroy=function(){this.bodyA=null;this.bodyB=null;if(this.constraint!=null){this.constraint.dispose();this.constraint=null}};return BallSocketJoint}(UNITY.ScriptComponent));PROJECT.BallSocketJoint=BallSocketJoint})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var DistanceJoint=(function(_super){__extends(DistanceJoint,_super);function DistanceJoint(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.bodyA=null;_this.bodyB=null;_this.maxDistance=0;_this.constraint=null;_this.collisionsEnabled=false;return _this}DistanceJoint.prototype.awake=function(){var bodyAInfo=this.getProperty("bodyA");var bodyBInfo=this.getProperty("bodyB");if(bodyAInfo!=null&&bodyBInfo!=null){this.bodyA=(this.transform.name===bodyAInfo.name)?this.transform:this.getChildNode(bodyAInfo.name);this.bodyB=this.getChildNode(bodyBInfo.name);if(this.bodyA!=null&&this.bodyB!=null){if(this.bodyA.physicsBody!=null&&this.bodyB.physicsBody!=null){this.constraint=new BABYLON.DistanceConstraint(this.maxDistance,this.scene);this.bodyA.physicsBody.addConstraint(this.bodyB.physicsBody,this.constraint);this.constraint.isCollisionsEnabled=this.collisionsEnabled}}}};DistanceJoint.prototype.destroy=function(){this.bodyA=null;this.bodyB=null;if(this.constraint!=null){this.constraint.dispose();this.constraint=null}};return DistanceJoint}(UNITY.ScriptComponent));PROJECT.DistanceJoint=DistanceJoint})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var FixedHingeJoint=(function(_super){__extends(FixedHingeJoint,_super);function FixedHingeJoint(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.bodyA=null;_this.bodyB=null;_this.pivotA=new BABYLON.Vector3(0,0,-0.5);_this.pivotB=new BABYLON.Vector3(0,0,0.5);_this.constraint=null;_this.collisionsEnabled=false;return _this}FixedHingeJoint.prototype.awake=function(){var bodyAInfo=this.getProperty("bodyA");var bodyBInfo=this.getProperty("bodyB");if(bodyAInfo!=null&&bodyBInfo!=null){this.bodyA=(this.transform.name===bodyAInfo.name)?this.transform:this.getChildNode(bodyAInfo.name);this.bodyB=this.getChildNode(bodyBInfo.name);if(this.bodyA!=null&&this.bodyB!=null){if(this.bodyA.physicsBody!=null&&this.bodyB.physicsBody!=null){this.constraint=new BABYLON.HingeConstraint(this.pivotA,this.pivotB,undefined,undefined,this.scene);this.bodyA.physicsBody.addConstraint(this.bodyB.physicsBody,this.constraint);this.constraint.isCollisionsEnabled=this.collisionsEnabled}}}};FixedHingeJoint.prototype.destroy=function(){this.bodyA=null;this.bodyB=null;if(this.constraint!=null){this.constraint.dispose();this.constraint=null}};return FixedHingeJoint}(UNITY.ScriptComponent));PROJECT.FixedHingeJoint=FixedHingeJoint})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var LockedJoint=(function(_super){__extends(LockedJoint,_super);function LockedJoint(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.bodyA=null;_this.bodyB=null;_this.pivotA=new BABYLON.Vector3(0.5,0.5,-0.5);_this.pivotB=new BABYLON.Vector3(-0.5,-0.5,0.5);_this.axisA=new BABYLON.Vector3(0,1,0);_this.axisB=new BABYLON.Vector3(0,1,0);_this.constraint=null;_this.collisionsEnabled=false;return _this}LockedJoint.prototype.awake=function(){var bodyAInfo=this.getProperty("bodyA");var bodyBInfo=this.getProperty("bodyB");if(bodyAInfo!=null&&bodyBInfo!=null){this.bodyA=(this.transform.name===bodyAInfo.name)?this.transform:this.getChildNode(bodyAInfo.name);this.bodyB=this.getChildNode(bodyBInfo.name);if(this.bodyA!=null&&this.bodyB!=null){if(this.bodyA.physicsBody!=null&&this.bodyB.physicsBody!=null){this.constraint=new BABYLON.LockConstraint(this.pivotA,this.pivotB,this.axisA,this.axisB,this.scene);this.bodyA.physicsBody.addConstraint(this.bodyB.physicsBody,this.constraint);this.constraint.isCollisionsEnabled=this.collisionsEnabled}}}};LockedJoint.prototype.destroy=function(){this.bodyA=null;this.bodyB=null;if(this.constraint!=null){this.constraint.dispose();this.constraint=null}};return LockedJoint}(UNITY.ScriptComponent));PROJECT.LockedJoint=LockedJoint})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var PrismaticJoint=(function(_super){__extends(PrismaticJoint,_super);function PrismaticJoint(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.bodyA=null;_this.bodyB=null;_this.pivotA=new BABYLON.Vector3(0,0,-0.2);_this.pivotB=new BABYLON.Vector3(0,0,0.25);_this.axisA=new BABYLON.Vector3(0,1,0);_this.axisB=new BABYLON.Vector3(0,1,0);_this.constraint=null;_this.collisionsEnabled=false;return _this}PrismaticJoint.prototype.awake=function(){var bodyAInfo=this.getProperty("bodyA");var bodyBInfo=this.getProperty("bodyB");if(bodyAInfo!=null&&bodyBInfo!=null){this.bodyA=(this.transform.name===bodyAInfo.name)?this.transform:this.getChildNode(bodyAInfo.name);this.bodyB=this.getChildNode(bodyBInfo.name);if(this.bodyA!=null&&this.bodyB!=null){if(this.bodyA.physicsBody!=null&&this.bodyB.physicsBody!=null){this.constraint=new BABYLON.PrismaticConstraint(this.pivotA,this.pivotB,this.axisA,this.axisB,this.scene);this.bodyA.physicsBody.addConstraint(this.bodyB.physicsBody,this.constraint);this.constraint.isCollisionsEnabled=this.collisionsEnabled}}}};PrismaticJoint.prototype.destroy=function(){this.bodyA=null;this.bodyB=null;if(this.constraint!=null){this.constraint.dispose();this.constraint=null}};return PrismaticJoint}(UNITY.ScriptComponent));PROJECT.PrismaticJoint=PrismaticJoint})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var SixdofJoint=(function(_super){__extends(SixdofJoint,_super);function SixdofJoint(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.bodyA=null;_this.bodyB=null;_this.pivotA=new BABYLON.Vector3(0,-0.5,0);_this.pivotB=new BABYLON.Vector3(0,0.5,0);_this.perpAxisA=new BABYLON.Vector3(1,0,0);_this.perpAxisB=new BABYLON.Vector3(1,0,0);_this.axisLimits=null;_this.constraint=null;_this.collisionsEnabled=false;return _this}SixdofJoint.prototype.awake=function(){var bodyAInfo=this.getProperty("bodyA");var bodyBInfo=this.getProperty("bodyB");if(bodyAInfo!=null&&bodyBInfo!=null){this.bodyA=(this.transform.name===bodyAInfo.name)?this.transform:this.getChildNode(bodyAInfo.name);this.bodyB=this.getChildNode(bodyBInfo.name);if(this.bodyA!=null&&this.bodyB!=null){if(this.bodyA.physicsBody!=null&&this.bodyB.physicsBody!=null){this.constraint=new BABYLON.Physics6DoFConstraint({pivotA:this.pivotA,pivotB:this.pivotB,perpAxisA:this.perpAxisA,perpAxisB:this.perpAxisB},this.axisLimits,this.scene);this.bodyA.physicsBody.addConstraint(this.bodyB.physicsBody,this.constraint);this.constraint.isCollisionsEnabled=this.collisionsEnabled}}}};SixdofJoint.prototype.destroy=function(){this.bodyA=null;this.bodyB=null;if(this.constraint!=null){this.constraint.dispose();this.constraint=null}};return SixdofJoint}(UNITY.ScriptComponent));PROJECT.SixdofJoint=SixdofJoint})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var SliderJoint=(function(_super){__extends(SliderJoint,_super);function SliderJoint(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.bodyA=null;_this.bodyB=null;_this.pivotA=new BABYLON.Vector3(0,0,-0.2);_this.pivotB=new BABYLON.Vector3(0,0,0.25);_this.axisA=new BABYLON.Vector3(0,1,0);_this.axisB=new BABYLON.Vector3(0,1,0);_this.constraint=null;_this.collisionsEnabled=false;return _this}SliderJoint.prototype.awake=function(){var bodyAInfo=this.getProperty("bodyA");var bodyBInfo=this.getProperty("bodyB");if(bodyAInfo!=null&&bodyBInfo!=null){this.bodyA=(this.transform.name===bodyAInfo.name)?this.transform:this.getChildNode(bodyAInfo.name);this.bodyB=this.getChildNode(bodyBInfo.name);if(this.bodyA!=null&&this.bodyB!=null){if(this.bodyA.physicsBody!=null&&this.bodyB.physicsBody!=null){this.constraint=new BABYLON.SliderConstraint(this.pivotA,this.pivotB,this.axisA,this.axisB,this.scene);this.bodyA.physicsBody.addConstraint(this.bodyB.physicsBody,this.constraint);this.constraint.isCollisionsEnabled=this.collisionsEnabled}}}};SliderJoint.prototype.destroy=function(){this.bodyA=null;this.bodyB=null;if(this.constraint!=null){this.constraint.dispose();this.constraint=null}};return SliderJoint}(UNITY.ScriptComponent));PROJECT.SliderJoint=SliderJoint})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var RemotePlayerController=(function(_super){__extends(RemotePlayerController,_super);function RemotePlayerController(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.updateStateParams=true;_this.smoothMotionTime=0;_this.smoothInputVectors=false;_this.animationState=null;_this.animationStateParams=null;return _this}RemotePlayerController.prototype.awake=function(){this.updateStateParams=this.getProperty("updateStateParams",this.updateStateParams);this.smoothMotionTime=this.getProperty("smoothMotionTime",this.smoothMotionTime);this.smoothInputVectors=this.getProperty("smoothInputVectors",this.smoothInputVectors);this.animationStateParams=this.getProperty("animationStateParams",this.animationStateParams)};RemotePlayerController.prototype.update=function(){var deltaTime=this.getDeltaSeconds();if(this.animationState==null){this.attachAnimationController()}if(UNITY.EntityController.HasNetworkEntity(this.transform)){var direction=UNITY.EntityController.QueryBufferedAttribute(this.transform,0);var magnitude=UNITY.EntityController.QueryBufferedAttribute(this.transform,1);var inputX=UNITY.EntityController.QueryBufferedAttribute(this.transform,2);var inputZ=UNITY.EntityController.QueryBufferedAttribute(this.transform,3);var mouseX=UNITY.EntityController.QueryBufferedAttribute(this.transform,4);var mouseY=UNITY.EntityController.QueryBufferedAttribute(this.transform,5);var vvelocity=UNITY.EntityController.QueryBufferedAttribute(this.transform,6);var movespeed=UNITY.EntityController.QueryBufferedAttribute(this.transform,7);var actionstate=UNITY.EntityController.QueryBufferedAttribute(this.transform,8);var jumpframe=UNITY.EntityController.QueryBufferedAttribute(this.transform,9);var isjumping=UNITY.EntityController.QueryBufferedAttribute(this.transform,10);var isfalling=UNITY.EntityController.QueryBufferedAttribute(this.transform,11);var issliding=UNITY.EntityController.QueryBufferedAttribute(this.transform,12);var isgrounded=UNITY.EntityController.QueryBufferedAttribute(this.transform,13);if(this.animationState!=null&&this.updateStateParams===true){this.validateAnimationStateParams();this.animationState.setInteger(this.animationStateParams.moveDirection,direction);this.animationState.setFloat(this.animationStateParams.heightInput,vvelocity);this.animationState.setBool(this.animationStateParams.jumpFrame,(jumpframe!==0));this.animationState.setBool(this.animationStateParams.jumpState,(isjumping!==0));this.animationState.setInteger(this.animationStateParams.actionState,actionstate);this.animationState.setBool(this.animationStateParams.fallingState,(isfalling!==0));this.animationState.setBool(this.animationStateParams.slidingState,(issliding!==0));this.animationState.setBool(this.animationStateParams.groundedState,(isgrounded!==0));if(this.smoothMotionTime>0){if(this.smoothInputVectors===true){this.animationState.setSmoothFloat(this.animationStateParams.horizontalInput,inputX,this.smoothMotionTime,deltaTime);this.animationState.setSmoothFloat(this.animationStateParams.verticalInput,inputZ,this.smoothMotionTime,deltaTime);this.animationState.setSmoothFloat(this.animationStateParams.mouseXInput,mouseX,this.smoothMotionTime,deltaTime);this.animationState.setSmoothFloat(this.animationStateParams.mouseYInput,mouseY,this.smoothMotionTime,deltaTime)}else{this.animationState.setFloat(this.animationStateParams.horizontalInput,inputX);this.animationState.setFloat(this.animationStateParams.verticalInput,inputZ);this.animationState.setFloat(this.animationStateParams.mouseXInput,mouseX);this.animationState.setFloat(this.animationStateParams.mouseYInput,mouseY)}this.animationState.setSmoothFloat(this.animationStateParams.inputMagnitude,magnitude,this.smoothMotionTime,deltaTime);this.animationState.setSmoothFloat(this.animationStateParams.speedInput,movespeed,this.smoothMotionTime,deltaTime)}else{this.animationState.setFloat(this.animationStateParams.horizontalInput,inputX);this.animationState.setFloat(this.animationStateParams.verticalInput,inputZ);this.animationState.setFloat(this.animationStateParams.mouseXInput,mouseX);this.animationState.setFloat(this.animationStateParams.mouseYInput,mouseY);this.animationState.setFloat(this.animationStateParams.inputMagnitude,magnitude);this.animationState.setFloat(this.animationStateParams.speedInput,movespeed)}}}};RemotePlayerController.prototype.destroy=function(){this.animationState=null;this.animationStateParams=null};RemotePlayerController.prototype.attachAnimationController=function(){var _this=this;if(this.animationState==null){this.animationState=this.getComponent("UNITY.AnimationState");if(this.animationState==null){var animationNode=this.getChildWithScript("UNITY.AnimationState");if(animationNode!=null){this.animationState=UNITY.SceneManager.FindScriptComponent(animationNode,"UNITY.AnimationState")}else{}}}if(this.animationState!=null){this.animationState.onAnimationUpdateObservable.add(function(){if(_this.animationState.ikFrameEnabled()===true){}})}};RemotePlayerController.prototype.validateAnimationStateParams=function(){if(this.animationStateParams==null){this.animationStateParams={moveDirection:"Direction",inputMagnitude:"Magnitude",horizontalInput:"Horizontal",verticalInput:"Vertical",mouseXInput:"MouseX",mouseYInput:"MouseY",heightInput:"Height",speedInput:"Speed",jumpFrame:"Jumped",jumpState:"Jump",actionState:"Action",fallingState:"FreeFall",slidingState:"Sliding",groundedState:"Grounded"}}};return RemotePlayerController}(UNITY.ScriptComponent));PROJECT.RemotePlayerController=RemotePlayerController})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var StandardPlayerController=(function(_super){__extends(StandardPlayerController,_super);function StandardPlayerController(transform,scene,properties){var _this=_super.call(this,transform,scene,properties)||this;_this.enableInput=false;_this.attachCamera=false;_this.rotateCamera=true;_this.mouseWheel=true;_this.toggleView=true;_this.freeLooking=false;_this.requireSprintButton=false;_this.gravitationalForce=3.0;_this.minFallVelocity=1.0;_this.verticalStepSpeed=1.0;_this.minStepUpHeight=0.15;_this.rigidBodyMass=85.0;_this.airbornTimeout=0.5;_this.maxAngle=45;_this.speedFactor=1.0;_this.rootMotion=false;_this.moveSpeed=5.335;_this.walkSpeed=2.0;_this.lookSpeed=2.0;_this.jumpSpeed=10.0;_this.jumpDelay=0.25;_this.eyesHeight=1.55;_this.pivotHeight=1.35;_this.maxDistance=5.0;_this.scrollSpeed=25;_this.topLookLimit=60.0;_this.downLookLimit=30.0;_this.lowTurnSpeed=15.0;_this.highTurnSpeed=25.0;_this.smoothMotionTime=0;_this.smoothInputVectors=false;_this.smoothAcceleration=false;_this.accelerationSpeed=0.1;_this.decelerationSpeed=0.1;_this.avatarSkinTag="Skin";_this.climbVolumeTag="Climb";_this.vaultVolumeTag="Vault";_this.maxHeightRanges=null;_this.useClimbSystem=false;_this.distanceFactor=0.85;_this.cameraSmoothing=8;_this.cameraCollisions=true;_this.inputMagnitude=0;_this.landingEpsilon=0.1;_this.minimumDistance=0.5;_this.movementAllowed=true;_this.playerInputX=0;_this.playerInputZ=0;_this.playerMouseX=0;_this.playerMouseY=0;_this.runKeyRequired=true;_this.buttonRun=BABYLON.Xbox360Button.LeftStick;_this.keyboardRun=UNITY.UserInputKey.Shift;_this.buttonJump=BABYLON.Xbox360Button.A;_this.keyboardJump=UNITY.UserInputKey.SpaceBar;_this.buttonCamera=BABYLON.Xbox360Button.Y;_this.keyboardCamera=UNITY.UserInputKey.P;_this.postNetworkAttributes=false;_this.playerNumber=UNITY.PlayerNumber.One;_this.boomPosition=new BABYLON.Vector3(0,0,0);_this.airbornVelocity=new BABYLON.Vector3(0,0,0);_this.movementVelocity=new BABYLON.Vector3(0,0,0);_this.targetCameraOffset=new BABYLON.Vector3(0,0,0);_this.rayClimbOffset=0.35;_this.rayClimbLength=0.85;_this.canClimbObstaclePredicate=null;_this.rayHeightOffset=5.0;_this.rayHeightLength=6.0;_this.abstractMesh=null;_this.cameraDistance=0;_this.forwardCamera=true;_this.avatarRadius=0.5;_this.groundingObject=null;_this.groundingCallback=null;_this.dollyDirection=new BABYLON.Vector3(0,0,0);_this.cameraEulers=new BABYLON.Vector3(0,0,0);_this.rotationEulers=new BABYLON.Vector3(0,0,0);_this.cameraPivotOffset=new BABYLON.Vector3(0,0,0);_this.cameraForwardVector=new BABYLON.Vector3(0,0,0);_this.cameraRightVector=new BABYLON.Vector3(0,0,0);_this.desiredForwardVector=new BABYLON.Vector3(0,0,0);_this.desiredRightVector=new BABYLON.Vector3(0,0,0);_this.lastRotationQuaternion=new BABYLON.Quaternion(0,0,0,1);_this.scaledCamDirection=new BABYLON.Vector3(0,0,0);_this.scaledMaxDirection=new BABYLON.Vector3(0,0,0);_this.parentNodePosition=new BABYLON.Vector3(0,0,0);_this.maximumCameraPos=new BABYLON.Vector3(0,0,0);_this.tempWorldPosition=new BABYLON.Vector3(0,0,0);_this.cameraRaycastShape=null;_this.defaultRaycastGroup=UNITY.CollisionFilters.DefaultFilter;_this.defaultRaycastMask=UNITY.CollisionFilters.StaticFilter;_this.cameraRaycastMask=(UNITY.CollisionFilters.DefaultFilter|UNITY.CollisionFilters.StaticFilter|UNITY.CollisionFilters.KinematicFilter);_this.avatarSkins=null;_this.cameraNode=null;_this.cameraPivot=null;_this.navigationAgent=null;_this.characterController=null;_this.verticalVelocity=0;_this.movementSpeed=0;_this.isRunPressed=false;_this.isJumpPressed=false;_this.isCharacterSliding=false;_this.isCharacterFalling=false;_this.isCharacterGrounded=false;_this.isCharacterFallTriggered=false;_this.isCharacterJumpFrame=false;_this.isCharacterJumping=false;_this.isCharacterLanding=false;_this.isCharacterRising=false;_this.isCharacterNavigating=false;_this.navigationAngularSpeed=0;_this.updateStateParams=true;_this.animationStateParams=null;_this.sphereCollisionShape=null;_this.hasGroundedContact=false;_this.showDebugRaycasts=false;_this.showDebugColliders=false;_this.colliderVisibility=0;_this.colliderRenderGroup=0;_this.deltaTime=0;_this.minJumpTimer=0;_this.delayJumpTimer=0;_this.playerControl=0;_this.canPlayerJump=true;_this.animationState=null;_this.lastJumpVelocity=new BABYLON.Vector3(0,0,0);_this.inputMovementVector=new BABYLON.Vector3(0,0,0);_this.playerLookRotation=new BABYLON.Vector3(0,0,0);_this.playerRotationVector=BABYLON.Vector2.Zero();_this.playerMovementVelocity=new BABYLON.Vector3(0,0,0);_this.playerRotationQuaternion=BABYLON.Quaternion.Zero();_this.playerMoveDirection=PROJECT.PlayerMoveDirection.Stationary;_this.forwardDirection=new BABYLON.Vector3(0,0,1);_this.downDirection=new BABYLON.Vector3(0,-1,0);_this.climbContact=false;_this.climbContactNode=null;_this.climbContactAngle=0;_this.climbContactPoint=new BABYLON.Vector3(0,0,0);_this.climbContactNormal=new BABYLON.Vector3(0,0,0);_this.climbContactDistance=0;_this.climbSensorLine=null;_this.offsetClimbRaycastPosition=new BABYLON.Vector3(0,0,0);_this.startClimbRaycastPosition=new BABYLON.Vector3(0,0,0);_this.endClimbRaycastPosition=new BABYLON.Vector3(0,0,0);_this.heightContact=false;_this.heightContactNode=null;_this.heightContactAngle=0;_this.heightContactPoint=new BABYLON.Vector3(0,0,0);_this.heightContactNormal=new BABYLON.Vector3(0,0,0);_this.heightContactDistance=0;_this.heightSensorLine=null;_this.offsetHeightRaycastPosition=new BABYLON.Vector3(0,0,0);_this.startHeightRaycastPosition=new BABYLON.Vector3(0,0,0);_this.endHeightRaycastPosition=new BABYLON.Vector3(0,0,0);_this.m_velocityOffset=new BABYLON.Vector3(0,0,0);_this.m_actualVelocity=new BABYLON.Vector3(0,0,0);_this.m_linearVelocity=new BABYLON.Vector3(0,0,0);_this.m_lastPosition=new BABYLON.Vector3(0,0,0);_this.m_positionCenter=new BABYLON.Vector3(0,0,0);_this.m_scaledVelocity=0;_this.playerDrawVelocity=0;_this.onPreUpdateObservable=new BABYLON.Observable;_this.onBeforeMoveObservable=new BABYLON.Observable;_this.onPostUpdateObservable=new BABYLON.Observable;_this.onPlayerInputObservable=new BABYLON.Observable;_this.onPlayerPositionObservable=new BABYLON.Observable;_this.onUpdateActionObservable=new BABYLON.Observable;_this._deltaMotionPosition=new BABYLON.Vector3(0,0,0);_this._deltaMotionRotation=new BABYLON.Quaternion(0,0,0,0);_this.isPerformingAction=false;_this.isRootMotionAction=false;_this.isActionInterruptable=false;_this.afterActionHandler=null;_this.performActionTimer=0;_this.performActionNumber=0;_this.playerRotationSpeed=10;_this.rotatePlayerTowards=false;_this.matchStartTime=0;_this.matchTargetTime=0;_this.matchTargetOffset=0;_this.matchTargetHeight=false;_this.lockTargetHeight=false;_this.lastStartHeight=null;_this.lastTargetHeight=null;_this.lastTargetNormal=new BABYLON.Vector3(0,0,0);_this.lastTargetRotation=new BABYLON.Quaternion(0,0,0,1);_this.lastDeltaPosition=new BABYLON.Vector3(0,0,0);_this.lastDeltaRotation=new BABYLON.Quaternion(0,0,0,1);_this._ikLeftController=null;_this._ikLeftFootTarget=null;_this._ikLeftPoleTarget=null;_this._ikRightController=null;_this._ikRightFootTarget=null;_this._ikRightPoleTarget=null;_this.abstractSkinMesh=null;_this.rootBoneTransform=null;_this.leftFootTransform=null;_this.leftFootPolePos=new BABYLON.Vector3(0,0,0);_this.leftFootBendAxis=new BABYLON.Vector3(1,0,0);_this.leftFootPoleAngle=0;_this.leftFootMaxAngle=180;_this.rightFootTransform=null;_this.rightFootPolePos=new BABYLON.Vector3(0,0,0);_this.rightFootBendAxis=new BABYLON.Vector3(1,0,0);_this.rightFootPoleAngle=0;_this.rightFootMaxAngle=180;_this.smoothBoomArmLength=null;_this.smoothBoomArmSpeed=null;return _this}StandardPlayerController.prototype.isAnimationEnabled=function(){return this.updateStateParams};StandardPlayerController.prototype.isRunButtonPressed=function(){return this.isRunPressed};StandardPlayerController.prototype.isJumpButtonPressed=function(){return this.isJumpPressed};StandardPlayerController.prototype.getPlayerJumped=function(){return this.isCharacterJumpFrame};StandardPlayerController.prototype.getPlayerJumping=function(){return this.isCharacterJumping};StandardPlayerController.prototype.getPlayerFalling=function(){return this.isCharacterFalling};StandardPlayerController.prototype.getPlayerSliding=function(){return this.isCharacterSliding};StandardPlayerController.prototype.getPlayerGrounded=function(){return this.isCharacterGrounded};StandardPlayerController.prototype.getFallTriggered=function(){return this.isCharacterFallTriggered};StandardPlayerController.prototype.getMovementSpeed=function(){return this.movementSpeed};StandardPlayerController.prototype.getCameraBoomNode=function(){return this.cameraNode};StandardPlayerController.prototype.getCameraTransform=function(){return this.cameraPivot};StandardPlayerController.prototype.getAnimationState=function(){return this.animationState};StandardPlayerController.prototype.getVerticalVelocity=function(){return this.getCheckedVerticalVelocity()};StandardPlayerController.prototype.getCharacterController=function(){return this.characterController};StandardPlayerController.prototype.getPlayerLookRotation=function(){return this.playerLookRotation};StandardPlayerController.prototype.getPlayerMoveDirection=function(){return this.playerMoveDirection};StandardPlayerController.prototype.getInputMovementVector=function(){return this.inputMovementVector};StandardPlayerController.prototype.getInputMagnitudeValue=function(){return this.inputMagnitude};StandardPlayerController.prototype.getCameraPivotPosition=function(){return(this.cameraPivot!=null)?this.cameraPivot.position:null};StandardPlayerController.prototype.getCameraPivotRotation=function(){return(this.cameraPivot!=null)?this.cameraPivot.rotationQuaternion:null};StandardPlayerController.prototype.getClimbContact=function(){return this.climbContact};StandardPlayerController.prototype.getClimbContactNode=function(){return this.climbContactNode};StandardPlayerController.prototype.getClimbContactPoint=function(){return this.climbContactPoint};StandardPlayerController.prototype.getClimbContactAngle=function(){return this.climbContactAngle};StandardPlayerController.prototype.getClimbContactNormal=function(){return this.climbContactNormal};StandardPlayerController.prototype.getClimbContactDistance=function(){return this.climbContactDistance};;StandardPlayerController.prototype.getHeightContact=function(){return this.heightContact};StandardPlayerController.prototype.getHeightContactNode=function(){return this.heightContactNode};StandardPlayerController.prototype.getHeightContactPoint=function(){return this.heightContactPoint};StandardPlayerController.prototype.getHeightContactAngle=function(){return this.heightContactAngle};StandardPlayerController.prototype.getHeightContactNormal=function(){return this.heightContactNormal};StandardPlayerController.prototype.getHeightContactDistance=function(){return this.heightContactDistance};;StandardPlayerController.prototype.awake=function(){this.awakePlayerController()};StandardPlayerController.prototype.start=function(){this.startPlayerController()};StandardPlayerController.prototype.after=function(){this.afterPlayerController()};StandardPlayerController.prototype.update=function(){this.updatePlayerController()};StandardPlayerController.prototype.destroy=function(){this.destroyPlayerController()};StandardPlayerController.prototype.getDeltaMotionPosition=function(){this._deltaMotionPosition.set(0,0,0);if(this.animationState!=null){var rootMotionPosition=this.animationState.getDeltaRootMotionPosition();if(rootMotionPosition!=null){this._deltaMotionPosition.copyFrom(rootMotionPosition)}}return this._deltaMotionPosition};StandardPlayerController.prototype.getDeltaMotionRotation=function(){this._deltaMotionRotation.set(0,0,0,0);if(this.animationState!=null){var rootMotionRotation=this.animationState.getDeltaRootMotionRotation();if(rootMotionRotation!=null){this._deltaMotionRotation.copyFrom(rootMotionRotation)}}return this._deltaMotionRotation};StandardPlayerController.prototype.getIsPerformingAction=function(){return this.isPerformingAction};StandardPlayerController.prototype.getIsRootMotionAction=function(){return this.isRootMotionAction};StandardPlayerController.prototype.getIsActionInterruptable=function(){return this.isActionInterruptable};StandardPlayerController.prototype.playActionAnimation=function(action,interruptableAction,enableRootMotion,afterActionComplete){if(interruptableAction===void 0){interruptableAction=true}if(enableRootMotion===void 0){enableRootMotion=false}if(afterActionComplete===void 0){afterActionComplete=null}if(this.isPerformingAction===false&&this.animationState!=null&&action>=0){this.isPerformingAction=true;this.performActionTimer=0;this.performActionNumber=action;this.afterActionHandler=afterActionComplete;this.isActionInterruptable=interruptableAction;this.isRootMotionAction=enableRootMotion;this.playerRotationSpeed=10;this.rotatePlayerTowards=false;this.matchStartTime=0;this.matchTargetTime=0;this.matchTargetOffset=0;this.matchTargetHeight=false;this.lockTargetHeight=false;this.lastStartHeight=null;this.lastTargetHeight=null;this.lastTargetNormal.set(0,0,0);this.lastTargetRotation.set(0,0,0,1);if(this.isRootMotionAction===true){this.enableCharacterController(false)}if(this.animationState!=null){this.animationState.resetSmoothProperty(PROJECT.ThirdPersonPlayerController.PLAYER_HEIGHT)}}};StandardPlayerController.prototype.resetActionAnimationState=function(){if(this.afterActionHandler!=null){try{this.afterActionHandler()}catch(_a){}}if(this.isRootMotionAction===true){this.enableCharacterController(true)}if(this.animationState!=null){this.animationState.resetSmoothProperty(PROJECT.ThirdPersonPlayerController.PLAYER_HEIGHT)}this.performActionTimer=0;this.performActionNumber=0;this.isPerformingAction=false;this.isRootMotionAction=false;this.isActionInterruptable=false;this.afterActionHandler=null;this.playerRotationSpeed=10;this.rotatePlayerTowards=false;this.matchStartTime=0;this.matchTargetTime=0;this.matchTargetOffset=0;this.matchTargetHeight=false;this.lockTargetHeight=false;this.lastStartHeight=null;this.lastTargetHeight=null;this.lastTargetNormal.set(0,0,0);this.lastTargetRotation.set(0,0,0,1)};StandardPlayerController.prototype.updateAnimationActionState=function(){var deltaTime=this.getDeltaSeconds();var dampTime=(this.matchTargetTime-this.matchStartTime);if(this.animationState!=null&&this.isRootMotionAction===true){var playerGlobalHeight=this.transform.absolutePosition.y;this.lastDeltaPosition.copyFrom(this.getDeltaMotionPosition());BABYLON.Vector3.TransformNormalToRef(this.lastDeltaPosition,this.transform.getWorldMatrix(),this.lastDeltaPosition);if(this.matchTargetHeight===true){if(this.lastStartHeight==null&&this.performActionTimer>=this.matchStartTime){this.lastStartHeight=playerGlobalHeight;this.animationState.resetSmoothProperty(PROJECT.ThirdPersonPlayerController.PLAYER_HEIGHT)}if(this.lastStartHeight!=null&&this.lastTargetHeight!=null){this.lastDeltaPosition.y=0;var fixedTargetHeight=(this.lastTargetHeight+this.matchTargetOffset);if(this.performActionTimer<this.matchTargetTime){this.animationState.setSmoothFloat(PROJECT.ThirdPersonPlayerController.PLAYER_HEIGHT,fixedTargetHeight,dampTime,deltaTime);var smoothPlayerHeight=this.animationState.getFloat(PROJECT.ThirdPersonPlayerController.PLAYER_HEIGHT);this.lastDeltaPosition.y=(smoothPlayerHeight-playerGlobalHeight)}else if(this.lockTargetHeight===false&&this.performActionTimer>=this.matchTargetTime){this.lastDeltaPosition.y=(fixedTargetHeight-playerGlobalHeight);this.lockTargetHeight=true}}}this.transform.position.addInPlace(this.lastDeltaPosition);if(this.rotatePlayerTowards===true){if(this.climbContact===true){this.lastTargetNormal.set(-this.climbContactNormal.x,-this.climbContactNormal.y,-this.climbContactNormal.z);UNITY.Utilities.LookRotationToRef(this.lastTargetNormal,this.lastTargetRotation);var lerpAmount=BABYLON.Scalar.Clamp(this.playerRotationSpeed*deltaTime);BABYLON.Quaternion.SlerpToRef(this.transform.rotationQuaternion,this.lastTargetRotation,lerpAmount,this.transform.rotationQuaternion)}}else{this.lastDeltaRotation.copyFrom(this.getDeltaMotionRotation());this.transform.rotationQuaternion.multiplyInPlace(this.lastDeltaRotation)}}this.performActionTimer+=deltaTime};StandardPlayerController.prototype.setWorldPosition=function(x,y,z){if(this.characterController!=null){this.characterController.set(x,y,z)}};StandardPlayerController.prototype.setPlayerControl=function(mode){this.playerControl=mode;if(this.playerControl===PROJECT.PlayerInputControl.ThirdPersonStrafing){this.showAvatarSkins(true)}else{this.showAvatarSkins(false)}this.forwardCamera=false};StandardPlayerController.prototype.togglePlayerControl=function(){if(this.toggleView===true){if(this.playerControl===PROJECT.PlayerInputControl.FirstPersonStrafing){this.setPlayerControl(PROJECT.PlayerInputControl.ThirdPersonStrafing)}else{this.setPlayerControl(PROJECT.PlayerInputControl.FirstPersonStrafing)}}};StandardPlayerController.prototype.showAvatarSkins=function(show){if(this.avatarSkins!=null){this.avatarSkins.forEach(function(skin){skin.isVisible=show})}};StandardPlayerController.prototype.attachPlayerCamera=function(player){if(this.cameraNode==null){var playerCamera=(player<=0||player>4)?1:player;this.cameraNode=PROJECT.DefaultCameraSystem.GetCameraTransform(this.scene,playerCamera);if(this.cameraNode!=null){this.cameraNode.parent=this.cameraPivot;this.cameraNode.position.copyFrom(this.boomPosition);this.cameraNode.rotationQuaternion=new BABYLON.Quaternion(0,0,0,1);this.cameraDistance=this.cameraNode.position.length();this.dollyDirection.copyFrom(this.cameraNode.position);this.dollyDirection.normalize()}else{}}};StandardPlayerController.prototype.getLeftFootTarget=function(){return this._ikLeftFootTarget};StandardPlayerController.prototype.getRightFootTarget=function(){return this._ikRightFootTarget};StandardPlayerController.prototype.getLeftFootController=function(){return this._ikLeftController};StandardPlayerController.prototype.getRightFootController=function(){return this._ikRightController};StandardPlayerController.prototype.attachBoneControllers=function(){var displayHandles=this.getProperty("displayHandles");var abstractSkinMeshData=this.getProperty("abstractSkinMesh");if(abstractSkinMeshData!=null)this.abstractSkinMesh=this.getChildNode(abstractSkinMeshData.name,UNITY.SearchType.ExactMatch,false);var rootBoneTransformData=this.getProperty("rootBoneTransform");if(rootBoneTransformData!=null)this.rootBoneTransform=this.getChildNode(rootBoneTransformData.name,UNITY.SearchType.ExactMatch,false);var leftFootTransformData=this.getProperty("leftFootTransform");if(leftFootTransformData!=null)this.leftFootTransform=this.getChildNode(leftFootTransformData.name,UNITY.SearchType.ExactMatch,false);var leftPoleHandleData=this.getProperty("leftFootPolePos");if(leftPoleHandleData!=null)this.leftFootPolePos.copyFrom(UNITY.Utilities.ParseVector3(leftPoleHandleData));var leftBendAxisData=this.getProperty("leftFootBendAxis");if(leftBendAxisData!=null)this.leftFootBendAxis.copyFrom(UNITY.Utilities.ParseVector3(leftBendAxisData));this.leftFootPoleAngle=this.getProperty("leftFootPoleAngle",this.leftFootPoleAngle);this.leftFootMaxAngle=this.getProperty("leftFootMaxAngle",this.leftFootMaxAngle);var rightFootTransformData=this.getProperty("rightFootTransform");if(rightFootTransformData!=null)this.rightFootTransform=this.getChildNode(rightFootTransformData.name,UNITY.SearchType.ExactMatch,false);var rightPoleHandleData=this.getProperty("rightFootPolePos");if(rightPoleHandleData!=null)this.rightFootPolePos.copyFrom(UNITY.Utilities.ParseVector3(rightPoleHandleData));var rightBendAxisData=this.getProperty("rightFootBendAxis");if(rightBendAxisData!=null)this.rightFootBendAxis.copyFrom(UNITY.Utilities.ParseVector3(rightBendAxisData));this.rightFootPoleAngle=this.getProperty("rightFootPoleAngle",this.rightFootPoleAngle);this.rightFootMaxAngle=this.getProperty("rightFootMaxAngle",this.rightFootMaxAngle);if(this.abstractSkinMesh!=null){var materialName="M_TARGET_MESH";var targetMaterial=this.scene.getMaterialByName(materialName);if(targetMaterial==null){targetMaterial=new BABYLON.StandardMaterial("M_TARGET_MESH",this.scene);targetMaterial.diffuseColor=new BABYLON.Color3(1.0,0.5,0.25)}if(this.leftFootTransform!=null&&this.leftFootTransform._linkedBone!=null){this._ikLeftFootTarget=BABYLON.MeshBuilder.CreateBox(this.transform.name+".LeftFootTarget",{width:0.1,height:0.1,depth:0.1},this.scene);this._ikLeftFootTarget.parent=this.abstractSkinMesh;if(this._ikLeftFootTarget instanceof BABYLON.AbstractMesh){this._ikLeftFootTarget.material=targetMaterial;this._ikLeftFootTarget.isVisible=displayHandles}this._ikLeftPoleTarget=BABYLON.MeshBuilder.CreateSphere(this.transform.name+".LeftFootPole",{diameter:0.15},this.scene);this._ikLeftPoleTarget.parent=this.abstractSkinMesh;this._ikLeftPoleTarget.position.copyFrom(this.leftFootPolePos);if(this._ikLeftPoleTarget instanceof BABYLON.AbstractMesh){this._ikLeftPoleTarget.isVisible=displayHandles}}if(this.rightFootTransform!=null&&this.rightFootTransform._linkedBone!=null){this._ikRightFootTarget=BABYLON.MeshBuilder.CreateBox(this.transform.name+".RightFootTarget",{width:0.1,height:0.1,depth:0.1},this.scene);this._ikRightFootTarget.parent=this.abstractSkinMesh;if(this._ikRightFootTarget instanceof BABYLON.AbstractMesh){this._ikRightFootTarget.material=targetMaterial;this._ikRightFootTarget.isVisible=displayHandles}this._ikRightPoleTarget=BABYLON.MeshBuilder.CreateSphere(this.transform.name+".RightFootPole",{diameter:0.15},this.scene);this._ikRightPoleTarget.parent=this.abstractSkinMesh;this._ikRightPoleTarget.position.copyFrom(this.rightFootPolePos);if(this._ikRightPoleTarget instanceof BABYLON.AbstractMesh){this._ikRightPoleTarget.isVisible=displayHandles}}}};StandardPlayerController.prototype.attachAnimationController=function(){var _this=this;if(this.animationState==null){this.animationState=this.getComponent("UNITY.AnimationState",true)}if(this.animationState!=null){this.animationState.onAnimationEndObservable.add(function(){if(_this.isPerformingAction===true){_this.resetActionAnimationState()}});this.animationState.onAnimationUpdateObservable.add(function(){if(_this.animationState.ikFrameEnabled()===true){if(_this._ikLeftController!=null){_this._ikLeftController.update()}if(_this._ikRightController!=null){_this._ikRightController.update()}}})}};StandardPlayerController.prototype.enableCharacterController=function(state){if(state===true){this.movementAllowed=true;this.resetPlayerJumpingState();if(this.characterController!=null){this.characterController.setGravityFactor(this.gravitationalForce);this.characterController.setCollisionState(true)}}else{this.movementAllowed=false;this.resetPlayerJumpingState();if(this.characterController!=null){this.characterController.setGravityFactor(0);this.characterController.setCollisionState(false)}}};StandardPlayerController.prototype.resetPlayerRotation=function(){this.transform.rotationQuaternion.toEulerAnglesToRef(this.rotationEulers);this.playerRotationVector.x=this.rotationEulers.x;this.playerRotationVector.y=this.rotationEulers.y};StandardPlayerController.prototype.resetPlayerJumpingState=function(){this.minJumpTimer=0;this.isCharacterJumping=false;this.isCharacterLanding=false;this.isCharacterRising=false;this.isCharacterJumpFrame=false;if(this.characterController!=null){this.characterController.jump(0)}};StandardPlayerController.prototype.awakePlayerController=function(){var _this=this;this.gravitationalForce=this.getProperty("gravityMultiplier",this.gravitationalForce);this.verticalStepSpeed=this.getProperty("stepUpVelocity",this.verticalStepSpeed);this.minStepUpHeight=this.getProperty("minStepHeight",this.minStepUpHeight);this.rigidBodyMass=this.getProperty("rigidBodyMass",this.rigidBodyMass);this.rotateCamera=this.getProperty("rotateCamera",this.rotateCamera);this.mouseWheel=this.getProperty("mouseWheel",this.mouseWheel);this.rayClimbLength=this.getProperty("rayClimbLength",this.rayClimbLength);this.rayClimbOffset=this.getProperty("rayClimbOffset",this.rayClimbOffset);this.rayHeightLength=this.getProperty("rayHeightLength",this.rayHeightLength);this.rayHeightOffset=this.getProperty("rayHeightOffset",this.rayHeightOffset);this.maxAngle=this.getProperty("maxAngle",this.maxAngle);this.landingEpsilon=this.getProperty("landingEpsilon",this.landingEpsilon);this.minFallVelocity=this.getProperty("minFallVelocity",this.minFallVelocity);this.airbornTimeout=this.getProperty("airbornTimeout",this.airbornTimeout);this.rootMotion=this.getProperty("rootMotion",this.rootMotion);this.moveSpeed=this.getProperty("moveSpeed",this.moveSpeed);this.walkSpeed=this.getProperty("walkSpeed",this.walkSpeed);this.lookSpeed=this.getProperty("lookSpeed",this.lookSpeed);this.jumpSpeed=this.getProperty("jumpSpeed",this.jumpSpeed);this.jumpDelay=this.getProperty("jumpDelay",this.jumpDelay);this.eyesHeight=this.getProperty("eyesHeight",this.eyesHeight);this.pivotHeight=this.getProperty("pivotHeight",this.pivotHeight);this.maxDistance=this.getProperty("maxDistance",this.maxDistance);this.scrollSpeed=this.getProperty("scrollSpeed",this.scrollSpeed);this.topLookLimit=this.getProperty("topLookLimit",this.topLookLimit);this.downLookLimit=this.getProperty("downLookLimit",this.downLookLimit);this.lowTurnSpeed=this.getProperty("lowTurnSpeed",this.lowTurnSpeed);this.highTurnSpeed=this.getProperty("highTurnSpeed",this.highTurnSpeed);this.enableInput=this.getProperty("enableInput",this.enableInput);this.playerNumber=this.getProperty("playerNumber",this.playerNumber);this.attachCamera=this.getProperty("attachCamera",this.attachCamera);this.freeLooking=this.getProperty("freeLooking",this.freeLooking);this.toggleView=this.getProperty("toggleView",this.toggleView);this.avatarSkinTag=this.getProperty("avatarSkinTag",this.avatarSkinTag);this.runKeyRequired=this.getProperty("runKeyRequired",this.runKeyRequired);this.cameraCollisions=this.getProperty("cameraCollisions",this.cameraCollisions);this.cameraSmoothing=this.getProperty("cameraSmoothing",this.cameraSmoothing);this.distanceFactor=this.getProperty("distanceFactor",this.distanceFactor);this.minimumDistance=this.getProperty("minimumDistance",this.minimumDistance);this.smoothMotionTime=this.getProperty("smoothMotionTime",this.smoothMotionTime);this.smoothInputVectors=this.getProperty("smoothInputVectors",this.smoothInputVectors);this.smoothAcceleration=this.getProperty("smoothAcceleration",this.smoothAcceleration);this.accelerationSpeed=this.getProperty("accelerationSpeed",this.accelerationSpeed);this.decelerationSpeed=this.getProperty("decelerationSpeed",this.decelerationSpeed);this.climbVolumeTag=this.getProperty("climbVolumeTag",this.climbVolumeTag);this.vaultVolumeTag=this.getProperty("vaultVolumeTag",this.vaultVolumeTag);this.useClimbSystem=this.getProperty("useClimbSystem",this.useClimbSystem);this.maxHeightRanges=this.getProperty("maxHeightRanges",this.maxHeightRanges);this.updateStateParams=this.getProperty("updateStateParams",this.updateStateParams);this.animationStateParams=this.getProperty("animationStateParams",this.animationStateParams);this.postNetworkAttributes=this.getProperty("postNetworkAttribs",this.postNetworkAttributes);this.showDebugRaycasts=this.getProperty("showDebugRaycasts",this.showDebugRaycasts);var arrowKeyRotation=this.getProperty("arrowKeyRotation");if(arrowKeyRotation===true)UNITY.UserInputOptions.UseArrowKeyRotation=true;var boomPositionData=this.getProperty("boomPosition");if(boomPositionData!=null)this.boomPosition=UNITY.Utilities.ParseVector3(boomPositionData);var sphereRadius=this.getProperty("sphereRadius",0.65);this.cameraRaycastShape=new BABYLON.PhysicsShapeSphere(new BABYLON.Vector3(0,0,0),sphereRadius,this.scene);this.abstractMesh=this.getAbstractMesh();this.showDebugColliders=UNITY.Utilities.ShowDebugColliders();this.colliderVisibility=UNITY.Utilities.ColliderVisibility();this.colliderRenderGroup=UNITY.Utilities.ColliderRenderGroup();if(this.avatarSkinTag!=null&&this.avatarSkinTag!==""){this.avatarSkins=this.getChildrenWithTags(this.avatarSkinTag,false)}var pcontrol=this.getProperty("playerControl",this.playerControl);this.setPlayerControl(pcontrol);this.resetPlayerRotation();this.cameraPivot=new BABYLON.Mesh(this.transform.name+".CameraPivot",this.scene);this.cameraPivot.parent=null;this.cameraPivot.position=this.transform.position.clone();this.cameraPivot.rotationQuaternion=this.transform.rotationQuaternion.clone();this.cameraPivot.checkCollisions=false;this.cameraPivot.isPickable=false;if(this.showDebugColliders===true){var testPivot=BABYLON.MeshBuilder.CreateBox("TestPivot",{width:0.25,height:0.25,depth:0.5},this.scene);testPivot.parent=this.cameraPivot;testPivot.position.set(0,0,0);testPivot.rotationQuaternion=new BABYLON.Quaternion(0,0,0,1);testPivot.visibility=0.5;testPivot.renderingGroupId=this.colliderRenderGroup;testPivot.checkCollisions=false;testPivot.isPickable=false}var configController=this.getComponent("UNITY.CharacterController");this.attachBoneControllers();UNITY.InputController.OnKeyboardPress(this.keyboardCamera,function(){_this.togglePlayerControl()});UNITY.InputController.OnGamepadButtonPress(this.buttonCamera,function(){_this.togglePlayerControl()})};StandardPlayerController.prototype.startPlayerController=function(){var _this=this;if(this.attachCamera===true){this.attachPlayerCamera(this.playerNumber)}this.navigationAgent=this.getComponent("UNITY.NavigationAgent");this.characterController=this.getComponent("UNITY.CharacterController");if(this.characterController!=null){this.avatarRadius=this.characterController.getAvatarRadius();this.characterController.showRaycasts=this.showDebugRaycasts;this.characterController.setRigidBodyMass(this.rigidBodyMass);this.characterController.setGravityFactor(this.gravitationalForce);this.characterController.setVerticalStepSpeed(this.verticalStepSpeed);this.characterController.setMinimumStepHeight(this.minStepUpHeight);this.characterController.onUpdatePositionObservable.add(function(){_this.updatePlayerPosition();_this.updateCameraController()});UNITY.SceneManager.LogWarning("Starting player controller in physic engine mode for: "+this.transform.name)}else{UNITY.SceneManager.LogWarning("No character controller found for: "+this.transform.name)}};StandardPlayerController.prototype.updatePlayerPosition=function(){if(this.onPlayerPositionObservable&&this.onPlayerPositionObservable.hasObservers()){this.onPlayerPositionObservable.notifyObservers(this.transform)}};StandardPlayerController.prototype.updatePlayerController=function(){this.deltaTime=this.getDeltaSeconds();this.m_actualVelocity=this.transform.absolutePosition.subtract(this.m_lastPosition);this.m_linearVelocity.copyFrom(this.m_actualVelocity);this.m_scaledVelocity=(this.m_linearVelocity.length()/this.deltaTime);this.m_linearVelocity.normalize();this.m_linearVelocity.scaleInPlace(this.m_scaledVelocity);if(this.playerDrawVelocity>0){this.m_velocityOffset.copyFrom(this.m_linearVelocity);this.m_velocityOffset.scaleInPlace(this.playerDrawVelocity)}else{this.m_velocityOffset.set(0,0,0)}this.m_lastPosition.copyFrom(this.transform.absolutePosition);if(this.updateStateParams===true&&this.animationState==null){this.attachAnimationController()}if(this.minJumpTimer>0){this.minJumpTimer-=this.deltaTime;if(this.minJumpTimer<0)this.minJumpTimer=0}if(this.isCharacterGrounded===true&&this.delayJumpTimer>0){this.delayJumpTimer-=this.deltaTime;if(this.delayJumpTimer<0)this.delayJumpTimer=0}this.canPlayerJump=true;if(this.isPerformingAction===true){this.updateAnimationActionState();if(this.onUpdateActionObservable&&this.onUpdateActionObservable.hasObservers()){this.onUpdateActionObservable.notifyObservers(this.transform)}}if(this.enableInput===false)return;var userInputX=UNITY.InputController.GetUserInput(UNITY.UserInputAxis.Horizontal,this.playerNumber);var userInputZ=UNITY.InputController.GetUserInput(UNITY.UserInputAxis.Vertical,this.playerNumber);var userMouseX=UNITY.InputController.GetUserInput(UNITY.UserInputAxis.MouseX,this.playerNumber);var userMouseY=UNITY.InputController.GetUserInput(UNITY.UserInputAxis.MouseY,this.playerNumber);if(this.smoothAcceleration===true){if(userInputX>0){this.playerInputX+=(this.accelerationSpeed*this.deltaTime);if(this.playerInputX>1)this.playerInputX=1}else if(userInputX<0){this.playerInputX-=(this.accelerationSpeed*this.deltaTime);if(this.playerInputX<-1)this.playerInputX=-1}else{if(this.playerInputX<0){this.playerInputX+=(this.decelerationSpeed*this.deltaTime);if(this.playerInputX>0)this.playerInputX=0}else if(this.playerInputX>0){this.playerInputX-=(this.decelerationSpeed*this.deltaTime);if(this.playerInputX<0)this.playerInputX=0}}if(userInputZ>0){this.playerInputZ+=(this.accelerationSpeed*this.deltaTime);if(this.playerInputZ>1)this.playerInputZ=1}else if(userInputZ<0){this.playerInputZ-=(this.accelerationSpeed*this.deltaTime);if(this.playerInputZ<-1)this.playerInputZ=-1}else{if(this.playerInputZ<0){this.playerInputZ+=(this.decelerationSpeed*this.deltaTime);if(this.playerInputZ>0)this.playerInputZ=0}else if(this.playerInputZ>0){this.playerInputZ-=(this.decelerationSpeed*this.deltaTime);if(this.playerInputZ<0)this.playerInputZ=0}}}else{this.playerInputX=userInputX;this.playerInputZ=userInputZ}this.playerMouseX=userMouseX;this.playerMouseY=userMouseY;if(this.isPerformingAction===true&&this.isActionInterruptable===true){if(this.playerInputX!==0||this.playerInputZ!==0){this.resetActionAnimationState()}}if(this.isPerformingAction===true){this.canPlayerJump=false;this.playerInputX=0;this.playerInputZ=0}if(this.onPlayerInputObservable&&this.onPlayerInputObservable.hasObservers()){this.onPlayerInputObservable.notifyObservers(this.transform)}this.inputMovementVector.set(this.playerInputX,0,this.playerInputZ);if(this.inputMovementVector.length()>1.0)this.inputMovementVector.normalize();this.inputMagnitude=this.inputMovementVector.length();var moveForward=(this.playerInputZ>0);var moveBackward=(this.playerInputZ<0);var moveRight=(this.playerInputX>0);var moveLeft=(this.playerInputX<0);if(moveForward===true){if(moveLeft===true){this.playerMoveDirection=PROJECT.PlayerMoveDirection.ForwardLeft}else if(moveRight===true){this.playerMoveDirection=PROJECT.PlayerMoveDirection.ForwardRight}else{this.playerMoveDirection=PROJECT.PlayerMoveDirection.Forward}}else if(moveBackward===true){if(moveLeft===true){this.playerMoveDirection=PROJECT.PlayerMoveDirection.BackwardLeft}else if(moveRight===true){this.playerMoveDirection=PROJECT.PlayerMoveDirection.BackwardRight}else{this.playerMoveDirection=PROJECT.PlayerMoveDirection.Backward}}else if(moveLeft===true){this.playerMoveDirection=PROJECT.PlayerMoveDirection.StrafingLeft}else if(moveRight===true){this.playerMoveDirection=PROJECT.PlayerMoveDirection.StrafingRight}else{this.playerMoveDirection=PROJECT.PlayerMoveDirection.Stationary}if(this.onPreUpdateObservable&&this.onPreUpdateObservable.hasObservers()){this.onPreUpdateObservable.notifyObservers(this.transform)}this.cameraForwardVector=this.scene.activeCamera.getForwardRay().direction;this.cameraForwardVector.y=0;this.cameraForwardVector.normalize();this.cameraForwardVector.scaleToRef(this.playerInputZ,this.desiredForwardVector);this.cameraRightVector=BABYLON.Vector3.Cross(this.cameraForwardVector,BABYLON.Vector3.Up());this.cameraRightVector.y=0;this.cameraRightVector.normalize();this.cameraRightVector.scaleToRef(this.playerInputX,this.desiredRightVector);this.playerRotationVector.y+=(this.playerMouseX*this.lookSpeed*this.deltaTime);this.playerRotationVector.x+=(-this.playerMouseY*this.lookSpeed*this.deltaTime);this.playerRotationVector.x=BABYLON.Scalar.Clamp(this.playerRotationVector.x,-BABYLON.Tools.ToRadians(this.downLookLimit),BABYLON.Tools.ToRadians(this.topLookLimit));if(this.movementAllowed===false){this.canPlayerJump=false;this.playerInputX=0;this.playerInputZ=0}this.isRunPressed=(UNITY.InputController.GetKeyboardInput(this.keyboardRun)||UNITY.InputController.GetGamepadButtonInput(this.buttonRun));this.isJumpPressed=(UNITY.InputController.GetKeyboardInput(this.keyboardJump)||UNITY.InputController.GetGamepadButtonInput(this.buttonJump));this.movementSpeed=(this.inputMagnitude*this.moveSpeed*this.speedFactor);if(this.runKeyRequired===true&&this.isRunPressed===false){this.movementSpeed=BABYLON.Scalar.Clamp(this.movementSpeed,0,this.walkSpeed)}this.desiredForwardVector.addToRef(this.desiredRightVector,this.playerMovementVelocity);this.playerMovementVelocity.scaleInPlace(this.movementSpeed);if(this.movementAllowed===true){if(this.playerControl===PROJECT.PlayerInputControl.FirstPersonStrafing){BABYLON.Quaternion.FromEulerAnglesToRef(0,this.playerRotationVector.y,0,this.transform.rotationQuaternion)}else if(this.playerControl===PROJECT.PlayerInputControl.ThirdPersonStrafing){if(this.freeLooking===true){if(this.inputMagnitude>0){var strafingTurnRatio=(this.playerMovementVelocity.length()/this.moveSpeed);var strafingTurnSpeed=BABYLON.Scalar.Lerp(this.highTurnSpeed,this.lowTurnSpeed,strafingTurnRatio);BABYLON.Quaternion.FromEulerAnglesToRef(0,this.playerRotationVector.y,0,this.playerRotationQuaternion);BABYLON.Quaternion.SlerpToRef(this.transform.rotationQuaternion,this.playerRotationQuaternion,(strafingTurnSpeed*this.deltaTime),this.transform.rotationQuaternion)}}else{BABYLON.Quaternion.FromEulerAnglesToRef(0,this.playerRotationVector.y,0,this.transform.rotationQuaternion)}}}this.verticalVelocity=this.getVerticalVelocity();this.movementVelocity.copyFrom(this.playerMovementVelocity);this.hasGroundedContact=false;this.isCharacterGrounded=false;this.isCharacterSliding=false;this.isCharacterFalling=false;this.isCharacterJumpFrame=false;this.isCharacterNavigating=(this.navigationAgent!=null&&this.navigationAgent.isNavigating());this.navigationAngularSpeed=(this.navigationAgent!=null)?this.navigationAgent.angularSpeed:0;this.updateCharacterController();if(this.animationState!=null&&this.updateStateParams===true){this.validateAnimationStateParams();this.animationState.setInteger(this.animationStateParams.moveDirection,this.playerMoveDirection);this.animationState.setFloat(this.animationStateParams.heightInput,this.verticalVelocity);this.animationState.setBool(this.animationStateParams.jumpFrame,this.isCharacterJumpFrame);this.animationState.setBool(this.animationStateParams.jumpState,this.isCharacterJumping);this.animationState.setInteger(this.animationStateParams.actionState,this.performActionNumber);this.animationState.setBool(this.animationStateParams.fallingState,this.isCharacterFalling);this.animationState.setBool(this.animationStateParams.slidingState,this.isCharacterSliding);this.animationState.setBool(this.animationStateParams.groundedState,this.isCharacterGrounded);if(this.smoothMotionTime>0){if(this.smoothInputVectors===true){this.animationState.setSmoothFloat(this.animationStateParams.horizontalInput,this.playerInputX,this.smoothMotionTime,this.deltaTime);this.animationState.setSmoothFloat(this.animationStateParams.verticalInput,this.playerInputZ,this.smoothMotionTime,this.deltaTime);this.animationState.setSmoothFloat(this.animationStateParams.mouseXInput,this.playerMouseX,this.smoothMotionTime,this.deltaTime);this.animationState.setSmoothFloat(this.animationStateParams.mouseYInput,this.playerMouseY,this.smoothMotionTime,this.deltaTime)}else{this.animationState.setFloat(this.animationStateParams.horizontalInput,this.playerInputX);this.animationState.setFloat(this.animationStateParams.verticalInput,this.playerInputZ);this.animationState.setFloat(this.animationStateParams.mouseXInput,this.playerMouseX);this.animationState.setFloat(this.animationStateParams.mouseYInput,this.playerMouseY)}this.animationState.setSmoothFloat(this.animationStateParams.inputMagnitude,this.inputMagnitude,this.smoothMotionTime,this.deltaTime);this.animationState.setSmoothFloat(this.animationStateParams.speedInput,this.movementSpeed,this.smoothMotionTime,this.deltaTime)}else{this.animationState.setFloat(this.animationStateParams.horizontalInput,this.playerInputX);this.animationState.setFloat(this.animationStateParams.verticalInput,this.playerInputZ);this.animationState.setFloat(this.animationStateParams.mouseXInput,this.playerMouseX);this.animationState.setFloat(this.animationStateParams.mouseYInput,this.playerMouseY);this.animationState.setFloat(this.animationStateParams.inputMagnitude,this.inputMagnitude);this.animationState.setFloat(this.animationStateParams.speedInput,this.movementSpeed)}if(this.isCharacterNavigating===true){}}if(this.postNetworkAttributes==true&&UNITY.EntityController.HasNetworkEntity(this.transform)){UNITY.EntityController.PostBufferedAttribute(this.transform,0,this.playerMoveDirection);UNITY.EntityController.PostBufferedAttribute(this.transform,1,this.inputMagnitude);UNITY.EntityController.PostBufferedAttribute(this.transform,2,this.playerInputX);UNITY.EntityController.PostBufferedAttribute(this.transform,3,this.playerInputZ);UNITY.EntityController.PostBufferedAttribute(this.transform,4,this.playerMouseX);UNITY.EntityController.PostBufferedAttribute(this.transform,5,this.playerMouseY);UNITY.EntityController.PostBufferedAttribute(this.transform,6,this.verticalVelocity);UNITY.EntityController.PostBufferedAttribute(this.transform,7,this.movementSpeed);UNITY.EntityController.PostBufferedAttribute(this.transform,8,this.performActionNumber);UNITY.EntityController.PostBufferedAttribute(this.transform,9,((this.isCharacterJumpFrame)?1:0));UNITY.EntityController.PostBufferedAttribute(this.transform,10,((this.isCharacterJumping)?1:0));UNITY.EntityController.PostBufferedAttribute(this.transform,11,((this.isCharacterFalling)?1:0));UNITY.EntityController.PostBufferedAttribute(this.transform,12,((this.isCharacterSliding)?1:0));UNITY.EntityController.PostBufferedAttribute(this.transform,13,((this.isCharacterGrounded)?1:0))}if(this.onPostUpdateObservable&&this.onPostUpdateObservable.hasObservers()){this.onPostUpdateObservable.notifyObservers(this.transform)}};StandardPlayerController.prototype.afterPlayerController=function(){};StandardPlayerController.prototype.updateCharacterController=function(){if(this.characterController!=null){this.isCharacterRising=(this.isCharacterJumping==true&&this.verticalVelocity>0);this.isCharacterLanding=(this.isCharacterJumping==true&&this.verticalVelocity<0);if(this.isCharacterRising==true){this.hasGroundedContact=false}if(this.hasGroundedContact===true&&this.minJumpTimer<=0){this.isCharacterSliding=false;this.isCharacterGrounded=true}if(this.isCharacterGrounded===true)this.isCharacterJumping=false;this.isCharacterFalling=(this.isCharacterGrounded===false&&this.isCharacterSliding==false&&this.isCharacterJumping==false&&this.verticalVelocity<0&&Math.abs(this.verticalVelocity)>=this.minFallVelocity);if(this.isCharacterFalling===true&&this.isCharacterFallTriggered===false){this.isCharacterFallTriggered=true;if(this.jumpDelay>0)this.delayJumpTimer=this.jumpDelay}if(this.isCharacterGrounded===true)this.isCharacterFallTriggered=false;if(this.useClimbSystem===true){this.castPhysicsClimbingVolumeRay();this.castPhysicsHeightCheckVolumeRay()}if(this.isCharacterNavigating===false&&this.movementAllowed===true){if(this.isCharacterGrounded===true){if(this.delayJumpTimer<=0)this.isCharacterJumpFrame=(this.canPlayerJump===true&&this.isJumpPressed===true);if(this.isPerformingAction===false&&this.isCharacterJumpFrame===true&&this.useClimbSystem===true&&this.climbContact===true&&this.heightContact===true){var climbAction=-1;var rotateSpeed=1;var rotateTowards=false;var matchHeight=false;var startTime=0;var targetTime=0;var targetOffset=0;var hitHeight=parseFloat(this.heightContactPoint.y.toFixed(2));var playerHeight=parseFloat(this.transform.position.y.toFixed(2));var obstacleHeight=parseFloat((hitHeight-playerHeight).toFixed(2));if(obstacleHeight>=this.maxHeightRanges.stepUpRange.minimumHeight&&obstacleHeight<=this.maxHeightRanges.stepUpRange.maximumHeight){climbAction=PROJECT.ActionAnimationType.StepUp;rotateSpeed=this.maxHeightRanges.stepUpRange.rotationSpeed;rotateTowards=this.maxHeightRanges.stepUpRange.rotateTowards;matchHeight=this.maxHeightRanges.stepUpRange.matchHeight;startTime=this.maxHeightRanges.stepUpRange.startTime;targetTime=this.maxHeightRanges.stepUpRange.targetTime;targetOffset=this.maxHeightRanges.stepUpRange.targetOffset}else if(obstacleHeight>=this.maxHeightRanges.jumpUpRange.minimumHeight&&obstacleHeight<=this.maxHeightRanges.jumpUpRange.maximumHeight){climbAction=PROJECT.ActionAnimationType.JumpUp;rotateSpeed=this.maxHeightRanges.jumpUpRange.rotationSpeed;rotateTowards=this.maxHeightRanges.jumpUpRange.rotateTowards;matchHeight=this.maxHeightRanges.jumpUpRange.matchHeight;startTime=this.maxHeightRanges.jumpUpRange.startTime;targetTime=this.maxHeightRanges.jumpUpRange.targetTime;targetOffset=this.maxHeightRanges.jumpUpRange.targetOffset}else if(obstacleHeight>=this.maxHeightRanges.climbUpRange.minimumHeight&&obstacleHeight<=this.maxHeightRanges.climbUpRange.maximumHeight){climbAction=PROJECT.ActionAnimationType.ClimbUp;rotateSpeed=this.maxHeightRanges.climbUpRange.rotationSpeed;rotateTowards=this.maxHeightRanges.climbUpRange.rotateTowards;matchHeight=this.maxHeightRanges.climbUpRange.matchHeight;startTime=this.maxHeightRanges.climbUpRange.startTime;targetTime=this.maxHeightRanges.climbUpRange.targetTime;targetOffset=this.maxHeightRanges.climbUpRange.targetOffset}if(climbAction>=0){if(this.canClimbObstaclePredicate==null||this.canClimbObstaclePredicate(climbAction)===true){this.isCharacterJumpFrame=false;this.isCharacterJumping=false;this.isCharacterLanding=false;this.isCharacterRising=false;this.playActionAnimation(climbAction,false,true);this.playerRotationSpeed=rotateSpeed;this.rotatePlayerTowards=rotateTowards;this.matchTargetHeight=matchHeight;this.matchStartTime=(startTime-PROJECT.ThirdPersonPlayerController.MIN_TIMER_OFFSET);this.matchTargetTime=(targetTime-PROJECT.ThirdPersonPlayerController.MIN_TIMER_OFFSET);this.matchTargetOffset=targetOffset;this.lastTargetHeight=hitHeight;this.lastStartHeight=null;this.lockTargetHeight=false}}}if(this.isCharacterJumpFrame===true&&this.jumpSpeed>0){this.isCharacterJumping=true;this.characterController.jump(this.jumpSpeed);if(this.jumpDelay>0)this.delayJumpTimer=this.jumpDelay;if(this.airbornTimeout>0)this.minJumpTimer=(this.airbornTimeout+this.deltaTime);this.lastJumpVelocity.set(this.movementVelocity.x,0,this.movementVelocity.z)}if(this.onBeforeMoveObservable&&this.onBeforeMoveObservable.hasObservers()){this.onBeforeMoveObservable.notifyObservers(this.transform)}if(this.animationState!=null&&this.rootMotion===true){var rootMotion=this.getDeltaMotionPosition();this.movementVelocity.set(rootMotion.x,0,rootMotion.z);BABYLON.Vector3.TransformNormalToRef(this.movementVelocity,this.transform.getWorldMatrix(),this.movementVelocity);this.characterController.move(this.movementVelocity)}else{this.characterController.move(this.movementVelocity)}}}else{}}};StandardPlayerController.prototype.updateCameraController=function(){if(this.enableInput===false)return;if(this.cameraPivot!=null){if(this.targetCameraOffset.x!==0||this.targetCameraOffset.y!==0||this.targetCameraOffset.z!==0){this.cameraPivotOffset.copyFrom(this.targetCameraOffset)}else{if(this.playerControl===PROJECT.PlayerInputControl.ThirdPersonStrafing){this.cameraPivotOffset.set(0,this.pivotHeight,0)}else{this.cameraPivotOffset.set(0,this.eyesHeight,0)}}UNITY.Utilities.GetAbsolutePositionToRef(this.transform,this.cameraPivot.position,this.cameraPivotOffset);if(this.rotateCamera===true){BABYLON.Quaternion.FromEulerAnglesToRef(this.playerRotationVector.x,this.playerRotationVector.y,0,this.cameraPivot.rotationQuaternion)}}if(this.rotateCamera===true&&this.cameraNode!=null){if(this.cameraSmoothing<=0)this.cameraSmoothing=5.0;if(this.playerControl===PROJECT.PlayerInputControl.ThirdPersonStrafing){if(this.cameraCollisions===true){var parentNode=this.cameraNode.parent;this.dollyDirection.scaleToRef(this.maxDistance,this.scaledMaxDirection);this.dollyDirection.scaleToRef(this.cameraDistance,this.scaledCamDirection);UNITY.Utilities.GetAbsolutePositionToRef(parentNode,this.parentNodePosition);UNITY.Utilities.TransformPointToRef(parentNode,this.scaledMaxDirection,this.maximumCameraPos);var contact=false;var distance=0;if(this.characterController!=null){if(this.cameraRaycastShape!=null){var query={shape:this.cameraRaycastShape,rotation:this.cameraNode.rotationQuaternion,startPosition:this.parentNodePosition,endPosition:this.maximumCameraPos,ignoreBody:this.transform.physicsBody,shouldHitTriggers:false};var result=UNITY.RigidbodyPhysics.Shapecast(query);contact=(result!=null&&result.world!=null&&result.world.hasHit===true&&result.world.body!=null);distance=(contact===true)?BABYLON.Vector3.Distance(this.parentNodePosition,result.world.hitPoint):0}}if(contact===true){this.cameraDistance=BABYLON.Scalar.Clamp((distance*this.distanceFactor),this.minimumDistance,this.maxDistance);if(this.cameraNode.position.x!==this.scaledCamDirection.x||this.cameraNode.position.y!==this.scaledCamDirection.y||this.cameraNode.position.z!==this.scaledCamDirection.z){BABYLON.Vector3.LerpToRef(this.cameraNode.position,this.scaledCamDirection,(this.deltaTime*this.cameraSmoothing),this.cameraNode.position)}}else{if(this.mouseWheel===true){if(UNITY.InputController.IsWheelScrolling()){var wheel=UNITY.InputController.GetUserInput(UNITY.UserInputAxis.Wheel);if(wheel<0){var zoomOutSpeed=(this.scrollSpeed*this.deltaTime);this.boomPosition.z=BABYLON.Scalar.MoveTowards(this.boomPosition.z,-this.maxDistance,zoomOutSpeed)}else if(wheel>0){var zoomInSpeed=(this.scrollSpeed*this.deltaTime);this.boomPosition.z=BABYLON.Scalar.MoveTowards(this.boomPosition.z,-this.minimumDistance,zoomInSpeed)}}}if(this.cameraNode.position.x!==this.boomPosition.x||this.cameraNode.position.y!==this.boomPosition.y||this.cameraNode.position.z!==this.boomPosition.z){BABYLON.Vector3.LerpToRef(this.cameraNode.position,this.boomPosition,(this.deltaTime*this.cameraSmoothing),this.cameraNode.position)}}}else{if(this.cameraNode.position.x!==this.boomPosition.x||this.cameraNode.position.y!==this.boomPosition.y||this.cameraNode.position.z!==this.boomPosition.z){BABYLON.Vector3.LerpToRef(this.cameraNode.position,this.boomPosition,(this.deltaTime*this.cameraSmoothing),this.cameraNode.position)}}}else{if(this.cameraNode.position.x!==0||this.cameraNode.position.y!==0||this.cameraNode.position.z!==0){this.cameraNode.position.set(0,0,0)}}}this.updateSmoothBoomArmLength()};StandardPlayerController.prototype.getBoomArmMaxDistance=function(){return this.maxDistance};StandardPlayerController.prototype.setBoomArmMaxDistance=function(distance){this.maxDistance=Math.abs(distance)};StandardPlayerController.prototype.setSmoothBoomArmLength=function(length,speed,updateMaxDistance){if(updateMaxDistance===void 0){updateMaxDistance=true}var absoluteLength=Math.abs(length);this.smoothBoomArmLength=-absoluteLength;this.smoothBoomArmSpeed=speed;if(updateMaxDistance===true){var absoluteDistance=Math.abs(this.maxDistance);if(absoluteLength>absoluteDistance){this.setBoomArmMaxDistance(absoluteLength)}}};StandardPlayerController.prototype.updateSmoothBoomArmLength=function(){if(this.smoothBoomArmLength!=null&&this.smoothBoomArmSpeed!=null){if(this.boomPosition.z!==this.smoothBoomArmLength){this.boomPosition.z=BABYLON.Scalar.MoveTowards(this.boomPosition.z,this.smoothBoomArmLength,(this.smoothBoomArmSpeed*this.getDeltaSeconds()))}else{this.smoothBoomArmLength=null;this.smoothBoomArmSpeed=null}}};StandardPlayerController.prototype.castPhysicsClimbingVolumeRay=function(){var raycast=null;this.climbContact=false;this.climbContactNode=null;this.climbContactPoint.set(0,0,0);this.climbContactNormal.set(0,0,0);this.climbContactAngle=0;this.climbContactDistance=0;var playerTransformForwardDirection=UTIL.TransformDirection(this.transform,this.forwardDirection);this.offsetClimbRaycastPosition.set(0,this.rayClimbOffset,0);UNITY.Utilities.GetAbsolutePositionToRef(this.transform,this.startClimbRaycastPosition,this.offsetClimbRaycastPosition);UNITY.Utilities.GetAbsolutePositionToRef(this.transform,this.endClimbRaycastPosition,this.forwardDirection.scale(this.rayClimbLength));this.endClimbRaycastPosition.y+=this.rayClimbOffset;if(raycast.hasHit===true&&raycast.collisionObject!=null&&raycast.collisionObject.entity!=null){var checkTag=UNITY.SceneManager.GetTransformTag(raycast.collisionObject.entity);if(checkTag===this.climbVolumeTag){this.climbContact=true;this.climbContactNode=raycast.collisionObject.entity;if(raycast.hitPoint!=null)this.climbContactPoint.copyFrom(raycast.hitPoint);if(raycast.hitNormal!=null)this.climbContactNormal.copyFrom(raycast.hitNormal);this.climbContactAngle=(this.climbContactNormal!=null)?Math.abs(UNITY.Utilities.GetAngle(this.climbContactNormal,BABYLON.Vector3.UpReadOnly)):0;this.climbContactDistance=raycast.hitDistance}}if(this.showDebugColliders===true){if(this.climbSensorLine==null)this.climbSensorLine=new UNITY.LinesMeshRenderer(this.transform.name+".ClimbingSensorLine",this.scene);if(this.climbContact===true){this.climbSensorLine.drawLine([this.startClimbRaycastPosition,raycast.hitPoint],BABYLON.Color3.Red())}else{this.climbSensorLine.drawLine([this.startClimbRaycastPosition,this.endClimbRaycastPosition],BABYLON.Color3.Green())}}};StandardPlayerController.prototype.castPhysicsHeightCheckVolumeRay=function(){var raycast=null;this.heightContact=false;this.heightContactNode=null;this.heightContactPoint.set(0,0,0);this.heightContactNormal.set(0,0,0);this.heightContactAngle=0;this.heightContactDistance=0;var playerTransformHeightDirection=UTIL.TransformDirection(this.transform,this.downDirection);if(this.climbContact===true){this.endHeightRaycastPosition.copyFrom(this.climbContactPoint);this.startHeightRaycastPosition.copyFrom(this.climbContactPoint);this.startHeightRaycastPosition.addInPlace(BABYLON.Vector3.UpReadOnly.scale(this.rayHeightLength))}else{this.offsetHeightRaycastPosition.set(0,this.rayHeightOffset,this.rayClimbLength);UNITY.Utilities.GetAbsolutePositionToRef(this.transform,this.startHeightRaycastPosition,this.offsetHeightRaycastPosition);this.endHeightRaycastPosition.copyFrom(this.startHeightRaycastPosition);this.endHeightRaycastPosition.addInPlace(this.downDirection.scale(this.rayHeightLength))}if(raycast!=null&&raycast.hasHit===true&&raycast.collisionObject!=null&&raycast.collisionObject.entity!=null){var checkTag=UNITY.SceneManager.GetTransformTag(raycast.collisionObject.entity);if(checkTag===this.climbVolumeTag){this.heightContact=true;this.heightContactNode=raycast.collisionObject.entity;if(raycast.hitPoint!=null)this.heightContactPoint.copyFrom(raycast.hitPoint);if(raycast.hitNormal!=null)this.heightContactNormal.copyFrom(raycast.hitNormal);this.heightContactAngle=(this.heightContactNormal!=null)?Math.abs(UNITY.Utilities.GetAngle(this.heightContactNormal,BABYLON.Vector3.UpReadOnly)):0;this.heightContactDistance=raycast.hitDistance}}if(this.showDebugColliders===true){if(this.heightSensorLine==null)this.heightSensorLine=new UNITY.LinesMeshRenderer(this.transform.name+".HeightCheckSensorLine",this.scene);if(raycast!=null&&this.heightContact===true){this.heightSensorLine.drawLine([this.startHeightRaycastPosition,raycast.hitPoint],BABYLON.Color3.Red())}else{this.heightSensorLine.drawLine([this.startHeightRaycastPosition,this.endHeightRaycastPosition],BABYLON.Color3.Green())}}};StandardPlayerController.prototype.getCheckedVerticalVelocity=function(){var currentVelocity=(this.characterController!=null)?this.characterController.getVerticalVelocity():0;return(Math.abs(currentVelocity)>=PROJECT.StandardPlayerController.MIN_VERTICAL_VELOCITY)?currentVelocity:0};StandardPlayerController.prototype.destroyPlayerController=function(){this.cameraPivot=null;this.cameraNode=null;this.animationState=null;this.characterController=null;this.onPreUpdateObservable.clear();this.onPreUpdateObservable=null;this.onBeforeMoveObservable.clear();this.onBeforeMoveObservable=null;this.onPostUpdateObservable.clear();this.onPostUpdateObservable=null};StandardPlayerController.prototype.validateAnimationStateParams=function(){if(this.animationStateParams==null){this.animationStateParams={moveDirection:"Direction",inputMagnitude:"Magnitude",horizontalInput:"Horizontal",verticalInput:"Vertical",mouseXInput:"MouseX",mouseYInput:"MouseY",heightInput:"Height",speedInput:"Speed",jumpFrame:"Jumped",jumpState:"Jump",actionState:"Action",fallingState:"FreeFall",slidingState:"Sliding",groundedState:"Grounded"}}};StandardPlayerController.MIN_VERTICAL_VELOCITY=0.01;StandardPlayerController.MIN_GROUND_DISTANCE=0.15;StandardPlayerController.MIN_MOVE_EPSILON=0.001;StandardPlayerController.MIN_TIMER_OFFSET=0;StandardPlayerController.MIN_SLOPE_LIMIT=0;StandardPlayerController.PLAYER_HEIGHT="playerHeight";return StandardPlayerController}(UNITY.ScriptComponent));PROJECT.StandardPlayerController=StandardPlayerController;var PlayerInputControl;(function(PlayerInputControl){PlayerInputControl[PlayerInputControl["FirstPersonStrafing"]=0]="FirstPersonStrafing";PlayerInputControl[PlayerInputControl["ThirdPersonStrafing"]=1]="ThirdPersonStrafing"})(PlayerInputControl=PROJECT.PlayerInputControl||(PROJECT.PlayerInputControl={}));var PlayerMoveDirection;(function(PlayerMoveDirection){PlayerMoveDirection[PlayerMoveDirection["Stationary"]=0]="Stationary";PlayerMoveDirection[PlayerMoveDirection["Forward"]=1]="Forward";PlayerMoveDirection[PlayerMoveDirection["ForwardLeft"]=2]="ForwardLeft";PlayerMoveDirection[PlayerMoveDirection["ForwardRight"]=3]="ForwardRight";PlayerMoveDirection[PlayerMoveDirection["Backward"]=4]="Backward";PlayerMoveDirection[PlayerMoveDirection["BackwardLeft"]=5]="BackwardLeft";PlayerMoveDirection[PlayerMoveDirection["BackwardRight"]=6]="BackwardRight";PlayerMoveDirection[PlayerMoveDirection["StrafingLeft"]=7]="StrafingLeft";PlayerMoveDirection[PlayerMoveDirection["StrafingRight"]=8]="StrafingRight"})(PlayerMoveDirection=PROJECT.PlayerMoveDirection||(PROJECT.PlayerMoveDirection={}));var ActionAnimationType;(function(ActionAnimationType){ActionAnimationType[ActionAnimationType["Neutral"]=0]="Neutral";ActionAnimationType[ActionAnimationType["StepUp"]=1]="StepUp";ActionAnimationType[ActionAnimationType["JumpUp"]=2]="JumpUp";ActionAnimationType[ActionAnimationType["ClimbUp"]=3]="ClimbUp";ActionAnimationType[ActionAnimationType["VaultOver"]=4]="VaultOver"})(ActionAnimationType=PROJECT.ActionAnimationType||(PROJECT.ActionAnimationType={}))})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var ThirdPersonPlayerController=(function(_super){__extends(ThirdPersonPlayerController,_super);function ThirdPersonPlayerController(transform,scene,properties){var _this=_super.call(this,transform,scene,properties)||this;_this.enableInput=false;_this.attachCamera=false;_this.rotateCamera=true;_this.mouseWheel=true;_this.freeCamera=null;_this.freeLooking=false;_this.requireSprintButton=false;_this.gravitationalForce=3.0;_this.minFallVelocity=1.0;_this.verticalStepSpeed=1.0;_this.minStepUpHeight=0.15;_this.rigidBodyMass=85.0;_this.airbornTimeout=0.5;_this.maxAngle=45;_this.speedFactor=1.0;_this.rootMotion=false;_this.moveSpeed=5.335;_this.walkSpeed=2.0;_this.lookSpeed=2.0;_this.jumpSpeed=10.0;_this.jumpDelay=0.25;_this.eyesHeight=1.55;_this.pivotHeight=1.35;_this.maxDistance=5.0;_this.scrollSpeed=25;_this.topLookLimit=60.0;_this.downLookLimit=30.0;_this.lowTurnSpeed=15.0;_this.highTurnSpeed=25.0;_this.smoothInputTime=0;_this.smoothInputVectors=false;_this.smoothAcceleration=false;_this.accelerationSpeed=0.1;_this.decelerationSpeed=0.1;_this.climbVolumeTag="Climb";_this.vaultVolumeTag="Vault";_this.maxHeightRanges=null;_this.useClimbSystem=false;_this.distanceFactor=0.85;_this.cameraSmoothing=8;_this.cameraCollisions=true;_this.inputMagnitude=0;_this.landingEpsilon=0.1;_this.minimumDistance=0.5;_this.movementAllowed=true;_this.playerInputX=0;_this.playerInputZ=0;_this.playerMouseX=0;_this.playerMouseY=0;_this.runKeyRequired=true;_this.buttonRun=BABYLON.Xbox360Button.LeftStick;_this.keyboardRun=UNITY.UserInputKey.Shift;_this.buttonJump=BABYLON.Xbox360Button.A;_this.keyboardJump=UNITY.UserInputKey.SpaceBar;_this.buttonCamera=BABYLON.Xbox360Button.Y;_this.keyboardCamera=UNITY.UserInputKey.P;_this.postNetworkAttributes=false;_this.playerNumber=UNITY.PlayerNumber.One;_this.boomPosition=new BABYLON.Vector3(0,0,-5);_this.airbornVelocity=new BABYLON.Vector3(0,0,0);_this.movementVelocity=new BABYLON.Vector3(0,0,0);_this.targetCameraOffset=new BABYLON.Vector3(0,0,0);_this.rayClimbOffset=0.35;_this.rayClimbLength=0.85;_this.canClimbObstaclePredicate=null;_this.rayHeightOffset=5.0;_this.rayHeightLength=6.0;_this.abstractMesh=null;_this.cameraDistance=0;_this.forwardCamera=true;_this.avatarRadius=0.5;_this.groundingObject=null;_this.groundingCallback=null;_this.dollyDirection=new BABYLON.Vector3(0,0,0);_this.cameraEulers=new BABYLON.Vector3(0,0,0);_this.rotationEulers=new BABYLON.Vector3(0,0,0);_this.cameraPivotOffset=new BABYLON.Vector3(0,0,0);_this.cameraForwardVector=new BABYLON.Vector3(0,0,0);_this.cameraRightVector=new BABYLON.Vector3(0,0,0);_this.desiredForwardVector=new BABYLON.Vector3(0,0,0);_this.desiredRightVector=new BABYLON.Vector3(0,0,0);_this.lastRotationQuaternion=new BABYLON.Quaternion(0,0,0,1);_this.scaledCamDirection=new BABYLON.Vector3(0,0,0);_this.scaledMaxDirection=new BABYLON.Vector3(0,0,0);_this.parentNodePosition=new BABYLON.Vector3(0,0,0);_this.maximumCameraPos=new BABYLON.Vector3(0,0,0);_this.tempWorldPosition=new BABYLON.Vector3(0,0,0);_this.cameraRaycastResult=null;_this.cameraRaycastShape=null;_this.avatarSkins=null;_this.cameraNode=null;_this.cameraPivot=null;_this.navigationAgent=null;_this.characterController=null;_this.verticalVelocity=0;_this.smoothMotionSpeed=false;_this.smoothChangeRate=25;_this.animationSpeed=0;_this.movementSpeed=0;_this.isRunPressed=false;_this.isJumpPressed=false;_this.isCharacterSliding=false;_this.isCharacterFalling=false;_this.isCharacterGrounded=false;_this.isCharacterFallTriggered=false;_this.isCharacterJumpFrame=false;_this.isCharacterJumping=false;_this.isCharacterRising=false;_this.isCharacterLanding=false;_this.isCharacterNavigating=false;_this.navigationAngularSpeed=0;_this.updateStateParams=true;_this.animationStateParams=null;_this.sphereCollisionShape=null;_this.hasGroundedContact=false;_this.showDebugColliders=false;_this.colliderVisibility=0;_this.colliderRenderGroup=0;_this.showDebugRaycasts=false;_this.deltaTime=0;_this.minJumpTimer=0;_this.delayJumpTimer=0;_this.canPlayerJump=true;_this.animationState=null;_this.lastJumpVelocity=new BABYLON.Vector3(0,0,0);_this.inputMovementVector=new BABYLON.Vector3(0,0,0);_this.playerLookRotation=new BABYLON.Vector3(0,0,0);_this.playerRotationVector=BABYLON.Vector2.Zero();_this.playerMovementVelocity=new BABYLON.Vector3(0,0,0);_this.playerRotationQuaternion=BABYLON.Quaternion.Zero();_this.playerMoveDirection=PROJECT.PlayerMoveDirection.Stationary;_this.forwardDirection=new BABYLON.Vector3(0,0,1);_this.downDirection=new BABYLON.Vector3(0,-1,0);_this.climbContact=false;_this.climbContactNode=null;_this.climbContactAngle=0;_this.climbContactPoint=new BABYLON.Vector3(0,0,0);_this.climbContactNormal=new BABYLON.Vector3(0,0,0);_this.climbContactDistance=0;_this.climbSensorLine=null;_this.offsetClimbRaycastPosition=new BABYLON.Vector3(0,0,0);_this.startClimbRaycastPosition=new BABYLON.Vector3(0,0,0);_this.endClimbRaycastPosition=new BABYLON.Vector3(0,0,0);_this.heightContact=false;_this.heightContactNode=null;_this.heightContactAngle=0;_this.heightContactPoint=new BABYLON.Vector3(0,0,0);_this.heightContactNormal=new BABYLON.Vector3(0,0,0);_this.heightContactDistance=0;_this.heightSensorLine=null;_this.offsetHeightRaycastPosition=new BABYLON.Vector3(0,0,0);_this.startHeightRaycastPosition=new BABYLON.Vector3(0,0,0);_this.endHeightRaycastPosition=new BABYLON.Vector3(0,0,0);_this.m_velocityOffset=new BABYLON.Vector3(0,0,0);_this.m_actualVelocity=new BABYLON.Vector3(0,0,0);_this.m_linearVelocity=new BABYLON.Vector3(0,0,0);_this.m_lastPosition=new BABYLON.Vector3(0,0,0);_this.m_positionCenter=new BABYLON.Vector3(0,0,0);_this.m_scaledVelocity=0;_this.playerDrawVelocity=0;_this.onPreUpdateObservable=new BABYLON.Observable;_this.onBeforeMoveObservable=new BABYLON.Observable;_this.onPostUpdateObservable=new BABYLON.Observable;_this.onPlayerInputObservable=new BABYLON.Observable;_this.onPlayerPositionObservable=new BABYLON.Observable;_this.onUpdateActionObservable=new BABYLON.Observable;_this.onAnimationStateObservable=new BABYLON.Observable;_this._deltaMotionPosition=new BABYLON.Vector3(0,0,0);_this._deltaMotionRotation=new BABYLON.Quaternion(0,0,0,0);_this.isPerformingAction=false;_this.isRootMotionAction=false;_this.isActionInterruptable=false;_this.afterActionHandler=null;_this.performActionTimer=0;_this.performActionNumber=0;_this.playerRotationSpeed=10;_this.rotatePlayerTowards=false;_this.matchStartTime=0;_this.matchTargetTime=0;_this.matchTargetOffset=0;_this.matchTargetHeight=false;_this.lockTargetHeight=false;_this.lastStartHeight=null;_this.lastTargetHeight=null;_this.lastTargetNormal=new BABYLON.Vector3(0,0,0);_this.lastTargetRotation=new BABYLON.Quaternion(0,0,0,1);_this.lastDeltaPosition=new BABYLON.Vector3(0,0,0);_this.lastDeltaRotation=new BABYLON.Quaternion(0,0,0,1);_this._ikLeftController=null;_this._ikLeftFootTarget=null;_this._ikLeftPoleTarget=null;_this._ikRightController=null;_this._ikRightFootTarget=null;_this._ikRightPoleTarget=null;_this.abstractSkinMesh=null;_this.rootBoneTransform=null;_this.leftFootTransform=null;_this.leftFootPolePos=new BABYLON.Vector3(0,0,0);_this.leftFootBendAxis=new BABYLON.Vector3(1,0,0);_this.leftFootPoleAngle=0;_this.leftFootMaxAngle=180;_this.rightFootTransform=null;_this.rightFootPolePos=new BABYLON.Vector3(0,0,0);_this.rightFootBendAxis=new BABYLON.Vector3(1,0,0);_this.rightFootPoleAngle=0;_this.rightFootMaxAngle=180;_this.smoothBoomArmLength=null;_this.smoothBoomArmSpeed=null;return _this}ThirdPersonPlayerController.prototype.isAnimationEnabled=function(){return this.updateStateParams};ThirdPersonPlayerController.prototype.isRunButtonPressed=function(){return this.isRunPressed};ThirdPersonPlayerController.prototype.isJumpButtonPressed=function(){return this.isJumpPressed};ThirdPersonPlayerController.prototype.getPlayerJumped=function(){return this.isCharacterJumpFrame};ThirdPersonPlayerController.prototype.getPlayerJumping=function(){return this.isCharacterJumping};ThirdPersonPlayerController.prototype.getPlayerFalling=function(){return this.isCharacterFalling};ThirdPersonPlayerController.prototype.getPlayerSliding=function(){return this.isCharacterSliding};ThirdPersonPlayerController.prototype.getPlayerGrounded=function(){return this.isCharacterGrounded};ThirdPersonPlayerController.prototype.getFallTriggered=function(){return this.isCharacterFallTriggered};ThirdPersonPlayerController.prototype.getMovementSpeed=function(){return this.movementSpeed};ThirdPersonPlayerController.prototype.getAnimationSpeed=function(){return this.animationSpeed};ThirdPersonPlayerController.prototype.getCameraBoomNode=function(){return this.cameraNode};ThirdPersonPlayerController.prototype.getCameraTransform=function(){return this.cameraPivot};ThirdPersonPlayerController.prototype.getAnimationState=function(){return this.animationState};ThirdPersonPlayerController.prototype.getVerticalVelocity=function(){return this.getCheckedVerticalVelocity()};ThirdPersonPlayerController.prototype.getCharacterController=function(){return this.characterController};ThirdPersonPlayerController.prototype.getPlayerLookRotation=function(){return this.playerLookRotation};ThirdPersonPlayerController.prototype.getPlayerMoveDirection=function(){return this.playerMoveDirection};ThirdPersonPlayerController.prototype.getInputMovementVector=function(){return this.inputMovementVector};ThirdPersonPlayerController.prototype.getInputMagnitudeValue=function(){return this.inputMagnitude};ThirdPersonPlayerController.prototype.getCameraPivotPosition=function(){return(this.cameraPivot!=null)?this.cameraPivot.position:null};ThirdPersonPlayerController.prototype.getCameraPivotRotation=function(){return(this.cameraPivot!=null)?this.cameraPivot.rotationQuaternion:null};ThirdPersonPlayerController.prototype.getClimbContact=function(){return this.climbContact};ThirdPersonPlayerController.prototype.getClimbContactNode=function(){return this.climbContactNode};ThirdPersonPlayerController.prototype.getClimbContactPoint=function(){return this.climbContactPoint};ThirdPersonPlayerController.prototype.getClimbContactAngle=function(){return this.climbContactAngle};ThirdPersonPlayerController.prototype.getClimbContactNormal=function(){return this.climbContactNormal};ThirdPersonPlayerController.prototype.getClimbContactDistance=function(){return this.climbContactDistance};;ThirdPersonPlayerController.prototype.getHeightContact=function(){return this.heightContact};ThirdPersonPlayerController.prototype.getHeightContactNode=function(){return this.heightContactNode};ThirdPersonPlayerController.prototype.getHeightContactPoint=function(){return this.heightContactPoint};ThirdPersonPlayerController.prototype.getHeightContactAngle=function(){return this.heightContactAngle};ThirdPersonPlayerController.prototype.getHeightContactNormal=function(){return this.heightContactNormal};ThirdPersonPlayerController.prototype.getHeightContactDistance=function(){return this.heightContactDistance};;ThirdPersonPlayerController.prototype.awake=function(){this.awakePlayerController()};ThirdPersonPlayerController.prototype.start=function(){this.startPlayerController()};ThirdPersonPlayerController.prototype.after=function(){this.afterPlayerController()};ThirdPersonPlayerController.prototype.update=function(){this.updatePlayerController()};ThirdPersonPlayerController.prototype.destroy=function(){this.destroyPlayerController()};ThirdPersonPlayerController.prototype.getDeltaMotionPosition=function(){this._deltaMotionPosition.set(0,0,0);if(this.animationState!=null){var rootMotionPosition=this.animationState.getDeltaRootMotionPosition();if(rootMotionPosition!=null){this._deltaMotionPosition.copyFrom(rootMotionPosition)}}return this._deltaMotionPosition};ThirdPersonPlayerController.prototype.getDeltaMotionRotation=function(){this._deltaMotionRotation.set(0,0,0,0);if(this.animationState!=null){var rootMotionRotation=this.animationState.getDeltaRootMotionRotation();if(rootMotionRotation!=null){this._deltaMotionRotation.copyFrom(rootMotionRotation)}}return this._deltaMotionRotation};ThirdPersonPlayerController.prototype.getIsPerformingAction=function(){return this.isPerformingAction};ThirdPersonPlayerController.prototype.getIsRootMotionAction=function(){return this.isRootMotionAction};ThirdPersonPlayerController.prototype.getIsActionInterruptable=function(){return this.isActionInterruptable};ThirdPersonPlayerController.prototype.playActionAnimation=function(action,interruptableAction,enableRootMotion,afterActionComplete){if(interruptableAction===void 0){interruptableAction=true}if(enableRootMotion===void 0){enableRootMotion=false}if(afterActionComplete===void 0){afterActionComplete=null}if(this.isPerformingAction===false&&this.animationState!=null&&action>=0){this.isPerformingAction=true;this.performActionTimer=0;this.performActionNumber=action;this.afterActionHandler=afterActionComplete;this.isActionInterruptable=interruptableAction;this.isRootMotionAction=enableRootMotion;this.playerRotationSpeed=10;this.rotatePlayerTowards=false;this.matchStartTime=0;this.matchTargetTime=0;this.matchTargetOffset=0;this.matchTargetHeight=false;this.lockTargetHeight=false;this.lastStartHeight=null;this.lastTargetHeight=null;this.lastTargetNormal.set(0,0,0);this.lastTargetRotation.set(0,0,0,1);if(this.isRootMotionAction===true){this.enableCharacterController(false)}if(this.animationState!=null){this.animationState.resetSmoothProperty(PROJECT.ThirdPersonPlayerController.PLAYER_HEIGHT)}}};ThirdPersonPlayerController.prototype.resetActionAnimationState=function(){if(this.afterActionHandler!=null){try{this.afterActionHandler()}catch(_a){}}if(this.isRootMotionAction===true){this.enableCharacterController(true)}if(this.animationState!=null){this.animationState.resetSmoothProperty(PROJECT.ThirdPersonPlayerController.PLAYER_HEIGHT)}this.performActionTimer=0;this.performActionNumber=0;this.isPerformingAction=false;this.isRootMotionAction=false;this.isActionInterruptable=false;this.afterActionHandler=null;this.playerRotationSpeed=10;this.rotatePlayerTowards=false;this.matchStartTime=0;this.matchTargetTime=0;this.matchTargetOffset=0;this.matchTargetHeight=false;this.lockTargetHeight=false;this.lastStartHeight=null;this.lastTargetHeight=null;this.lastTargetNormal.set(0,0,0);this.lastTargetRotation.set(0,0,0,1)};ThirdPersonPlayerController.prototype.updateAnimationActionState=function(){var deltaTime=this.getDeltaSeconds();var dampTime=(this.matchTargetTime-this.matchStartTime);if(this.animationState!=null&&this.isRootMotionAction===true){var playerGlobalHeight=this.transform.absolutePosition.y;this.lastDeltaPosition.copyFrom(this.getDeltaMotionPosition());BABYLON.Vector3.TransformNormalToRef(this.lastDeltaPosition,this.transform.getWorldMatrix(),this.lastDeltaPosition);if(this.matchTargetHeight===true){if(this.lastStartHeight==null&&this.performActionTimer>=this.matchStartTime){this.lastStartHeight=playerGlobalHeight;this.animationState.resetSmoothProperty(PROJECT.ThirdPersonPlayerController.PLAYER_HEIGHT)}if(this.lastStartHeight!=null&&this.lastTargetHeight!=null){this.lastDeltaPosition.y=0;var fixedTargetHeight=(this.lastTargetHeight+this.matchTargetOffset);if(this.performActionTimer<this.matchTargetTime){this.animationState.setSmoothFloat(PROJECT.ThirdPersonPlayerController.PLAYER_HEIGHT,fixedTargetHeight,dampTime,deltaTime);var smoothPlayerHeight=this.animationState.getFloat(PROJECT.ThirdPersonPlayerController.PLAYER_HEIGHT);this.lastDeltaPosition.y=(smoothPlayerHeight-playerGlobalHeight)}else if(this.lockTargetHeight===false&&this.performActionTimer>=this.matchTargetTime){this.lastDeltaPosition.y=(fixedTargetHeight-playerGlobalHeight);this.lockTargetHeight=true}}}this.transform.position.addInPlace(this.lastDeltaPosition);if(this.rotatePlayerTowards===true){if(this.climbContact===true){this.lastTargetNormal.set(-this.climbContactNormal.x,-this.climbContactNormal.y,-this.climbContactNormal.z);UNITY.Utilities.LookRotationToRef(this.lastTargetNormal,this.lastTargetRotation);var lerpAmount=BABYLON.Scalar.Clamp(this.playerRotationSpeed*deltaTime);BABYLON.Quaternion.SlerpToRef(this.transform.rotationQuaternion,this.lastTargetRotation,lerpAmount,this.transform.rotationQuaternion)}}else{this.lastDeltaRotation.copyFrom(this.getDeltaMotionRotation());this.transform.rotationQuaternion.multiplyInPlace(this.lastDeltaRotation)}}this.performActionTimer+=deltaTime};ThirdPersonPlayerController.prototype.setWorldPosition=function(x,y,z){if(this.characterController!=null){this.characterController.set(x,y,z)}};ThirdPersonPlayerController.prototype.attachPlayerCamera=function(player){if(this.cameraNode==null){var playerCamera=(player<=0||player>4)?1:player;this.cameraNode=PROJECT.DefaultCameraSystem.GetCameraTransform(this.scene,playerCamera);this.freeCamera=PROJECT.DefaultCameraSystem.GetMainCamera(this.scene,false);if(this.cameraNode!=null&&this.freeCamera!=null){this.freeCamera.detachControl();this.cameraNode.parent=this.cameraPivot;this.cameraNode.position.copyFrom(this.boomPosition);this.cameraNode.rotationQuaternion=new BABYLON.Quaternion(0,0,0,1);this.cameraDistance=this.cameraNode.position.length();this.dollyDirection.copyFrom(this.cameraNode.position);this.dollyDirection.normalize()}else{}}};ThirdPersonPlayerController.prototype.getLeftFootTarget=function(){return this._ikLeftFootTarget};ThirdPersonPlayerController.prototype.getRightFootTarget=function(){return this._ikRightFootTarget};ThirdPersonPlayerController.prototype.getLeftFootController=function(){return this._ikLeftController};ThirdPersonPlayerController.prototype.getRightFootController=function(){return this._ikRightController};ThirdPersonPlayerController.prototype.attachBoneControllers=function(){var displayHandles=this.getProperty("displayHandles");var abstractSkinMeshData=this.getProperty("abstractSkinMesh");if(abstractSkinMeshData!=null)this.abstractSkinMesh=this.getChildNode(abstractSkinMeshData.name,UNITY.SearchType.ExactMatch,false);var rootBoneTransformData=this.getProperty("rootBoneTransform");if(rootBoneTransformData!=null)this.rootBoneTransform=this.getChildNode(rootBoneTransformData.name,UNITY.SearchType.ExactMatch,false);var leftFootTransformData=this.getProperty("leftFootTransform");if(leftFootTransformData!=null)this.leftFootTransform=this.getChildNode(leftFootTransformData.name,UNITY.SearchType.ExactMatch,false);var leftPoleHandleData=this.getProperty("leftFootPolePos");if(leftPoleHandleData!=null)this.leftFootPolePos.copyFrom(UNITY.Utilities.ParseVector3(leftPoleHandleData));var leftBendAxisData=this.getProperty("leftFootBendAxis");if(leftBendAxisData!=null)this.leftFootBendAxis.copyFrom(UNITY.Utilities.ParseVector3(leftBendAxisData));this.leftFootPoleAngle=this.getProperty("leftFootPoleAngle",this.leftFootPoleAngle);this.leftFootMaxAngle=this.getProperty("leftFootMaxAngle",this.leftFootMaxAngle);var rightFootTransformData=this.getProperty("rightFootTransform");if(rightFootTransformData!=null)this.rightFootTransform=this.getChildNode(rightFootTransformData.name,UNITY.SearchType.ExactMatch,false);var rightPoleHandleData=this.getProperty("rightFootPolePos");if(rightPoleHandleData!=null)this.rightFootPolePos.copyFrom(UNITY.Utilities.ParseVector3(rightPoleHandleData));var rightBendAxisData=this.getProperty("rightFootBendAxis");if(rightBendAxisData!=null)this.rightFootBendAxis.copyFrom(UNITY.Utilities.ParseVector3(rightBendAxisData));this.rightFootPoleAngle=this.getProperty("rightFootPoleAngle",this.rightFootPoleAngle);this.rightFootMaxAngle=this.getProperty("rightFootMaxAngle",this.rightFootMaxAngle);if(this.abstractSkinMesh!=null){var materialName="M_TARGET_MESH";var targetMaterial=this.scene.getMaterialByName(materialName);if(targetMaterial==null){targetMaterial=new BABYLON.StandardMaterial("M_TARGET_MESH",this.scene);targetMaterial.diffuseColor=new BABYLON.Color3(1.0,0.5,0.25)}if(this.leftFootTransform!=null&&this.leftFootTransform._linkedBone!=null){this._ikLeftFootTarget=BABYLON.MeshBuilder.CreateBox(this.transform.name+".LeftFootTarget",{width:0.1,height:0.1,depth:0.1},this.scene);this._ikLeftFootTarget.parent=this.abstractSkinMesh;if(this._ikLeftFootTarget instanceof BABYLON.AbstractMesh){this._ikLeftFootTarget.material=targetMaterial;this._ikLeftFootTarget.isVisible=displayHandles}this._ikLeftPoleTarget=BABYLON.MeshBuilder.CreateSphere(this.transform.name+".LeftFootPole",{diameter:0.15},this.scene);this._ikLeftPoleTarget.parent=this.abstractSkinMesh;this._ikLeftPoleTarget.position.copyFrom(this.leftFootPolePos);if(this._ikLeftPoleTarget instanceof BABYLON.AbstractMesh){this._ikLeftPoleTarget.isVisible=displayHandles}}if(this.rightFootTransform!=null&&this.rightFootTransform._linkedBone!=null){this._ikRightFootTarget=BABYLON.MeshBuilder.CreateBox(this.transform.name+".RightFootTarget",{width:0.1,height:0.1,depth:0.1},this.scene);this._ikRightFootTarget.parent=this.abstractSkinMesh;if(this._ikRightFootTarget instanceof BABYLON.AbstractMesh){this._ikRightFootTarget.material=targetMaterial;this._ikRightFootTarget.isVisible=displayHandles}this._ikRightPoleTarget=BABYLON.MeshBuilder.CreateSphere(this.transform.name+".RightFootPole",{diameter:0.15},this.scene);this._ikRightPoleTarget.parent=this.abstractSkinMesh;this._ikRightPoleTarget.position.copyFrom(this.rightFootPolePos);if(this._ikRightPoleTarget instanceof BABYLON.AbstractMesh){this._ikRightPoleTarget.isVisible=displayHandles}}}};ThirdPersonPlayerController.prototype.attachAnimationController=function(){var _this=this;if(this.animationState==null){this.animationState=this.getComponent("UNITY.AnimationState",true)}if(this.animationState!=null){this.animationState.onAnimationEndObservable.add(function(){if(_this.isPerformingAction===true){_this.resetActionAnimationState()}});this.animationState.onAnimationUpdateObservable.add(function(){if(_this.animationState.ikFrameEnabled()===true){if(_this._ikLeftController!=null){_this._ikLeftController.update()}if(_this._ikRightController!=null){_this._ikRightController.update()}}})}};ThirdPersonPlayerController.prototype.enableCharacterController=function(state){if(state===true){this.movementAllowed=true;this.resetPlayerJumpingState();if(this.characterController!=null){this.characterController.setGravityFactor(this.gravitationalForce);this.characterController.setCollisionState(true)}}else{this.movementAllowed=false;this.resetPlayerJumpingState();if(this.characterController!=null){this.characterController.setGravityFactor(0);this.characterController.setCollisionState(false)}}};ThirdPersonPlayerController.prototype.resetPlayerRotation=function(){this.transform.rotationQuaternion.toEulerAnglesToRef(this.rotationEulers);this.playerRotationVector.x=this.rotationEulers.x;this.playerRotationVector.y=this.rotationEulers.y};ThirdPersonPlayerController.prototype.resetPlayerJumpingState=function(){this.minJumpTimer=0;this.isCharacterJumping=false;this.isCharacterLanding=false;this.isCharacterRising=false;this.isCharacterJumpFrame=false;if(this.characterController!=null){this.characterController.jump(0)}};ThirdPersonPlayerController.prototype.awakePlayerController=function(){this.gravitationalForce=this.getProperty("gravityMultiplier",this.gravitationalForce);this.verticalStepSpeed=this.getProperty("stepUpVelocity",this.verticalStepSpeed);this.minStepUpHeight=this.getProperty("minStepHeight",this.minStepUpHeight);this.rigidBodyMass=this.getProperty("rigidBodyMass",this.rigidBodyMass);this.rotateCamera=this.getProperty("rotateCamera",this.rotateCamera);this.mouseWheel=this.getProperty("mouseWheel",this.mouseWheel);this.rayClimbLength=this.getProperty("rayClimbLength",this.rayClimbLength);this.rayClimbOffset=this.getProperty("rayClimbOffset",this.rayClimbOffset);this.rayHeightLength=this.getProperty("rayHeightLength",this.rayHeightLength);this.rayHeightOffset=this.getProperty("rayHeightOffset",this.rayHeightOffset);this.maxAngle=this.getProperty("maxAngle",this.maxAngle);this.landingEpsilon=this.getProperty("landingEpsilon",this.landingEpsilon);this.minFallVelocity=this.getProperty("minFallVelocity",this.minFallVelocity);this.airbornTimeout=this.getProperty("airbornTimeout",this.airbornTimeout);this.rootMotion=this.getProperty("rootMotion",this.rootMotion);this.moveSpeed=this.getProperty("moveSpeed",this.moveSpeed);this.walkSpeed=this.getProperty("walkSpeed",this.walkSpeed);this.lookSpeed=this.getProperty("lookSpeed",this.lookSpeed);this.jumpSpeed=this.getProperty("jumpSpeed",this.jumpSpeed);this.jumpDelay=this.getProperty("jumpDelay",this.jumpDelay);this.eyesHeight=this.getProperty("eyesHeight",this.eyesHeight);this.pivotHeight=this.getProperty("pivotHeight",this.pivotHeight);this.maxDistance=this.getProperty("maxDistance",this.maxDistance);this.scrollSpeed=this.getProperty("scrollSpeed",this.scrollSpeed);this.topLookLimit=this.getProperty("topLookLimit",this.topLookLimit);this.downLookLimit=this.getProperty("downLookLimit",this.downLookLimit);this.lowTurnSpeed=this.getProperty("lowTurnSpeed",this.lowTurnSpeed);this.highTurnSpeed=this.getProperty("highTurnSpeed",this.highTurnSpeed);this.enableInput=this.getProperty("enableInput",this.enableInput);this.playerNumber=this.getProperty("playerNumber",this.playerNumber);this.attachCamera=this.getProperty("attachCamera",this.attachCamera);this.freeLooking=this.getProperty("freeLooking",this.freeLooking);this.runKeyRequired=this.getProperty("runKeyRequired",this.runKeyRequired);this.cameraCollisions=this.getProperty("cameraCollisions",this.cameraCollisions);this.cameraSmoothing=this.getProperty("cameraSmoothing",this.cameraSmoothing);this.distanceFactor=this.getProperty("distanceFactor",this.distanceFactor);this.minimumDistance=this.getProperty("minimumDistance",this.minimumDistance);this.smoothInputTime=this.getProperty("smoothInputTime",this.smoothInputTime);this.smoothInputVectors=this.getProperty("smoothInputVectors",this.smoothInputVectors);this.smoothAcceleration=this.getProperty("smoothAcceleration",this.smoothAcceleration);this.accelerationSpeed=this.getProperty("accelerationSpeed",this.accelerationSpeed);this.decelerationSpeed=this.getProperty("decelerationSpeed",this.decelerationSpeed);this.climbVolumeTag=this.getProperty("climbVolumeTag",this.climbVolumeTag);this.vaultVolumeTag=this.getProperty("vaultVolumeTag",this.vaultVolumeTag);this.useClimbSystem=this.getProperty("useClimbSystem",this.useClimbSystem);this.maxHeightRanges=this.getProperty("maxHeightRanges",this.maxHeightRanges);this.smoothMotionSpeed=this.getProperty("smoothMotionSpeed",this.smoothMotionSpeed);this.smoothChangeRate=this.getProperty("smoothChangeRate",this.smoothChangeRate);this.updateStateParams=this.getProperty("updateStateParams",this.updateStateParams);this.animationStateParams=this.getProperty("animationStateParams",this.animationStateParams);this.postNetworkAttributes=this.getProperty("postNetworkAttribs",this.postNetworkAttributes);this.showDebugRaycasts=this.getProperty("showDebugRaycasts",this.showDebugRaycasts);var arrowKeyRotation=this.getProperty("arrowKeyRotation");if(arrowKeyRotation===true)UNITY.UserInputOptions.UseArrowKeyRotation=true;var boomPositionData=this.getProperty("boomPosition");if(boomPositionData!=null)this.boomPosition=UNITY.Utilities.ParseVector3(boomPositionData);var sphereRadius=this.getProperty("sphereRadius",0.65);this.cameraRaycastShape=new BABYLON.PhysicsShapeSphere(new BABYLON.Vector3(0,0,0),sphereRadius,this.scene);this.abstractMesh=this.getAbstractMesh();this.showDebugColliders=UNITY.Utilities.ShowDebugColliders();this.colliderVisibility=UNITY.Utilities.ColliderVisibility();this.colliderRenderGroup=UNITY.Utilities.ColliderRenderGroup();this.resetPlayerRotation();this.cameraPivot=new BABYLON.Mesh(this.transform.name+".CameraPivot",this.scene);this.cameraPivot.parent=null;this.cameraPivot.position=this.transform.position.clone();this.cameraPivot.rotationQuaternion=this.transform.rotationQuaternion.clone();this.cameraPivot.checkCollisions=false;this.cameraPivot.isPickable=false;if(this.showDebugColliders===true){var testPivot=BABYLON.MeshBuilder.CreateBox("TestPivot",{width:0.25,height:0.25,depth:0.75},this.scene);testPivot.parent=this.cameraPivot;testPivot.position.set(0,0,0);testPivot.rotationQuaternion=new BABYLON.Quaternion(0,0,0,1);testPivot.visibility=1.0;testPivot.renderingGroupId=this.colliderRenderGroup;testPivot.checkCollisions=false;testPivot.isPickable=false}var configController=this.getComponent("UNITY.CharacterController");this.attachBoneControllers()};ThirdPersonPlayerController.prototype.startPlayerController=function(){var _this=this;if(this.attachCamera===true){this.attachPlayerCamera(this.playerNumber)}this.navigationAgent=this.getComponent("UNITY.NavigationAgent");this.characterController=this.getComponent("UNITY.CharacterController");if(this.characterController!=null){this.avatarRadius=this.characterController.getAvatarRadius();this.characterController.showRaycasts=this.showDebugRaycasts;this.characterController.setRigidBodyMass(this.rigidBodyMass);this.characterController.setGravityFactor(this.gravitationalForce);this.characterController.setVerticalStepSpeed(this.verticalStepSpeed);this.characterController.setMinimumStepHeight(this.minStepUpHeight);this.characterController.onUpdatePositionObservable.add(function(){_this.updatePlayerPosition();_this.updateCameraController()});UNITY.SceneManager.LogWarning("Starting player controller in physic engine mode for: "+this.transform.name)}else{UNITY.SceneManager.LogWarning("No character controller found for: "+this.transform.name)}};ThirdPersonPlayerController.prototype.updatePlayerPosition=function(){if(this.onPlayerPositionObservable&&this.onPlayerPositionObservable.hasObservers()){this.onPlayerPositionObservable.notifyObservers(this.transform)}};ThirdPersonPlayerController.prototype.updatePlayerController=function(){this.deltaTime=this.getDeltaSeconds();this.m_actualVelocity=this.transform.absolutePosition.subtract(this.m_lastPosition);this.m_linearVelocity.copyFrom(this.m_actualVelocity);this.m_scaledVelocity=(this.m_linearVelocity.length()/this.deltaTime);this.m_linearVelocity.normalize();this.m_linearVelocity.scaleInPlace(this.m_scaledVelocity);if(this.playerDrawVelocity>0){this.m_velocityOffset.copyFrom(this.m_linearVelocity);this.m_velocityOffset.scaleInPlace(this.playerDrawVelocity)}else{this.m_velocityOffset.set(0,0,0)}this.m_lastPosition.copyFrom(this.transform.absolutePosition);if(this.updateStateParams===true&&this.animationState==null){this.attachAnimationController()}if(this.minJumpTimer>0){this.minJumpTimer-=this.deltaTime;if(this.minJumpTimer<0)this.minJumpTimer=0}if(this.isCharacterGrounded===true&&this.delayJumpTimer>0){this.delayJumpTimer-=this.deltaTime;if(this.delayJumpTimer<0)this.delayJumpTimer=0}this.canPlayerJump=true;if(this.isPerformingAction===true){this.updateAnimationActionState();if(this.onUpdateActionObservable&&this.onUpdateActionObservable.hasObservers()){this.onUpdateActionObservable.notifyObservers(this.transform)}}if(this.enableInput===false){return}if(this.freeCamera==null){console.warn("No player free camera, Movement disabled");return}var userInputX=UNITY.InputController.GetUserInput(UNITY.UserInputAxis.Horizontal,this.playerNumber);var userInputZ=UNITY.InputController.GetUserInput(UNITY.UserInputAxis.Vertical,this.playerNumber);var userMouseX=UNITY.InputController.GetUserInput(UNITY.UserInputAxis.MouseX,this.playerNumber);var userMouseY=UNITY.InputController.GetUserInput(UNITY.UserInputAxis.MouseY,this.playerNumber);if(this.smoothAcceleration===true){if(userInputX>0){this.playerInputX+=(this.accelerationSpeed*this.deltaTime);if(this.playerInputX>1)this.playerInputX=1}else if(userInputX<0){this.playerInputX-=(this.accelerationSpeed*this.deltaTime);if(this.playerInputX<-1)this.playerInputX=-1}else{if(this.playerInputX<0){this.playerInputX+=(this.decelerationSpeed*this.deltaTime);if(this.playerInputX>0)this.playerInputX=0}else if(this.playerInputX>0){this.playerInputX-=(this.decelerationSpeed*this.deltaTime);if(this.playerInputX<0)this.playerInputX=0}}if(userInputZ>0){this.playerInputZ+=(this.accelerationSpeed*this.deltaTime);if(this.playerInputZ>1)this.playerInputZ=1}else if(userInputZ<0){this.playerInputZ-=(this.accelerationSpeed*this.deltaTime);if(this.playerInputZ<-1)this.playerInputZ=-1}else{if(this.playerInputZ<0){this.playerInputZ+=(this.decelerationSpeed*this.deltaTime);if(this.playerInputZ>0)this.playerInputZ=0}else if(this.playerInputZ>0){this.playerInputZ-=(this.decelerationSpeed*this.deltaTime);if(this.playerInputZ<0)this.playerInputZ=0}}}else{this.playerInputX=userInputX;this.playerInputZ=userInputZ}this.playerMouseX=userMouseX;this.playerMouseY=userMouseY;if(this.isPerformingAction===true&&this.isActionInterruptable===true){if(this.playerInputX!==0||this.playerInputZ!==0){this.resetActionAnimationState()}}if(this.isPerformingAction===true){this.canPlayerJump=false;this.playerInputX=0;this.playerInputZ=0}if(this.onPlayerInputObservable&&this.onPlayerInputObservable.hasObservers()){this.onPlayerInputObservable.notifyObservers(this.transform)}this.inputMovementVector.set(this.playerInputX,0,this.playerInputZ);if(this.inputMovementVector.length()>1.0)this.inputMovementVector.normalize();this.inputMagnitude=this.inputMovementVector.length();var moveForward=(this.playerInputZ>0);var moveBackward=(this.playerInputZ<0);var moveRight=(this.playerInputX>0);var moveLeft=(this.playerInputX<0);if(moveForward===true){if(moveLeft===true){this.playerMoveDirection=PROJECT.PlayerMoveDirection.ForwardLeft}else if(moveRight===true){this.playerMoveDirection=PROJECT.PlayerMoveDirection.ForwardRight}else{this.playerMoveDirection=PROJECT.PlayerMoveDirection.Forward}}else if(moveBackward===true){if(moveLeft===true){this.playerMoveDirection=PROJECT.PlayerMoveDirection.BackwardLeft}else if(moveRight===true){this.playerMoveDirection=PROJECT.PlayerMoveDirection.BackwardRight}else{this.playerMoveDirection=PROJECT.PlayerMoveDirection.Backward}}else if(moveLeft===true){this.playerMoveDirection=PROJECT.PlayerMoveDirection.StrafingLeft}else if(moveRight===true){this.playerMoveDirection=PROJECT.PlayerMoveDirection.StrafingRight}else{this.playerMoveDirection=PROJECT.PlayerMoveDirection.Stationary}if(this.onPreUpdateObservable&&this.onPreUpdateObservable.hasObservers()){this.onPreUpdateObservable.notifyObservers(this.transform)}this.cameraForwardVector=this.freeCamera.getForwardRay().direction;this.cameraForwardVector.y=0;this.cameraForwardVector.normalize();this.cameraForwardVector.scaleToRef(this.playerInputZ,this.desiredForwardVector);this.cameraRightVector=BABYLON.Vector3.Cross(this.cameraForwardVector,BABYLON.Vector3.Up());this.cameraRightVector.y=0;this.cameraRightVector.normalize();this.cameraRightVector.scaleToRef(-this.playerInputX,this.desiredRightVector);this.playerRotationVector.y+=(this.playerMouseX*this.lookSpeed*this.deltaTime);this.playerRotationVector.x+=(-this.playerMouseY*this.lookSpeed*this.deltaTime);this.playerRotationVector.x=BABYLON.Scalar.Clamp(this.playerRotationVector.x,-BABYLON.Tools.ToRadians(this.downLookLimit),BABYLON.Tools.ToRadians(this.topLookLimit));if(this.movementAllowed===false){this.canPlayerJump=false;this.playerInputX=0;this.playerInputZ=0}this.isRunPressed=(UNITY.InputController.GetKeyboardInput(this.keyboardRun)||UNITY.InputController.GetGamepadButtonInput(this.buttonRun));this.isJumpPressed=(UNITY.InputController.GetKeyboardInput(this.keyboardJump)||UNITY.InputController.GetGamepadButtonInput(this.buttonJump));this.movementSpeed=(this.inputMagnitude*this.moveSpeed*this.speedFactor);if(this.runKeyRequired===true&&this.isRunPressed===false){this.movementSpeed=BABYLON.Scalar.Clamp(this.movementSpeed,0,this.walkSpeed)}if(this.smoothMotionSpeed===true){this.animationSpeed=BABYLON.Scalar.Lerp(this.animationSpeed,this.movementSpeed,(this.deltaTime*this.smoothChangeRate));if(this.animationSpeed<0.01)this.animationSpeed=0}else{this.animationSpeed=this.movementSpeed}this.desiredForwardVector.addToRef(this.desiredRightVector,this.playerMovementVelocity);this.playerLookRotation.copyFrom(this.playerMovementVelocity);this.playerMovementVelocity.scaleInPlace(this.movementSpeed);this.transform.rotationQuaternion.copyFrom(this.lastRotationQuaternion);if(this.movementAllowed==true){if(this.inputMagnitude>0){UNITY.Utilities.LookRotationToRef(this.playerLookRotation,this.playerRotationQuaternion);var forwardTurnRatio=(this.playerLookRotation.length()/this.moveSpeed);var forwardTurnSpeed=BABYLON.Scalar.Lerp(this.highTurnSpeed,this.lowTurnSpeed,forwardTurnRatio);BABYLON.Quaternion.SlerpToRef(this.transform.rotationQuaternion,this.playerRotationQuaternion,(forwardTurnSpeed*this.deltaTime),this.transform.rotationQuaternion);this.lastRotationQuaternion.copyFrom(this.transform.rotationQuaternion)}}this.verticalVelocity=this.getVerticalVelocity();this.movementVelocity.copyFrom(this.playerMovementVelocity);this.hasGroundedContact=(this.characterController!=null)?this.characterController.isGrounded():false;this.isCharacterGrounded=false;this.isCharacterSliding=false;this.isCharacterFalling=false;this.isCharacterJumpFrame=false;this.isCharacterNavigating=(this.navigationAgent!=null&&this.navigationAgent.isNavigating());this.navigationAngularSpeed=(this.navigationAgent!=null)?this.navigationAgent.angularSpeed:0;this.updateCharacterController();if(this.animationState!=null&&this.updateStateParams===true){this.validateAnimationStateParams();this.animationState.setInteger(this.animationStateParams.moveDirection,this.playerMoveDirection);this.animationState.setFloat(this.animationStateParams.heightInput,this.verticalVelocity);this.animationState.setBool(this.animationStateParams.jumpFrame,this.isCharacterJumpFrame);this.animationState.setBool(this.animationStateParams.jumpState,this.isCharacterJumping);this.animationState.setInteger(this.animationStateParams.actionState,this.performActionNumber);this.animationState.setBool(this.animationStateParams.fallingState,this.isCharacterFalling);this.animationState.setBool(this.animationStateParams.slidingState,this.isCharacterSliding);this.animationState.setBool(this.animationStateParams.groundedState,this.isCharacterGrounded);if(this.smoothInputTime>0){if(this.smoothInputVectors===true){this.animationState.setSmoothFloat(this.animationStateParams.horizontalInput,this.playerInputX,this.smoothInputTime,this.deltaTime);this.animationState.setSmoothFloat(this.animationStateParams.verticalInput,this.playerInputZ,this.smoothInputTime,this.deltaTime);this.animationState.setSmoothFloat(this.animationStateParams.mouseXInput,this.playerMouseX,this.smoothInputTime,this.deltaTime);this.animationState.setSmoothFloat(this.animationStateParams.mouseYInput,this.playerMouseY,this.smoothInputTime,this.deltaTime)}else{this.animationState.setFloat(this.animationStateParams.horizontalInput,this.playerInputX);this.animationState.setFloat(this.animationStateParams.verticalInput,this.playerInputZ);this.animationState.setFloat(this.animationStateParams.mouseXInput,this.playerMouseX);this.animationState.setFloat(this.animationStateParams.mouseYInput,this.playerMouseY)}this.animationState.setSmoothFloat(this.animationStateParams.inputMagnitude,this.inputMagnitude,this.smoothInputTime,this.deltaTime);this.animationState.setSmoothFloat(this.animationStateParams.speedInput,this.animationSpeed,this.smoothInputTime,this.deltaTime)}else{this.animationState.setFloat(this.animationStateParams.horizontalInput,this.playerInputX);this.animationState.setFloat(this.animationStateParams.verticalInput,this.playerInputZ);this.animationState.setFloat(this.animationStateParams.mouseXInput,this.playerMouseX);this.animationState.setFloat(this.animationStateParams.mouseYInput,this.playerMouseY);this.animationState.setFloat(this.animationStateParams.inputMagnitude,this.inputMagnitude);this.animationState.setFloat(this.animationStateParams.speedInput,this.animationSpeed)}if(this.isCharacterNavigating===true){}if(this.onAnimationStateObservable&&this.onAnimationStateObservable.hasObservers()){this.onAnimationStateObservable.notifyObservers(this.transform)}}if(this.postNetworkAttributes==true&&UNITY.EntityController.HasNetworkEntity(this.transform)){UNITY.EntityController.PostBufferedAttribute(this.transform,0,this.playerMoveDirection);UNITY.EntityController.PostBufferedAttribute(this.transform,1,this.inputMagnitude);UNITY.EntityController.PostBufferedAttribute(this.transform,2,this.playerInputX);UNITY.EntityController.PostBufferedAttribute(this.transform,3,this.playerInputZ);UNITY.EntityController.PostBufferedAttribute(this.transform,4,this.playerMouseX);UNITY.EntityController.PostBufferedAttribute(this.transform,5,this.playerMouseY);UNITY.EntityController.PostBufferedAttribute(this.transform,6,this.verticalVelocity);UNITY.EntityController.PostBufferedAttribute(this.transform,7,this.animationSpeed);UNITY.EntityController.PostBufferedAttribute(this.transform,8,this.performActionNumber);UNITY.EntityController.PostBufferedAttribute(this.transform,9,((this.isCharacterJumpFrame)?1:0));UNITY.EntityController.PostBufferedAttribute(this.transform,10,((this.isCharacterJumping)?1:0));UNITY.EntityController.PostBufferedAttribute(this.transform,11,((this.isCharacterFalling)?1:0));UNITY.EntityController.PostBufferedAttribute(this.transform,12,((this.isCharacterSliding)?1:0));UNITY.EntityController.PostBufferedAttribute(this.transform,13,((this.isCharacterGrounded)?1:0))}if(this.onPostUpdateObservable&&this.onPostUpdateObservable.hasObservers()){this.onPostUpdateObservable.notifyObservers(this.transform)}};ThirdPersonPlayerController.prototype.afterPlayerController=function(){};ThirdPersonPlayerController.prototype.updateCharacterController=function(){if(this.characterController!=null){this.isCharacterRising=(this.isCharacterJumping==true&&this.verticalVelocity>0);this.isCharacterLanding=(this.isCharacterJumping==true&&this.verticalVelocity<0);if(this.isCharacterRising==true){this.hasGroundedContact=false}if(this.hasGroundedContact===true&&this.minJumpTimer<=0){this.isCharacterSliding=false;this.isCharacterGrounded=true}if(this.isCharacterGrounded===true)this.isCharacterJumping=false;this.isCharacterFalling=(this.isCharacterGrounded===false&&this.isCharacterSliding==false&&this.isCharacterJumping==false&&this.verticalVelocity<0&&Math.abs(this.verticalVelocity)>=this.minFallVelocity);if(this.isCharacterFalling===true&&this.isCharacterFallTriggered===false){this.isCharacterFallTriggered=true;if(this.jumpDelay>0)this.delayJumpTimer=this.jumpDelay}if(this.isCharacterGrounded===true)this.isCharacterFallTriggered=false;if(this.useClimbSystem===true){this.castPhysicsClimbingVolumeRay();this.castPhysicsHeightCheckVolumeRay()}if(this.isCharacterNavigating===false&&this.movementAllowed===true){if(this.isCharacterGrounded===true){if(this.delayJumpTimer<=0)this.isCharacterJumpFrame=(this.canPlayerJump===true&&this.isJumpPressed===true);if(this.isPerformingAction===false&&this.isCharacterJumpFrame===true&&this.useClimbSystem===true&&this.climbContact===true&&this.heightContact===true){var climbAction=-1;var rotateSpeed=1;var rotateTowards=false;var matchHeight=false;var startTime=0;var targetTime=0;var targetOffset=0;var hitHeight=parseFloat(this.heightContactPoint.y.toFixed(2));var playerHeight=parseFloat(this.transform.position.y.toFixed(2));var obstacleHeight=parseFloat((hitHeight-playerHeight).toFixed(2));if(obstacleHeight>=this.maxHeightRanges.stepUpRange.minimumHeight&&obstacleHeight<=this.maxHeightRanges.stepUpRange.maximumHeight){climbAction=PROJECT.ActionAnimationType.StepUp;rotateSpeed=this.maxHeightRanges.stepUpRange.rotationSpeed;rotateTowards=this.maxHeightRanges.stepUpRange.rotateTowards;matchHeight=this.maxHeightRanges.stepUpRange.matchHeight;startTime=this.maxHeightRanges.stepUpRange.startTime;targetTime=this.maxHeightRanges.stepUpRange.targetTime;targetOffset=this.maxHeightRanges.stepUpRange.targetOffset}else if(obstacleHeight>=this.maxHeightRanges.jumpUpRange.minimumHeight&&obstacleHeight<=this.maxHeightRanges.jumpUpRange.maximumHeight){climbAction=PROJECT.ActionAnimationType.JumpUp;rotateSpeed=this.maxHeightRanges.jumpUpRange.rotationSpeed;rotateTowards=this.maxHeightRanges.jumpUpRange.rotateTowards;matchHeight=this.maxHeightRanges.jumpUpRange.matchHeight;startTime=this.maxHeightRanges.jumpUpRange.startTime;targetTime=this.maxHeightRanges.jumpUpRange.targetTime;targetOffset=this.maxHeightRanges.jumpUpRange.targetOffset}else if(obstacleHeight>=this.maxHeightRanges.climbUpRange.minimumHeight&&obstacleHeight<=this.maxHeightRanges.climbUpRange.maximumHeight){climbAction=PROJECT.ActionAnimationType.ClimbUp;rotateSpeed=this.maxHeightRanges.climbUpRange.rotationSpeed;rotateTowards=this.maxHeightRanges.climbUpRange.rotateTowards;matchHeight=this.maxHeightRanges.climbUpRange.matchHeight;startTime=this.maxHeightRanges.climbUpRange.startTime;targetTime=this.maxHeightRanges.climbUpRange.targetTime;targetOffset=this.maxHeightRanges.climbUpRange.targetOffset}if(climbAction>=0){if(this.canClimbObstaclePredicate==null||this.canClimbObstaclePredicate(climbAction)===true){this.isCharacterJumpFrame=false;this.isCharacterJumping=false;this.isCharacterLanding=false;this.isCharacterRising=false;this.playActionAnimation(climbAction,false,true);this.playerRotationSpeed=rotateSpeed;this.rotatePlayerTowards=rotateTowards;this.matchTargetHeight=matchHeight;this.matchStartTime=(startTime-PROJECT.ThirdPersonPlayerController.MIN_TIMER_OFFSET);this.matchTargetTime=(targetTime-PROJECT.ThirdPersonPlayerController.MIN_TIMER_OFFSET);this.matchTargetOffset=targetOffset;this.lastTargetHeight=hitHeight;this.lastStartHeight=null;this.lockTargetHeight=false}}}if(this.isCharacterJumpFrame===true&&this.jumpSpeed>0){this.isCharacterJumping=true;this.characterController.jump(this.jumpSpeed);if(this.jumpDelay>0)this.delayJumpTimer=this.jumpDelay;if(this.airbornTimeout>0)this.minJumpTimer=(this.airbornTimeout+this.deltaTime);this.lastJumpVelocity.set(this.movementVelocity.x,0,this.movementVelocity.z)}if(this.onBeforeMoveObservable&&this.onBeforeMoveObservable.hasObservers()){this.onBeforeMoveObservable.notifyObservers(this.transform)}if(this.animationState!=null&&this.rootMotion===true){var rootMotion=this.getDeltaMotionPosition();this.movementVelocity.set(rootMotion.x,0,rootMotion.z);BABYLON.Vector3.TransformNormalToRef(this.movementVelocity,this.transform.getWorldMatrix(),this.movementVelocity);this.characterController.move(this.movementVelocity)}else{this.characterController.move(this.movementVelocity)}}}else{}}};ThirdPersonPlayerController.prototype.updateCameraController=function(){if(this.enableInput===false)return;if(this.cameraPivot!=null){if(this.targetCameraOffset.x!==0||this.targetCameraOffset.y!==0||this.targetCameraOffset.z!==0){this.cameraPivotOffset.copyFrom(this.targetCameraOffset)}else{this.cameraPivotOffset.set(0,this.pivotHeight,0)}UNITY.Utilities.GetAbsolutePositionToRef(this.transform,this.cameraPivot.position,this.cameraPivotOffset);if(this.rotateCamera===true){BABYLON.Quaternion.FromEulerAnglesToRef(this.playerRotationVector.x,this.playerRotationVector.y,0,this.cameraPivot.rotationQuaternion)}}if(this.rotateCamera===true&&this.cameraNode!=null){if(this.cameraSmoothing<=0)this.cameraSmoothing=5.0;if(this.cameraCollisions===true){var parentNode=this.cameraNode.parent;this.dollyDirection.scaleToRef(this.maxDistance,this.scaledMaxDirection);this.dollyDirection.scaleToRef(this.cameraDistance,this.scaledCamDirection);UNITY.Utilities.GetAbsolutePositionToRef(parentNode,this.parentNodePosition);UNITY.Utilities.TransformPointToRef(parentNode,this.scaledMaxDirection,this.maximumCameraPos);var contact=false;var distance=0;if(this.characterController!=null){if(this.cameraRaycastShape!=null){var query={shape:this.cameraRaycastShape,rotation:this.cameraNode.rotationQuaternion,startPosition:this.parentNodePosition,endPosition:this.maximumCameraPos,ignoreBody:this.transform.physicsBody,shouldHitTriggers:false};var result=UNITY.RigidbodyPhysics.Shapecast(query);contact=(result!=null&&result.world!=null&&result.world.hasHit===true&&result.world.body!=null);distance=(contact===true)?BABYLON.Vector3.Distance(this.parentNodePosition,result.world.hitPoint):0}}if(contact===true){this.cameraDistance=BABYLON.Scalar.Clamp((distance*this.distanceFactor),this.minimumDistance,this.maxDistance);if(this.cameraNode.position.x!==this.scaledCamDirection.x||this.cameraNode.position.y!==this.scaledCamDirection.y||this.cameraNode.position.z!==this.scaledCamDirection.z){BABYLON.Vector3.LerpToRef(this.cameraNode.position,this.scaledCamDirection,(this.deltaTime*this.cameraSmoothing),this.cameraNode.position)}}else{if(this.mouseWheel===true){if(UNITY.InputController.IsWheelScrolling()){var wheel=UNITY.InputController.GetUserInput(UNITY.UserInputAxis.Wheel);if(wheel<0){var zoomOutSpeed=(this.scrollSpeed*this.deltaTime);this.boomPosition.z=BABYLON.Scalar.MoveTowards(this.boomPosition.z,-this.maxDistance,zoomOutSpeed)}else if(wheel>0){var zoomInSpeed=(this.scrollSpeed*this.deltaTime);this.boomPosition.z=BABYLON.Scalar.MoveTowards(this.boomPosition.z,-this.minimumDistance,zoomInSpeed)}}}if(this.cameraNode.position.x!==this.boomPosition.x||this.cameraNode.position.y!==this.boomPosition.y||this.cameraNode.position.z!==this.boomPosition.z){BABYLON.Vector3.LerpToRef(this.cameraNode.position,this.boomPosition,(this.deltaTime*this.cameraSmoothing),this.cameraNode.position)}}}else{if(this.cameraNode.position.x!==this.boomPosition.x||this.cameraNode.position.y!==this.boomPosition.y||this.cameraNode.position.z!==this.boomPosition.z){BABYLON.Vector3.LerpToRef(this.cameraNode.position,this.boomPosition,(this.deltaTime*this.cameraSmoothing),this.cameraNode.position)}}}this.updateSmoothBoomArmLength()};ThirdPersonPlayerController.prototype.getBoomArmMaxDistance=function(){return this.maxDistance};ThirdPersonPlayerController.prototype.setBoomArmMaxDistance=function(distance){this.maxDistance=Math.abs(distance)};ThirdPersonPlayerController.prototype.setSmoothBoomArmLength=function(length,speed,updateMaxDistance){if(updateMaxDistance===void 0){updateMaxDistance=true}var absoluteLength=Math.abs(length);this.smoothBoomArmLength=-absoluteLength;this.smoothBoomArmSpeed=speed;if(updateMaxDistance===true){var absoluteDistance=Math.abs(this.maxDistance);if(absoluteLength>absoluteDistance){this.setBoomArmMaxDistance(absoluteLength)}}};ThirdPersonPlayerController.prototype.updateSmoothBoomArmLength=function(){if(this.smoothBoomArmLength!=null&&this.smoothBoomArmSpeed!=null){if(this.boomPosition.z!==this.smoothBoomArmLength){this.boomPosition.z=BABYLON.Scalar.MoveTowards(this.boomPosition.z,this.smoothBoomArmLength,(this.smoothBoomArmSpeed*this.getDeltaSeconds()))}else{this.smoothBoomArmLength=null;this.smoothBoomArmSpeed=null}}};ThirdPersonPlayerController.prototype.castPhysicsClimbingVolumeRay=function(){var raycast=null;this.climbContact=false;this.climbContactNode=null;this.climbContactPoint.set(0,0,0);this.climbContactNormal.set(0,0,0);this.climbContactAngle=0;this.climbContactDistance=0;var playerTransformForwardDirection=UTIL.TransformDirection(this.transform,this.forwardDirection);this.offsetClimbRaycastPosition.set(0,this.rayClimbOffset,0);UNITY.Utilities.GetAbsolutePositionToRef(this.transform,this.startClimbRaycastPosition,this.offsetClimbRaycastPosition);UNITY.Utilities.GetAbsolutePositionToRef(this.transform,this.endClimbRaycastPosition,this.forwardDirection.scale(this.rayClimbLength));this.endClimbRaycastPosition.y+=this.rayClimbOffset;if(raycast!=null&&raycast.hasHit===true&&raycast.collisionObject!=null&&raycast.collisionObject.entity!=null){var checkTag=UNITY.SceneManager.GetTransformTag(raycast.collisionObject.entity);if(checkTag===this.climbVolumeTag){this.climbContact=true;this.climbContactNode=raycast.collisionObject.entity;if(raycast.hitPoint!=null)this.climbContactPoint.copyFrom(raycast.hitPoint);if(raycast.hitNormal!=null)this.climbContactNormal.copyFrom(raycast.hitNormal);this.climbContactAngle=(this.climbContactNormal!=null)?Math.abs(UNITY.Utilities.GetAngle(this.climbContactNormal,BABYLON.Vector3.UpReadOnly)):0;this.climbContactDistance=raycast.hitDistance}}if(this.showDebugColliders===true){if(this.climbSensorLine==null)this.climbSensorLine=new UNITY.LinesMeshRenderer(this.transform.name+".ClimbingSensorLine",this.scene);if(raycast!=null&&this.climbContact===true){this.climbSensorLine.drawLine([this.startClimbRaycastPosition,raycast.hitPoint],BABYLON.Color3.Red())}else{this.climbSensorLine.drawLine([this.startClimbRaycastPosition,this.endClimbRaycastPosition],BABYLON.Color3.Green())}}};ThirdPersonPlayerController.prototype.castPhysicsHeightCheckVolumeRay=function(){var raycast=null;this.heightContact=false;this.heightContactNode=null;this.heightContactPoint.set(0,0,0);this.heightContactNormal.set(0,0,0);this.heightContactAngle=0;this.heightContactDistance=0;var playerTransformHeightDirection=UTIL.TransformDirection(this.transform,this.downDirection);if(this.climbContact===true){this.endHeightRaycastPosition.copyFrom(this.climbContactPoint);this.startHeightRaycastPosition.copyFrom(this.climbContactPoint);this.startHeightRaycastPosition.addInPlace(BABYLON.Vector3.UpReadOnly.scale(this.rayHeightLength))}else{this.offsetHeightRaycastPosition.set(0,this.rayHeightOffset,this.rayClimbLength);UNITY.Utilities.GetAbsolutePositionToRef(this.transform,this.startHeightRaycastPosition,this.offsetHeightRaycastPosition);this.endHeightRaycastPosition.copyFrom(this.startHeightRaycastPosition);this.endHeightRaycastPosition.addInPlace(this.downDirection.scale(this.rayHeightLength))}if(raycast!=null&&raycast.hasHit===true&&raycast.collisionObject!=null&&raycast.collisionObject.entity!=null){var checkTag=UNITY.SceneManager.GetTransformTag(raycast.collisionObject.entity);if(checkTag===this.climbVolumeTag){this.heightContact=true;this.heightContactNode=raycast.collisionObject.entity;if(raycast.hitPoint!=null)this.heightContactPoint.copyFrom(raycast.hitPoint);if(raycast.hitNormal!=null)this.heightContactNormal.copyFrom(raycast.hitNormal);this.heightContactAngle=(this.heightContactNormal!=null)?Math.abs(UNITY.Utilities.GetAngle(this.heightContactNormal,BABYLON.Vector3.UpReadOnly)):0;this.heightContactDistance=raycast.hitDistance}}if(this.showDebugColliders===true){if(this.heightSensorLine==null)this.heightSensorLine=new UNITY.LinesMeshRenderer(this.transform.name+".HeightCheckSensorLine",this.scene);if(raycast!=null&&this.heightContact===true){this.heightSensorLine.drawLine([this.startHeightRaycastPosition,raycast.hitPoint],BABYLON.Color3.Red())}else{this.heightSensorLine.drawLine([this.startHeightRaycastPosition,this.endHeightRaycastPosition],BABYLON.Color3.Green())}}};ThirdPersonPlayerController.prototype.getCheckedVerticalVelocity=function(){var currentVelocity=(this.characterController!=null)?this.characterController.getVerticalVelocity():0;return(Math.abs(currentVelocity)>=PROJECT.ThirdPersonPlayerController.MIN_VERTICAL_VELOCITY)?currentVelocity:0};ThirdPersonPlayerController.prototype.destroyPlayerController=function(){this.cameraPivot=null;this.cameraNode=null;this.animationState=null;this.characterController=null;this.onPreUpdateObservable.clear();this.onPreUpdateObservable=null;this.onBeforeMoveObservable.clear();this.onBeforeMoveObservable=null;this.onPostUpdateObservable.clear();this.onPostUpdateObservable=null};ThirdPersonPlayerController.prototype.validateAnimationStateParams=function(){if(this.animationStateParams==null){this.animationStateParams={moveDirection:"Direction",inputMagnitude:"Magnitude",horizontalInput:"Horizontal",verticalInput:"Vertical",mouseXInput:"MouseX",mouseYInput:"MouseY",heightInput:"Height",speedInput:"Speed",jumpFrame:"Jumped",jumpState:"Jump",actionState:"Action",fallingState:"FreeFall",slidingState:"Sliding",groundedState:"Grounded"}}};ThirdPersonPlayerController.MIN_VERTICAL_VELOCITY=0.01;ThirdPersonPlayerController.MIN_GROUND_DISTANCE=0.15;ThirdPersonPlayerController.MIN_MOVE_EPSILON=0.001;ThirdPersonPlayerController.MIN_TIMER_OFFSET=0;ThirdPersonPlayerController.MIN_SLOPE_LIMIT=0;ThirdPersonPlayerController.PLAYER_HEIGHT="playerHeight";return ThirdPersonPlayerController}(UNITY.ScriptComponent));PROJECT.ThirdPersonPlayerController=ThirdPersonPlayerController;var ThirdPersonControl;(function(ThirdPersonControl){ThirdPersonControl[ThirdPersonControl["ThirdPersonTurning"]=0]="ThirdPersonTurning";ThirdPersonControl[ThirdPersonControl["ThirdPersonForward"]=1]="ThirdPersonForward"})(ThirdPersonControl=PROJECT.ThirdPersonControl||(PROJECT.ThirdPersonControl={}))})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var FxParticleSystem=(function(_super){__extends(FxParticleSystem,_super);function FxParticleSystem(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.m_particleEmitter=null;_this.m_particleSystem=null;return _this}FxParticleSystem.prototype.getParticleEmitter=function(){return this.m_particleEmitter};FxParticleSystem.prototype.getParticleSystem=function(){return this.m_particleSystem};FxParticleSystem.prototype.awake=function(){var rootUrl=UNITY.SceneManager.GetRootUrl(this.scene);var classType=this.getProperty("classType",0);var particleText=this.getProperty("base64ParticleSystem");var playOnAwake=this.getProperty("playOnAwake",false);var particleTexture=this.getProperty("particleTexture");this.m_particleEmitter=this.getAbstractMesh();if(this.m_particleEmitter==null){this.m_particleEmitter=BABYLON.MeshBuilder.CreateBox(this.transform.name+".Emitter",{size:0.25},this.scene);this.m_particleEmitter.parent=this.transform;this.m_particleEmitter.position.set(0,0,0);this.m_particleEmitter.isVisible=false;this.m_particleEmitter.isPickable=false;this.m_particleEmitter.material=UNITY.Utilities.GetColliderMaterial(this.scene)}if(particleText!=null&&particleText!==""){var particleJson=window.atob(particleText);if(particleJson!=null&&particleJson!==""){var particleParsed=JSON.parse(particleJson);if(particleParsed!=null){if(particleParsed.texture!=null&&particleTexture!=null){particleParsed.texture.name=particleTexture.filename;particleParsed.texture.url=particleTexture.filename}if(classType===1){this.m_particleSystem=BABYLON.GPUParticleSystem.Parse(particleParsed,this.scene,rootUrl)}else{this.m_particleSystem=BABYLON.ParticleSystem.Parse(particleParsed,this.scene,rootUrl)}if(this.m_particleSystem!=null){if(this.m_particleEmitter!=null)this.m_particleSystem.emitter=this.m_particleEmitter;if(playOnAwake===false)this.m_particleSystem.stop()}}}}};FxParticleSystem.prototype.destroy=function(){this.m_particleEmitter=null;if(this.m_particleSystem!=null){this.m_particleSystem.dispose();this.m_particleSystem=null}};return FxParticleSystem}(UNITY.ScriptComponent));PROJECT.FxParticleSystem=FxParticleSystem})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var SkyMaterialSystem=(function(_super){__extends(SkyMaterialSystem,_super);function SkyMaterialSystem(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.skyfog=false;_this.skysize=1000;_this.probesize=128;_this.reflections=false;_this.reflectlevel=1;_this.skytintcolor=new BABYLON.Color3(1,1,1);_this.m_skyboxMesh=null;_this.m_skyMaterial=null;_this.m_reflectProbe=null;return _this}SkyMaterialSystem.prototype.getSkyboxMesh=function(){return this.m_skyboxMesh};SkyMaterialSystem.prototype.getSkyMaterial=function(){return this.m_skyMaterial};SkyMaterialSystem.prototype.getReflectionProbe=function(){return this.m_reflectProbe};SkyMaterialSystem.prototype.awake=function(){this.awakeSkyboxMaterial()};SkyMaterialSystem.prototype.start=function(){};SkyMaterialSystem.prototype.update=function(){};SkyMaterialSystem.prototype.late=function(){};SkyMaterialSystem.prototype.after=function(){};SkyMaterialSystem.prototype.destroy=function(){this.destroySkyboxMaterial()};SkyMaterialSystem.prototype.awakeSkyboxMaterial=function(){this.skyfog=this.getProperty("applyMeshFog",this.skyfog);this.skysize=this.getProperty("boxSize",this.skysize);this.probesize=this.getProperty("probeSize",this.probesize);this.reflections=this.getProperty("reflections",this.reflections);this.reflectlevel=this.getProperty("reflectLevel",this.reflectlevel);var tintColor=this.getProperty("tintColor");if(tintColor!=null)this.skytintcolor=UNITY.Utilities.ParseColor3(tintColor);this.m_skyboxMesh=BABYLON.MeshBuilder.CreateBox("Ambient Skybox",{size:this.skysize},this.scene);this.m_skyboxMesh.position.set(0,0,0);this.m_skyboxMesh.infiniteDistance=true;this.m_skyboxMesh.applyFog=this.skyfog;if(this.scene.useRightHandedSystem===true)this.m_skyboxMesh.scaling.x*=-1;this.m_skyMaterial=new BABYLON.SkyMaterial(this.transform.name+".SkyMaterial",this.scene);this.m_skyMaterial.backFaceCulling=false;this.setSkyboxTintColor(this.skytintcolor);this.m_skyMaterial.luminance=this.getProperty("luminance",this.m_skyMaterial.luminance);this.m_skyMaterial.turbidity=this.getProperty("turbidity",this.m_skyMaterial.turbidity);this.m_skyMaterial.rayleigh=this.getProperty("rayleigh",this.m_skyMaterial.rayleigh);this.m_skyMaterial.mieCoefficient=this.getProperty("mieCoefficient",this.m_skyMaterial.mieCoefficient);this.m_skyMaterial.mieDirectionalG=this.getProperty("mieDirectionalG",this.m_skyMaterial.mieDirectionalG);this.m_skyMaterial.distance=this.getProperty("distance",this.m_skyMaterial.distance);this.m_skyMaterial.inclination=this.getProperty("inclination",this.m_skyMaterial.inclination);this.m_skyMaterial.azimuth=this.getProperty("azimuth",this.m_skyMaterial.azimuth);var camOffsetData=this.getProperty("cameraOffset");if(camOffsetData!=null)this.m_skyMaterial.cameraOffset=UNITY.Utilities.ParseVector3(camOffsetData);this.m_skyMaterial.useSunPosition=this.getProperty("useSunPosition",this.m_skyMaterial.useSunPosition);this.m_skyMaterial.sunPosition=new BABYLON.Vector3(0,50,0);if(this.scene.metadata!=null&&this.scene.metadata.unity!=null&&this.scene.metadata.unity){if(this.scene.metadata.unity.sunposition!=null){this.m_skyMaterial.sunPosition=UNITY.Utilities.ParseVector3(this.scene.metadata.unity.sunposition)}}this.m_skyboxMesh.material=this.m_skyMaterial;if(this.reflections===true){this.m_reflectProbe=new BABYLON.ReflectionProbe("Skybox-ReflectionProbe",this.probesize,this.scene);this.m_reflectProbe.renderList.push(this.m_skyboxMesh);this.scene.customRenderTargets.push(this.m_reflectProbe.cubeTexture);this.scene.environmentTexture=this.m_reflectProbe.cubeTexture;this.scene.environmentIntensity=this.reflectlevel}};SkyMaterialSystem.prototype.destroySkyboxMaterial=function(){if(this.m_skyboxMesh!=null){this.m_skyboxMesh.dispose();this.m_skyboxMesh=null}if(this.m_reflectProbe!=null){this.m_reflectProbe.dispose();this.m_reflectProbe=null}if(this.m_skyMaterial!=null){this.m_skyMaterial.dispose();this.m_skyMaterial=null}};SkyMaterialSystem.prototype.setSkyboxTintColor=function(color){var colors=[];var numVertices=this.m_skyboxMesh.getTotalVertices();for(var i=0;i<numVertices;++i){colors.push(color.r,color.g,color.b,1.0)}this.m_skyboxMesh.setVerticesData("color",colors);this.m_skyboxMesh.useVertexColors=true};return SkyMaterialSystem}(UNITY.ScriptComponent));PROJECT.SkyMaterialSystem=SkyMaterialSystem})(PROJECT||(PROJECT={}));var PROJECT;(function(PROJECT){var WaterMaterialSystem=(function(_super){__extends(WaterMaterialSystem,_super);function WaterMaterialSystem(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.waterTag="Water";_this.targetSize=new BABYLON.Vector2(128,128);_this.renderSize=new BABYLON.Vector2(512,512);_this.depthFactor=1.0;_this.reflectSkybox=true;_this.subDivisions=32;_this.heightOffset=1.0;_this.windDirection=new BABYLON.Vector2(0,1);_this.windForce=6;_this.waveSpeed=1.0;_this.waveLength=0.4;_this.waveHeight=0.4;_this.bumpHeight=0.4;_this.waterColor=new BABYLON.Color3(0.1,0.1,0.6);_this.colorBlendFactor=0.2;_this.waterColor2=new BABYLON.Color3(0.1,0.1,0.6);_this.colorBlendFactor2=0.2;_this.disableClipPlane=false;_this.m_waterGeometry=null;_this.m_waterMaterial=null;return _this}WaterMaterialSystem.prototype.getWaterGeometry=function(){return this.m_waterGeometry};WaterMaterialSystem.prototype.getWaterMaterial=function(){return this.m_waterMaterial};WaterMaterialSystem.prototype.awake=function(){var _this=this;this.waterTag=this.getProperty("waterTag",this.waterTag);this.depthFactor=this.getProperty("depthFactor",this.depthFactor);this.subDivisions=this.getProperty("subDivisions",this.subDivisions);this.heightOffset=this.getProperty("heightOffset",this.heightOffset);this.reflectSkybox=this.getProperty("reflectSkybox",this.reflectSkybox);this.windForce=this.getProperty("windForce",this.windForce);this.waveSpeed=this.getProperty("waveSpeed",this.waveSpeed);this.waveLength=this.getProperty("waveLength",this.waveLength);this.waveHeight=this.getProperty("waveHeight",this.waveHeight);this.bumpHeight=this.getProperty("bumpHeight",this.bumpHeight);this.bumpSuperimpose=this.getProperty("bumpSuperimpose",this.bumpSuperimpose);this.bumpAffectsReflection=this.getProperty("bumpAffectsReflection",this.bumpAffectsReflection);this.colorBlendFactor=this.getProperty("colorBlendFactor",this.colorBlendFactor);this.colorBlendFactor2=this.getProperty("colorBlendFactor2",this.colorBlendFactor2);this.disableClipPlane=this.getProperty("disableClipPlane",this.disableClipPlane);this.fresnelSeparate=this.getProperty("fresnelSeparate",this.fresnelSeparate);var wcolor1=this.getProperty("waterColor");this.waterColor=UNITY.Utilities.ParseColor3(wcolor1);var wcolor2=this.getProperty("waterColor2");this.waterColor2=UNITY.Utilities.ParseColor3(wcolor2);var wdirection=this.getProperty("windDirection");this.windDirection=UNITY.Utilities.ParseVector2(wdirection);var itargetsize=this.getProperty("targetSize");if(itargetsize!=null)this.targetSize=UNITY.Utilities.ParseVector2(itargetsize);var irendersize=this.getProperty("renderSize");if(irendersize!=null)this.renderSize=UNITY.Utilities.ParseVector2(irendersize);var bumpTexture=null;var bumpTextureData=this.getProperty("bumpTexture");if(bumpTextureData!=null)bumpTexture=UNITY.Utilities.ParseTexture(bumpTextureData,this.scene);if(bumpTexture!=null){this.m_waterMaterial=new BABYLON.WaterMaterial(this.transform.name+".Water",this.scene,this.renderSize);this.m_waterMaterial.bumpTexture=bumpTexture;this.m_waterMaterial.windDirection=this.windDirection;this.m_waterMaterial.windForce=this.windForce;this.m_waterMaterial.waveSpeed=this.waveSpeed;this.m_waterMaterial.waveLength=this.waveLength;this.m_waterMaterial.waveHeight=this.waveHeight;this.m_waterMaterial.bumpHeight=this.bumpHeight;this.m_waterMaterial.bumpSuperimpose=this.bumpSuperimpose;this.m_waterMaterial.bumpAffectsReflection=this.bumpAffectsReflection;this.m_waterMaterial.waterColor=this.waterColor;this.m_waterMaterial.colorBlendFactor=this.colorBlendFactor;this.m_waterMaterial.waterColor2=this.waterColor2;this.m_waterMaterial.colorBlendFactor2=this.colorBlendFactor2;this.m_waterMaterial.disableClipPlane=this.disableClipPlane;this.m_waterMaterial.fresnelSeparate=this.fresnelSeparate;if(this.reflectSkybox===true){var skyboxMesh=UNITY.SceneManager.GetDefaultSkybox(this.scene);if(skyboxMesh!=null)this.m_waterMaterial.addToRenderList(skyboxMesh)}if(this.waterTag!=null&&this.waterTag!==""){var waterMeshes=this.scene.getMeshesByTags(this.waterTag);if(waterMeshes!=null&&waterMeshes.length>0){waterMeshes.forEach(function(mesh){_this.m_waterMaterial.addToRenderList(mesh)})}}this.m_waterGeometry=BABYLON.MeshBuilder.CreateGround(this.transform.name+".WaterMesh",{width:this.targetSize.x,height:this.targetSize.y,subdivisions:this.subDivisions,updatable:false},this.scene);this.m_waterGeometry.parent=this.transform;this.m_waterGeometry.position.set(0,this.heightOffset,0);if(this.depthFactor>0)this.m_waterGeometry.scaling.y*=this.depthFactor;this.m_waterGeometry.material=this.m_waterMaterial}else{UNITY.SceneManager.LogWarning("No supported water bump texture for: "+this.transform.name)}};WaterMaterialSystem.prototype.start=function(){};WaterMaterialSystem.prototype.update=function(){};WaterMaterialSystem.prototype.late=function(){};WaterMaterialSystem.prototype.after=function(){};WaterMaterialSystem.prototype.destroy=function(){};return WaterMaterialSystem}(UNITY.ScriptComponent));PROJECT.WaterMaterialSystem=WaterMaterialSystem})(PROJECT||(PROJECT={}));var BABYLON;(function(BABYLON){var WindowsPlatform=(function(){function WindowsPlatform(){}WindowsPlatform.IsXboxLiveUserSignedIn=function(systemUser,player){if(systemUser===void 0){systemUser=null}if(player===void 0){player=UNITY.PlayerNumber.One}if(UNITY.WindowManager.IsWindows()){var user=(systemUser!=null)?BABYLON.WindowsPlatform.GetXboxLiveSystemUser(systemUser,player):BABYLON.WindowsPlatform.GetXboxLiveUser(player);return(user!=null&&user.isSignedIn==true)}else{return false}};WindowsPlatform.XboxLiveUserSignIn=function(player,oncomplete,onerror,onprogress){if(player===void 0){player=UNITY.PlayerNumber.One}if(UNITY.WindowManager.IsWindows()){BABYLON.WindowsPlatform.XboxLiveUserSilentSignIn(player,function(first){if(first.status===Microsoft.Xbox.Services.System.SignInStatus.userInteractionRequired){BABYLON.WindowsPlatform.XboxLiveUserDialogSignIn(player,function(second){if(oncomplete)oncomplete(second)},onerror,onprogress)}else{if(oncomplete)oncomplete(first)}},onerror,onprogress)}};WindowsPlatform.XboxLiveUserSilentSignIn=function(player,oncomplete,onerror,onprogress){if(player===void 0){player=UNITY.PlayerNumber.One}return(UNITY.WindowManager.IsWindows())?BABYLON.WindowsPlatform.GetXboxLiveUser(player).signInSilentlyAsync(null).then(oncomplete,onerror,onprogress):null};WindowsPlatform.XboxLiveUserDialogSignIn=function(player,oncomplete,onerror,onprogress){if(player===void 0){player=UNITY.PlayerNumber.One}return(UNITY.WindowManager.IsWindows())?BABYLON.WindowsPlatform.GetXboxLiveUser(player).signInAsync(null).then(oncomplete,onerror,onprogress):null};WindowsPlatform.LoadXboxLiveUserProfile=function(player,oncomplete,onerror,onprogress){if(player===void 0){player=UNITY.PlayerNumber.One}return(UNITY.WindowManager.IsWindows())?BABYLON.WindowsPlatform.GetXboxLiveUserContext(player).profileService.getUserProfileAsync(BABYLON.WindowsPlatform.GetXboxLiveUser(player).xboxUserId).then(oncomplete,onerror,onprogress):null};WindowsPlatform.GetXboxLiveUser=function(player){if(player===void 0){player=UNITY.PlayerNumber.One}var user=null;if(UNITY.WindowManager.IsWindows()){switch(player){case UNITY.PlayerNumber.One:user=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveUserOne();break;case UNITY.PlayerNumber.Two:user=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveUserTwo();break;case UNITY.PlayerNumber.Three:user=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveUserThree();break;case UNITY.PlayerNumber.Four:user=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveUserFour();break}}return user};WindowsPlatform.GetXboxLiveSystemUser=function(systemUser,player){if(player===void 0){player=UNITY.PlayerNumber.One}var user=null;if(UNITY.WindowManager.IsWindows()){switch(player){case UNITY.PlayerNumber.One:user=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveSystemUserOne(systemUser);break;case UNITY.PlayerNumber.Two:user=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveSystemUserTwo(systemUser);break;case UNITY.PlayerNumber.Three:user=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveSystemUserThree(systemUser);break;case UNITY.PlayerNumber.Four:user=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveSystemUserFour(systemUser);break}}return user};WindowsPlatform.GetXboxLiveUserContext=function(player){if(player===void 0){player=UNITY.PlayerNumber.One}var context=null;if(UNITY.WindowManager.IsWindows()){switch(player){case UNITY.PlayerNumber.One:context=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveContextOne();break;case UNITY.PlayerNumber.Two:context=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveContextTwo();break;case UNITY.PlayerNumber.Three:context=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveContextThree();break;case UNITY.PlayerNumber.Four:context=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveContextFour();break}}return context};WindowsPlatform.ResetXboxLiveUserContext=function(player){if(player===void 0){player=UNITY.PlayerNumber.One}if(UNITY.WindowManager.IsWindows()){switch(player){case UNITY.PlayerNumber.One:window.BabylonToolkit.XboxLive.Plugin.resetXboxLiveUserContextOne();break;case UNITY.PlayerNumber.Two:window.BabylonToolkit.XboxLive.Plugin.resetXboxLiveUserContextTwo();break;case UNITY.PlayerNumber.Three:window.BabylonToolkit.XboxLive.Plugin.resetXboxLiveUserContextThree();break;case UNITY.PlayerNumber.Four:window.BabylonToolkit.XboxLive.Plugin.resetXboxLiveUserContextFour();break}}};WindowsPlatform.GetXboxLiveContextProperty=function(name){return(UNITY.WindowManager.IsWindows())?window.BabylonToolkit.XboxLive.Plugin.getXboxLiveContextProperty(name):null};WindowsPlatform.SetXboxLiveContextProperty=function(name,property){if(UNITY.WindowManager.IsWindows()){window.BabylonToolkit.XboxLive.Plugin.setXboxLiveContextProperty(name,property)}};WindowsPlatform.ResetXboxLivePropertyContexts=function(){if(UNITY.WindowManager.IsWindows()){window.BabylonToolkit.XboxLive.Plugin.resetXboxLivePropertyContexts()}};WindowsPlatform.SetXboxLiveSignOutHandler=function(handler){if(handler===void 0){handler=null}if(UNITY.WindowManager.IsWindows()){window.BabylonToolkit.XboxLive.Plugin.onusersignout=handler}};return WindowsPlatform}());BABYLON.WindowsPlatform=WindowsPlatform})(BABYLON||(BABYLON={}));var UNITY;(function(UNITY){var HavokRaycastVehicle=(function(){function HavokRaycastVehicle(options){this.chassisBody=null;this.wheelInfos=[];this.sliding=false;this.world=null;this.indexRightAxis=0;this.indexForwardAxis=2;this.indexUpAxis=1;this.minimumWheelContacts=4;this.smoothFlyingImpulse=0;this.stabilizingForce=0;this.maxImpulseForce=0;this.currentVehicleSpeedKmHour=0;this.chassisBody=options.chassisBody;this.wheelInfos=[];this.sliding=false;this.world=null;this.indexRightAxis=typeof(options.indexRightAxis)!=='undefined'?options.indexRightAxis:0;this.indexForwardAxis=typeof(options.indexForwardAxis)!=='undefined'?options.indexForwardAxis:2;this.indexUpAxis=typeof(options.indexUpAxis)!=='undefined'?options.indexUpAxis:1}HavokRaycastVehicle.prototype.addWheel=function(options){options=options||{};var info=new UNITY.HavokWheelInfo(options);var index=this.wheelInfos.length;this.wheelInfos.push(info);return index};HavokRaycastVehicle.prototype.getNumWheels=function(){return this.wheelInfos.length};HavokRaycastVehicle.prototype.getWheelInfo=function(wheelIndex){return this.wheelInfos[wheelIndex]};HavokRaycastVehicle.prototype.getSteeringValue=function(wheelIndex){var wheel=this.wheelInfos[wheelIndex];return wheel.steering};HavokRaycastVehicle.prototype.setSteeringValue=function(value,wheelIndex){var wheel=this.wheelInfos[wheelIndex];wheel.steering=value};HavokRaycastVehicle.prototype.applyEngineForce=function(value,wheelIndex){this.wheelInfos[wheelIndex].engineForce=value};HavokRaycastVehicle.prototype.setBrake=function(brake,wheelIndex){this.wheelInfos[wheelIndex].brake=brake};HavokRaycastVehicle.prototype.addToWorld=function(world){this.world=world};HavokRaycastVehicle.prototype.getVehicleAxisWorld=function(axisIndex,result){result.set(axisIndex===0?1:0,axisIndex===1?1:0,axisIndex===2?1:0);BABYLON.Vector3.TransformCoordinatesToRef(result,UNITY.HavokVehicleUtilities.bodyTransform(this.chassisBody,new BABYLON.Matrix),result);return result};HavokRaycastVehicle.prototype.getCurrentSpeedKmHour=function(){return this.currentVehicleSpeedKmHour};HavokRaycastVehicle.prototype.updateVehicle=function(timeStep){var wheelInfos=this.wheelInfos;var numWheels=wheelInfos.length;var chassisBody=this.chassisBody;for(var i=0;i<numWheels;i++){this.updateWheelTransform(i)}var cVel=UNITY.HavokVehicleUtilities.bodyLinearVelocity(chassisBody,new BABYLON.Vector3);var cVelLocal=BABYLON.Vector3.TransformNormalToRef(cVel,UNITY.HavokVehicleUtilities.bodyTransform(chassisBody,new BABYLON.Matrix).invert(),new BABYLON.Vector3);this.currentVehicleSpeedKmHour=cVelLocal.z;var forwardWorld=new BABYLON.Vector3;this.getVehicleAxisWorld(this.indexForwardAxis,forwardWorld);if(BABYLON.Vector3.Dot(forwardWorld,UNITY.HavokVehicleUtilities.bodyLinearVelocity(chassisBody,new BABYLON.Vector3))<0){}for(var i=0;i<numWheels;i++){this.castRay(wheelInfos[i])}var wheelsOnGround=0;for(var i=0;i<numWheels;i++){var wheel=wheelInfos[i];var groundObject=wheel.raycastResult.body;if(groundObject){wheelsOnGround++}}if(wheelsOnGround==0&&this.smoothFlyingImpulse>0){}this.updateSuspension(timeStep);var impulse=new BABYLON.Vector3;for(var i=0;i<numWheels;i++){var wheel=wheelInfos[i];var suspensionForce=wheel.suspensionForce;if(suspensionForce>wheel.maxSuspensionForce){suspensionForce=wheel.maxSuspensionForce}impulse.copyFrom(wheel.raycastResult.hitNormalWorld).scaleInPlace(suspensionForce*timeStep);UNITY.HavokVehicleUtilities.addImpulseAt(chassisBody,impulse,wheel.raycastResult.hitPointWorld)}this.updateFriction(timeStep);if(this.stabilizingForce>0&&this.minimumWheelContacts>0&&wheelsOnGround>=this.minimumWheelContacts){}var hitNormalWorldScaledWithProj=new BABYLON.Vector3;var fwd=new BABYLON.Vector3;var vel=new BABYLON.Vector3;for(i=0;i<numWheels;i++){var wheel=wheelInfos[i];UNITY.HavokVehicleUtilities.velocityAt(chassisBody,wheel.chassisConnectionPointWorld,vel);var m=1;switch(this.indexUpAxis){case 1:m=-1;break}if(wheel.isInContact){this.getVehicleAxisWorld(this.indexForwardAxis,fwd);var proj=BABYLON.Vector3.Dot(fwd,wheel.raycastResult.hitNormalWorld);hitNormalWorldScaledWithProj.copyFrom(wheel.raycastResult.hitNormalWorld).scaleInPlace(proj);fwd.subtractToRef(hitNormalWorldScaledWithProj,fwd);var proj2=BABYLON.Vector3.Dot(fwd,vel);wheel.deltaRotation=m*proj2*timeStep/wheel.radius}if((wheel.sliding||!wheel.isInContact)&&wheel.engineForce!==0&&wheel.useCustomSlidingRotationalSpeed){wheel.deltaRotation=(wheel.engineForce>0?1:-1)*wheel.customSlidingRotationalSpeed*timeStep}if(wheel.locked===true){wheel.deltaRotation=0}wheel.rotation+=wheel.deltaRotation;wheel.deltaRotation*=0.99}};HavokRaycastVehicle.prototype.updateSuspension=function(deltaTime){var chassisBody=this.chassisBody;var chassisMass=UNITY.HavokVehicleUtilities.bodyMass(chassisBody);var wheelInfos=this.wheelInfos;var numWheels=wheelInfos.length;for(var w_it=0;w_it<numWheels;w_it++){var wheel=wheelInfos[w_it];if(wheel.isInContact){var force;var susp_length=wheel.suspensionRestLength;var current_length=wheel.suspensionLength;var length_diff=(susp_length-current_length);force=wheel.suspensionStiffness*length_diff*wheel.clippedInvContactDotSuspension;var projected_rel_vel=wheel.suspensionRelativeVelocity;var susp_damping;if(projected_rel_vel<0){susp_damping=wheel.dampingCompression}else{susp_damping=wheel.dampingRelaxation}force-=susp_damping*projected_rel_vel;wheel.suspensionForce=force*chassisMass;if(wheel.suspensionForce<0){wheel.suspensionForce=0}}else{wheel.suspensionForce=0}}};HavokRaycastVehicle.prototype.removeFromWorld=function(world){world.removeBody(this.chassisBody);this.world=null};HavokRaycastVehicle.prototype.castRay2=function(wheel){var rayvector=UNITY.HavokVehicleUtilities.castRay_rayvector;var target=UNITY.HavokVehicleUtilities.castRay_target;this.updateWheelTransformWorld(wheel);var chassisBody=this.chassisBody;var depth=-1;var raylen=wheel.suspensionRestLength+wheel.radius;wheel.directionWorld.scaleToRef(raylen,rayvector);var source=wheel.chassisConnectionPointWorld;source.addToRef(rayvector,target);var raycastResult=wheel.raycastResult;var param=0;raycastResult.reset();this.world.raycastToRef(source,target,raycastResult);var object=raycastResult.body;wheel.raycastResult.groundObject=0;if(object){raycastResult.distance=BABYLON.Vector3.Distance(source,raycastResult.hitPointWorld);depth=raycastResult.distance;wheel.isInContact=true;var hitDistance=raycastResult.distance;wheel.suspensionLength=hitDistance-wheel.radius;var minSuspensionLength=wheel.suspensionRestLength-wheel.maxSuspensionTravel;var maxSuspensionLength=wheel.suspensionRestLength+wheel.maxSuspensionTravel;if(wheel.suspensionLength<minSuspensionLength){wheel.suspensionLength=minSuspensionLength}if(wheel.suspensionLength>maxSuspensionLength){wheel.suspensionLength=maxSuspensionLength;wheel.raycastResult.reset()}var denominator=BABYLON.Vector3.Dot(wheel.raycastResult.hitNormalWorld,wheel.directionWorld);var chassis_velocity_at_contactPoint=new BABYLON.Vector3;UNITY.HavokVehicleUtilities.velocityAt(chassisBody,wheel.raycastResult.hitPointWorld,chassis_velocity_at_contactPoint);var projVel=BABYLON.Vector3.Dot(wheel.raycastResult.hitNormalWorld,chassis_velocity_at_contactPoint);if(denominator>=-0.1){wheel.suspensionRelativeVelocity=0;wheel.clippedInvContactDotSuspension=1/0.1}else{var inv=-1/denominator;wheel.suspensionRelativeVelocity=projVel*inv;wheel.clippedInvContactDotSuspension=inv}}else{wheel.suspensionLength=wheel.suspensionRestLength+0*wheel.maxSuspensionTravel;wheel.suspensionRelativeVelocity=0.0;wheel.directionWorld.scaleToRef(-1,wheel.raycastResult.hitNormalWorld);wheel.clippedInvContactDotSuspension=1.0}return depth};HavokRaycastVehicle.prototype.castRay=function(wheel){var rayvector=UNITY.HavokVehicleUtilities.castRay_rayvector;var target=UNITY.HavokVehicleUtilities.castRay_target;this.updateWheelTransformWorld(wheel);var chassisBody=this.chassisBody;var depth=-1;var raylen=wheel.suspensionRestLength+wheel.radius;rayvector.copyFrom(wheel.directionWorld).scaleInPlace(raylen);var source=wheel.chassisConnectionPointWorld;target.copyFrom(source).addInPlace(rayvector);var raycastResult=wheel.raycastResult;var param=0;raycastResult.reset();this.world.raycastToRef(source,target,raycastResult);var object=raycastResult.body;wheel.raycastResult.groundObject=0;if(object){var distance=BABYLON.Vector3.Distance(source,raycastResult.hitPointWorld);depth=distance;wheel.raycastResult.hitNormalWorld.copyFrom(raycastResult.hitNormalWorld);wheel.isInContact=true;var hitDistance=distance;wheel.suspensionLength=hitDistance-wheel.radius;var minSuspensionLength=wheel.suspensionRestLength-wheel.maxSuspensionTravel;var maxSuspensionLength=wheel.suspensionRestLength+wheel.maxSuspensionTravel;if(wheel.suspensionLength<minSuspensionLength){wheel.suspensionLength=minSuspensionLength}if(wheel.suspensionLength>maxSuspensionLength){wheel.suspensionLength=maxSuspensionLength;wheel.raycastResult.reset()}var denominator=BABYLON.Vector3.Dot(wheel.raycastResult.hitNormalWorld,wheel.directionWorld);var chassis_velocity_at_contactPoint=new BABYLON.Vector3;UNITY.HavokVehicleUtilities.velocityAt(chassisBody,wheel.raycastResult.hitPointWorld,chassis_velocity_at_contactPoint);var projVel=BABYLON.Vector3.Dot(wheel.raycastResult.hitNormalWorld,chassis_velocity_at_contactPoint);if(denominator>=-0.1){wheel.suspensionRelativeVelocity=0;wheel.clippedInvContactDotSuspension=1/0.1}else{var inv=-1/denominator;wheel.suspensionRelativeVelocity=projVel*inv;wheel.clippedInvContactDotSuspension=inv}}else{wheel.suspensionLength=wheel.suspensionRestLength+0*wheel.maxSuspensionTravel;wheel.suspensionRelativeVelocity=0.0;wheel.raycastResult.hitNormalWorld.copyFrom(wheel.directionWorld).scaleInPlace(-1);wheel.clippedInvContactDotSuspension=1.0}return depth};HavokRaycastVehicle.prototype.updateWheelTransformWorld=function(wheel){wheel.isInContact=false;var chassisBody=this.chassisBody;var transform=UNITY.HavokVehicleUtilities.bodyTransform(chassisBody,new BABYLON.Matrix);BABYLON.Vector3.TransformCoordinatesToRef(wheel.chassisConnectionPointLocal,transform,wheel.chassisConnectionPointWorld);BABYLON.Vector3.TransformNormalToRef(wheel.directionLocal,transform,wheel.directionWorld);BABYLON.Vector3.TransformNormalToRef(wheel.axleLocal,transform,wheel.axleWorld)};HavokRaycastVehicle.prototype.updateWheelTransform=function(wheelIndex){var up=UNITY.HavokVehicleUtilities.tmpVec4;var right=UNITY.HavokVehicleUtilities.tmpVec5;var fwd=UNITY.HavokVehicleUtilities.tmpVec6;var wheel=this.wheelInfos[wheelIndex];this.updateWheelTransformWorld(wheel);wheel.directionLocal.scaleToRef(-1,up);right.copyFrom(wheel.axleLocal);BABYLON.Vector3.CrossToRef(up,right,fwd);fwd.normalize();right.normalize();var steering=wheel.steering;var steeringOrn=new BABYLON.Quaternion;BABYLON.Quaternion.RotationAxisToRef(up,steering,steeringOrn);var rotatingOrn=new BABYLON.Quaternion;BABYLON.Quaternion.RotationAxisToRef(right,wheel.rotation,rotatingOrn);var q=wheel.worldTransform.rotationQuaternion;UNITY.HavokVehicleUtilities.bodyOrientation(this.chassisBody,new BABYLON.Quaternion).multiplyToRef(steeringOrn,q);q.multiplyToRef(rotatingOrn,q);q.normalize();var p=wheel.worldTransform.position;p.copyFrom(wheel.directionWorld);p.scaleToRef(wheel.suspensionLength,p);p.addToRef(wheel.chassisConnectionPointWorld,p);wheel.worldTransform.computeWorldMatrix(true)};HavokRaycastVehicle.prototype.getWheelTransformWorld=function(wheelIndex){return this.wheelInfos[wheelIndex].worldTransform};HavokRaycastVehicle.prototype.updateFriction=function(timeStep){var surfNormalWS_scaled_proj=UNITY.HavokVehicleUtilities.updateFriction_surfNormalWS_scaled_proj;var wheelInfos=this.wheelInfos;var numWheels=wheelInfos.length;var chassisBody=this.chassisBody;var forwardWS=UNITY.HavokVehicleUtilities.updateFriction_forwardWS;var axle=UNITY.HavokVehicleUtilities.updateFriction_axle;var numWheelsOnGround=0;for(var i=0;i<numWheels;i++){var wheel=wheelInfos[i];var groundObject=wheel.raycastResult.body;if(groundObject){numWheelsOnGround++}wheel.sideImpulse=0;wheel.forwardImpulse=0;if(!forwardWS[i]){forwardWS[i]=new BABYLON.Vector3}if(!axle[i]){axle[i]=new BABYLON.Vector3}}for(var i=0;i<numWheels;i++){var wheel=wheelInfos[i];var groundObject=wheel.raycastResult.body;if(groundObject){var axlei=axle[i];var wheelTrans=this.getWheelTransformWorld(i);BABYLON.Vector3.TransformNormalToRef(UNITY.HavokVehicleUtilities.directions[this.indexRightAxis],wheelTrans.getWorldMatrix(),axlei);var surfNormalWS=wheel.raycastResult.hitNormalWorld;var proj=BABYLON.Vector3.Dot(axlei,surfNormalWS);surfNormalWS.scaleToRef(proj,surfNormalWS_scaled_proj);axlei.subtractToRef(surfNormalWS_scaled_proj,axlei);axlei.normalize();BABYLON.Vector3.CrossToRef(surfNormalWS,axlei,forwardWS[i]);forwardWS[i].normalize();wheel.sideImpulse=UNITY.HavokVehicleUtilities.resolveSingleBilateral(chassisBody,wheel.raycastResult.hitPointWorld,groundObject,wheel.raycastResult.hitPointWorld,axlei);wheel.sideImpulse*=UNITY.HavokVehicleUtilities.sideFrictionStiffness2}}var sideFactor=1;var fwdFactor=0.5;this.sliding=false;for(var i=0;i<numWheels;i++){var wheel=wheelInfos[i];var groundObject=wheel.raycastResult.body;var rollingFriction=0;wheel.slipInfo=1;if(groundObject){var defaultRollingFrictionImpulse=0;var maxImpulse=wheel.brake?wheel.brake:defaultRollingFrictionImpulse;rollingFriction=UNITY.HavokVehicleUtilities.calcRollingFriction(chassisBody,groundObject,wheel.raycastResult.hitPointWorld,forwardWS[i],maxImpulse);rollingFriction+=wheel.engineForce*timeStep;var factor=maxImpulse/rollingFriction;wheel.slipInfo*=factor}wheel.forwardImpulse=0;wheel.skidInfo=1;if(groundObject){wheel.skidInfo=1;var maximp=wheel.suspensionForce*timeStep*wheel.frictionSlip;var maximpSide=maximp;var maximpSquared=maximp*maximpSide;wheel.forwardImpulse=rollingFriction;var x=wheel.forwardImpulse*fwdFactor;var y=wheel.sideImpulse*sideFactor;var impulseSquared=x*x+y*y;wheel.sliding=false;if(impulseSquared>maximpSquared){this.sliding=true;wheel.sliding=true;var factor=maximp/Math.sqrt(impulseSquared);wheel.skidInfo*=factor}}}if(this.sliding){for(var i=0;i<numWheels;i++){var wheel=wheelInfos[i];if(wheel.sideImpulse!==0){if(wheel.skidInfo<1){wheel.forwardImpulse*=wheel.skidInfo;wheel.sideImpulse*=wheel.skidInfo}}}}for(var i=0;i<numWheels;i++){var wheel=wheelInfos[i];var rel_pos=new BABYLON.Vector3;wheel.raycastResult.hitPointWorld.subtractToRef(UNITY.HavokVehicleUtilities.bodyPosition(chassisBody,new BABYLON.Vector3),rel_pos);if(wheel.forwardImpulse!==0){var impulse=new BABYLON.Vector3;impulse.copyFrom(forwardWS[i]).scaleInPlace(wheel.forwardImpulse);UNITY.HavokVehicleUtilities.addImpulseAt(chassisBody,impulse,wheel.raycastResult.hitPointWorld)}if(wheel.sideImpulse!==0){var groundObject=wheel.raycastResult.body;var rel_pos2=new BABYLON.Vector3;wheel.raycastResult.hitPointWorld.subtractToRef(UNITY.HavokVehicleUtilities.bodyPosition(groundObject,new BABYLON.Vector3),rel_pos2);var sideImp=new BABYLON.Vector3;sideImp.copyFrom(axle[i]).scaleInPlace(wheel.sideImpulse);BABYLON.Vector3.TransformNormalToRef(rel_pos,UNITY.HavokVehicleUtilities.bodyTransform(chassisBody,new BABYLON.Matrix).invert(),rel_pos);rel_pos['xyz'[this.indexUpAxis]]*=wheel.rollInfluence;BABYLON.Vector3.TransformNormalToRef(rel_pos,UNITY.HavokVehicleUtilities.bodyTransform(chassisBody,new BABYLON.Matrix),rel_pos);UNITY.HavokVehicleUtilities.addImpulseAt(chassisBody,sideImp,UNITY.HavokVehicleUtilities.bodyPosition(chassisBody,new BABYLON.Vector3).add(rel_pos));sideImp.scaleToRef(-1,sideImp);UNITY.HavokVehicleUtilities.addImpulseAt(groundObject,sideImp,wheel.raycastResult.hitPointWorld)}}};return HavokRaycastVehicle}());UNITY.HavokRaycastVehicle=HavokRaycastVehicle;var HavokWheelInfo=(function(){function HavokWheelInfo(options){this.maxSuspensionTravel=0;this.customSlidingRotationalSpeed=0;this.useCustomSlidingRotationalSpeed=0;this.sliding=false;this.visualTravelRange=0;this.invertDirection=false;this.isInContact=false;this.hub=null;this.spinner=null;this.defaultFriction=10;this.steeringAngle=0;this.rotationBoost=0;this.locked=false;options=UNITY.HavokVehicleUtilities.Utilsdefaults(options,{chassisConnectionPointLocal:new BABYLON.Vector3,chassisConnectionPointWorld:new BABYLON.Vector3,directionLocal:new BABYLON.Vector3,directionWorld:new BABYLON.Vector3,axleLocal:new BABYLON.Vector3,axleWorld:new BABYLON.Vector3,suspensionRestLength:1,suspensionMaxLength:2,radius:1,suspensionStiffness:100,dampingCompression:10,dampingRelaxation:10,frictionSlip:10000,steering:0,rotation:0,deltaRotation:0,rollInfluence:0.01,maxSuspensionForce:Number.MAX_VALUE,isFrontWheel:true,clippedInvContactDotSuspension:1,suspensionRelativeVelocity:0,suspensionForce:0,skidInfo:0,invertDirection:false,suspensionLength:0,maxSuspensionTravel:1,useCustomSlidingRotationalSpeed:false,customSlidingRotationalSpeed:-0.1});this.maxSuspensionTravel=options.maxSuspensionTravel;this.customSlidingRotationalSpeed=options.customSlidingRotationalSpeed;this.useCustomSlidingRotationalSpeed=options.useCustomSlidingRotationalSpeed;this.sliding=false;this.chassisConnectionPointLocal=options.chassisConnectionPointLocal.clone();this.chassisConnectionPointWorld=options.chassisConnectionPointLocal.clone();this.directionLocal=options.directionLocal.clone();this.directionWorld=options.directionLocal.clone();this.axleLocal=options.axleLocal.clone();this.axleWorld=options.axleLocal.clone();this.suspensionRestLength=options.suspensionRestLength;this.suspensionMaxLength=options.suspensionMaxLength;this.radius=options.radius;this.suspensionStiffness=options.suspensionStiffness;this.dampingCompression=options.dampingCompression;this.dampingRelaxation=options.dampingRelaxation;this.frictionSlip=options.frictionSlip;this.steering=0;this.rotation=0;this.deltaRotation=0;this.rollInfluence=options.rollInfluence;this.maxSuspensionForce=options.maxSuspensionForce;this.invertDirection=options.invertDirection;this.engineForce=0;this.brake=0;this.isFrontWheel=options.isFrontWheel;this.clippedInvContactDotSuspension=1;this.suspensionRelativeVelocity=0;this.suspensionForce=0;this.skidInfo=0;this.suspensionLength=0;this.sideImpulse=0;this.forwardImpulse=0;this.raycastResult=new BABYLON.PhysicsRaycastResult;this.raycastResult.directionWorld=new BABYLON.Vector3;this.worldTransform=new BABYLON.TransformNode("");this.worldTransform.rotationQuaternion=new BABYLON.Quaternion;this.isInContact=false}HavokWheelInfo.prototype.updateWheel=function(chassis){var raycastResult=this.raycastResult;if(this.isInContact){var project=BABYLON.Vector3.Dot(raycastResult.hitNormalWorld,this.raycastResult.directionWorld);raycastResult.hitPointWorld.subtractToRef(UNITY.HavokVehicleUtilities.bodyPosition(chassis,new BABYLON.Vector3),UNITY.HavokVehicleUtilities.relpos);UNITY.HavokVehicleUtilities.velocityAt(chassis,UNITY.HavokVehicleUtilities.relpos,UNITY.HavokVehicleUtilities.chassis_velocity_at_contactPoint);var projVel=BABYLON.Vector3.Dot(raycastResult.hitNormalWorld,UNITY.HavokVehicleUtilities.chassis_velocity_at_contactPoint);if(project>=-0.1){this.suspensionRelativeVelocity=0.0;this.clippedInvContactDotSuspension=1.0/0.1}else{var inv=-1/project;this.suspensionRelativeVelocity=projVel*inv;this.clippedInvContactDotSuspension=inv}}else{this.raycastResult.suspensionLength=this.suspensionRestLength;this.suspensionRelativeVelocity=0.0;raycastResult.hitNormalWorld.copyFrom(this.raycastResult.directionWorld).scaleInPlace(-1);this.clippedInvContactDotSuspension=1.0}};return HavokWheelInfo}());UNITY.HavokWheelInfo=HavokWheelInfo;var HavokVehicleUtilities=(function(){function HavokVehicleUtilities(){}HavokVehicleUtilities.calcRollingFriction=function(body0,body1,frictionPosWorld,frictionDirectionWorld,maxImpulse){var j1=0;var contactPosWorld=frictionPosWorld;var vel1=UNITY.HavokVehicleUtilities.calcRollingFriction_vel1;var vel2=UNITY.HavokVehicleUtilities.calcRollingFriction_vel2;var vel=UNITY.HavokVehicleUtilities.calcRollingFriction_vel;UNITY.HavokVehicleUtilities.velocityAt(body0,contactPosWorld,vel1);UNITY.HavokVehicleUtilities.velocityAt(body1,contactPosWorld,vel2);vel1.subtractToRef(vel2,vel);var vrel=BABYLON.Vector3.Dot(frictionDirectionWorld,vel);var denom0=UNITY.HavokVehicleUtilities.computeImpulseDenominator(body0,frictionPosWorld,frictionDirectionWorld);var denom1=UNITY.HavokVehicleUtilities.computeImpulseDenominator(body1,frictionPosWorld,frictionDirectionWorld);var relaxation=1;var jacDiagABInv=relaxation/(denom0+denom1);j1=-vrel*jacDiagABInv;if(maxImpulse<j1){j1=maxImpulse}if(j1<-maxImpulse){j1=-maxImpulse}return j1};HavokVehicleUtilities.computeImpulseDenominator=function(body,pos,normal){var r0=UNITY.HavokVehicleUtilities.computeImpulseDenominator_r0;var c0=UNITY.HavokVehicleUtilities.computeImpulseDenominator_c0;var vec=UNITY.HavokVehicleUtilities.computeImpulseDenominator_vec;var m=UNITY.HavokVehicleUtilities.computeImpulseDenominator_m;pos.subtractToRef(UNITY.HavokVehicleUtilities.bodyPosition(body,new BABYLON.Vector3),r0).normalize();BABYLON.Vector3.CrossToRef(r0,normal,c0);UNITY.HavokVehicleUtilities.bodyInertiaWorld(body,new BABYLON.Vector3).multiplyToRef(c0,m);BABYLON.Vector3.CrossToRef(m,r0,vec);return UNITY.HavokVehicleUtilities.bodyInvMass(body)+BABYLON.Vector3.Dot(normal,vec)};HavokVehicleUtilities.resolveSingleBilateral=function(body1,pos1,body2,pos2,normal){var normalLenSqr=normal.lengthSquared();if(normalLenSqr>1.1){return 0}var vel1=UNITY.HavokVehicleUtilities.resolveSingleBilateral_vel1;var vel2=UNITY.HavokVehicleUtilities.resolveSingleBilateral_vel2;var vel=UNITY.HavokVehicleUtilities.resolveSingleBilateral_vel;UNITY.HavokVehicleUtilities.velocityAt(body1,pos1,vel1);UNITY.HavokVehicleUtilities.velocityAt(body2,pos2,vel2);vel1.subtractToRef(vel2,vel);var rel_vel=BABYLON.Vector3.Dot(normal,vel);var contactDamping=0.1;var massTerm=1/(UNITY.HavokVehicleUtilities.bodyInvMass(body1)+UNITY.HavokVehicleUtilities.bodyInvMass(body2));var impulse=-contactDamping*rel_vel*massTerm;return impulse};HavokVehicleUtilities.directions=[new BABYLON.Vector3(1,0,0),new BABYLON.Vector3(0,1,0),new BABYLON.Vector3(0,0,1)];HavokVehicleUtilities.calcRollingFriction_vel1=new BABYLON.Vector3;HavokVehicleUtilities.calcRollingFriction_vel2=new BABYLON.Vector3;HavokVehicleUtilities.calcRollingFriction_vel=new BABYLON.Vector3;HavokVehicleUtilities.updateFriction_surfNormalWS_scaled_proj=new BABYLON.Vector3;HavokVehicleUtilities.updateFriction_axle=[];HavokVehicleUtilities.updateFriction_forwardWS=[];HavokVehicleUtilities.sideFrictionStiffness2=1;HavokVehicleUtilities.castRay_rayvector=new BABYLON.Vector3;HavokVehicleUtilities.castRay_target=new BABYLON.Vector3;HavokVehicleUtilities.torque=new BABYLON.Vector3;HavokVehicleUtilities.tmpVec1=new BABYLON.Vector3;HavokVehicleUtilities.tmpVec2=new BABYLON.Vector3;HavokVehicleUtilities.tmpVec3=new BABYLON.Vector3;HavokVehicleUtilities.tmpVec4=new BABYLON.Vector3;HavokVehicleUtilities.tmpVec5=new BABYLON.Vector3;HavokVehicleUtilities.tmpVec6=new BABYLON.Vector3;HavokVehicleUtilities.tmpVel2=new BABYLON.Vector3;HavokVehicleUtilities.tmpMat1=new BABYLON.Matrix;HavokVehicleUtilities.velocityAt=function(body,pos,res){body.getObjectCenterWorldToRef(UNITY.HavokVehicleUtilities.tmpVel2);pos.subtractToRef(UNITY.HavokVehicleUtilities.tmpVel2,res);body.getAngularVelocityToRef(UNITY.HavokVehicleUtilities.tmpVel2);BABYLON.Vector3.CrossToRef(UNITY.HavokVehicleUtilities.tmpVel2,res,res);body.getLinearVelocityToRef(UNITY.HavokVehicleUtilities.tmpVel2);res.addInPlace(UNITY.HavokVehicleUtilities.tmpVel2);return res};HavokVehicleUtilities.bodyPosition=function(body,res){body.getObjectCenterWorldToRef(res);return res};HavokVehicleUtilities.bodyLinearVelocity=function(body,res){body.getLinearVelocityToRef(res);return res};HavokVehicleUtilities.bodyAngularVelocity=function(body,res){body.getAngularVelocityToRef(res);return res};HavokVehicleUtilities.bodyTransform=function(body,res){res.copyFrom(body.transformNode.getWorldMatrix());return res};HavokVehicleUtilities.addImpulseAt=function(body,impulse,point){body.applyImpulse(impulse,point)};HavokVehicleUtilities.addForceAt=function(body,force,point){body.applyForce(force,point)};HavokVehicleUtilities.bodyOrientation=function(body,res){res.copyFrom(body.transformNode.rotationQuaternion);return res};HavokVehicleUtilities.bodyMass=function(body){return body.getMassProperties().mass};HavokVehicleUtilities.bodyInvMass=function(body){var mass=body.getMassProperties().mass;return mass>0?1.0/mass:0};HavokVehicleUtilities.bodyInertiaWorld=function(body,res){var prop=body.getMassProperties();res.copyFrom(prop.inertia);BABYLON.Vector3.TransformNormalToRef(res,body.transformNode.getWorldMatrix(),res);res.x=res.x>0?1.0/res.x:0;res.y=res.y>0?1.0/res.y:0;res.z=res.z>0?1.0/res.z:0;return res};HavokVehicleUtilities.computeImpulseDenominator_r0=new BABYLON.Vector3;HavokVehicleUtilities.computeImpulseDenominator_c0=new BABYLON.Vector3;HavokVehicleUtilities.computeImpulseDenominator_vec=new BABYLON.Vector3;HavokVehicleUtilities.computeImpulseDenominator_m=new BABYLON.Vector3;HavokVehicleUtilities.bodyPositionVec=new BABYLON.Vector3;HavokVehicleUtilities.bodyInertiaVec=new BABYLON.Vector3;HavokVehicleUtilities.resolveSingleBilateral_vel1=new BABYLON.Vector3;HavokVehicleUtilities.resolveSingleBilateral_vel2=new BABYLON.Vector3;HavokVehicleUtilities.resolveSingleBilateral_vel=new BABYLON.Vector3;HavokVehicleUtilities.chassis_velocity_at_contactPoint=new BABYLON.Vector3;HavokVehicleUtilities.relpos=new BABYLON.Vector3;HavokVehicleUtilities.Utilsdefaults=function(options,defaults){options=options||{};for(var key in defaults){if(!(key in options)){options[key]=defaults[key]}}return options};return HavokVehicleUtilities}());UNITY.HavokVehicleUtilities=HavokVehicleUtilities})(UNITY||(UNITY={}));var UNITY;(function(UNITY){var RaycastVehicle=(function(){function RaycastVehicle(scene,entity,center){this._centerMass=new BABYLON.Vector3(0,0,0);this._chassisMesh=null;this._tempVectorPos=new BABYLON.Vector3(0,0,0);this.lockedWheelIndexes=null;this.m_vehicleColliders=null;this.m_vehicle=null;this.m_scene=null;this._chassisMesh=entity;this._centerMass=center;this.m_vehicleColliders=(this._chassisMesh.metadata!=null&&this._chassisMesh.metadata.unity!=null&&this._chassisMesh.metadata.unity.wheels!=null)?this._chassisMesh.metadata.unity.wheels:null;this.m_vehicle=new UNITY.HavokRaycastVehicle({chassisBody:this._chassisMesh.physicsBody});this.m_scene=scene;this.setupWheelInformation();var physicsEngine=this.m_scene.getPhysicsEngine();if(physicsEngine!=null)this.m_vehicle.addToWorld(physicsEngine)}RaycastVehicle.prototype.getNumWheels=function(){if(this.m_vehicle!=null)return this.m_vehicle.getNumWheels()};RaycastVehicle.prototype.getWheelInfo=function(wheel){if(this.m_vehicle!=null)return this.m_vehicle.getWheelInfo(wheel)};RaycastVehicle.prototype.setEngineForce=function(power,wheel){if(this.m_vehicle!=null)this.m_vehicle.applyEngineForce(-power,wheel)};RaycastVehicle.prototype.setBrakingForce=function(brake,wheel){if(this.m_vehicle!=null)this.m_vehicle.setBrake(brake,wheel)};RaycastVehicle.prototype.getWheelTransform=function(wheel){if(this.m_vehicle!=null)return this.m_vehicle.getWheelTransformWorld(wheel)};RaycastVehicle.prototype.updateWheelTransform=function(wheel){if(this.m_vehicle!=null)this.m_vehicle.updateWheelTransform(wheel)};RaycastVehicle.prototype.getRawCurrentSpeedKph=function(){if(this.m_vehicle!=null)return this.m_vehicle.getCurrentSpeedKmHour()};RaycastVehicle.prototype.getRawCurrentSpeedMph=function(){if(this.m_vehicle!=null)return this.m_vehicle.getCurrentSpeedKmHour()*UNITY.System.Kph2Mph};RaycastVehicle.prototype.getAbsCurrentSpeedKph=function(){if(this.m_vehicle!=null)return Math.abs(this.m_vehicle.getCurrentSpeedKmHour())};RaycastVehicle.prototype.getAbsCurrentSpeedMph=function(){if(this.m_vehicle!=null)return Math.abs(this.m_vehicle.getCurrentSpeedKmHour())*UNITY.System.Kph2Mph};RaycastVehicle.prototype.dispose=function(){this.deleteWheelInformation();this.m_vehicleColliders=null};RaycastVehicle.prototype.getWheelIndexByID=function(id){var result=-1;if(this.m_vehicleColliders!=null&&this.m_vehicleColliders.length>0){for(var index=0;index<this.m_vehicleColliders.length;index++){var wheel=this.m_vehicleColliders[index];if(id.toLowerCase()===wheel.id.toLowerCase()){result=index;break}}}return result};RaycastVehicle.prototype.getWheelIndexByName=function(name){var result=-1;if(this.m_vehicleColliders!=null&&this.m_vehicleColliders.length>0){for(var index=0;index<this.m_vehicleColliders.length;index++){var wheel=this.m_vehicleColliders[index];if(name.toLowerCase()===wheel.name.toLowerCase()){result=index;break}}}return result};RaycastVehicle.prototype.getWheelColliderInfo=function(wheel){var result=-1;if(this.m_vehicleColliders!=null&&this.m_vehicleColliders.length>0&&this.m_vehicleColliders.length>wheel){result=this.m_vehicleColliders[wheel]}return result};RaycastVehicle.prototype.getVisualSteeringAngle=function(wheel){var result=0;var wheelinfo=this.getWheelInfo(wheel);if(wheelinfo!=null&&wheelinfo.steeringAngle!=null){result=wheelinfo.steeringAngle}return result};RaycastVehicle.prototype.setVisualSteeringAngle=function(angle,wheel){var wheelinfo=this.getWheelInfo(wheel);if(wheelinfo!=null){wheelinfo.steeringAngle=angle}};RaycastVehicle.prototype.getPhysicsSteeringAngle=function(wheel){if(this.m_vehicle!=null){return Math.abs(this.m_vehicle.getSteeringValue(wheel))}};RaycastVehicle.prototype.setPhysicsSteeringAngle=function(angle,wheel){if(this.m_vehicle!=null){this.m_vehicle.setSteeringValue(angle,wheel)}};RaycastVehicle.prototype.getStabilizingForce=function(){var result=-1;if(this.m_vehicle!=null&&this.m_vehicle.chassisBody!=null){result=this.m_vehicle.chassisBody.getGravityFactor()}return result};RaycastVehicle.prototype.setStabilizingForce=function(force){if(this.m_vehicle!=null&&this.m_vehicle.chassisBody!=null){this.m_vehicle.chassisBody.setGravityFactor(force)}};RaycastVehicle.prototype.getSmoothFlyingImpulse=function(){var result=-1;if(this.m_vehicle!=null){result=this.m_vehicle.smoothFlyingImpulse}return result};RaycastVehicle.prototype.setSmoothFlyingImpulse=function(impulse){if(this.m_vehicle!=null){this.m_vehicle.smoothFlyingImpulse=impulse}};RaycastVehicle.prototype.setupWheelInformation=function(){if(this.m_vehicle!=null&&this.m_vehicleColliders!=null&&this.m_vehicleColliders.length>0){var index=-1;var defaultFriction=0;var invertDirection=false;var visualTravelRange=0;for(index=0;index<this.m_vehicleColliders.length;index++){var wheel=this.m_vehicleColliders[index];var wheelName=(wheel.name!=null)?wheel.name:"Unknown";var wheelRadius=(wheel.radius!=null)?wheel.radius:0.35;var wheelHalfTrack=(wheel.position!=null&&wheel.position.length>=3)?wheel.position[0]:1;var wheelAxisPosition=(wheel.position!=null&&wheel.position.length>=3)?wheel.position[2]:-1;var wheelConnectionPoint=(wheel.wheelconnectionpoint!=null)?wheel.wheelconnectionpoint:0.5;var suspensionRestLength=(wheel.suspensionrestlength!=null)?wheel.suspensionrestlength:0.3;var isfrontwheel=(wheel.frontwheel!=null)?true:(wheelName.toLowerCase().indexOf("front")>=0);var wheelposition=wheelAxisPosition;var wheeltracking=wheelHalfTrack;var centermassx=-this._centerMass.x;var centermassz=-this._centerMass.z;defaultFriction=(wheel.frictionslip!=null)?wheel.frictionslip:10;var defaultForce=(wheel.totalsuspensionforces!=null)?wheel.totalsuspensionforces:100000;var defaultTravel=(wheel.suspensiontravelcm!=null)?wheel.suspensiontravelcm:100;var defaultRolling=(wheel.rollinfluence!=null)?wheel.rollinfluence:0.2;var suspensionStiffness=(wheel.suspensionstiffness!=null)?wheel.suspensionstiffness:50;var suspensionCompression=(wheel.dampingcompression!=null)?wheel.dampingcompression:2.5;var suspensionDamping=(wheel.dampingrelaxation!=null)?wheel.dampingrelaxation:4.5;var localWheelPosition=new BABYLON.Vector3((wheeltracking+centermassx),wheelConnectionPoint,(wheelposition+centermassz));visualTravelRange=(wheel.maxVisualTravelRange!=null)?wheel.maxVisualTravelRange:0;invertDirection=(wheel.invertWheelDirection!=null)?wheel.invertWheelDirection:false;this.m_vehicle.addWheel({radius:wheelRadius,isFrontWheel:isfrontwheel,directionLocal:new BABYLON.Vector3(0,-1,0),suspensionStiffness:suspensionStiffness,suspensionRestLength:suspensionRestLength,frictionSlip:defaultFriction,dampingRelaxation:suspensionDamping,dampingCompression:suspensionCompression,maxSuspensionForce:defaultForce,rollInfluence:defaultRolling,axleLocal:new BABYLON.Vector3(-1,0,0),chassisConnectionPointLocal:localWheelPosition,maxSuspensionTravel:defaultTravel,steeringAngle:0,rotationBoost:0,defaultFriction:defaultFriction,invertDirection:invertDirection,visualTravelRange:visualTravelRange})}}};RaycastVehicle.prototype.tickVehicleController=function(step){if(this.m_vehicle!=null)this.m_vehicle.updateVehicle(step)};RaycastVehicle.prototype.updateWheelInformation=function(){var speed=this.m_vehicle.getCurrentSpeedKmHour();var wheels=this.getNumWheels();if(wheels>0){for(var index=0;index<wheels;index++){var wheelinfo=this.getWheelInfo(index);if(wheelinfo!=null){wheelinfo.locked=this.lockedWheelInformation(index);this.updateWheelTransform(index);var worldTransformNode=this.getWheelTransform(index);if(worldTransformNode!=null)this._tempVectorPos.copyFrom(worldTransformNode.position);if(wheelinfo.hub!=null){var wheelhub=wheelinfo.hub;if(wheelhub.parent!=null){UNITY.Utilities.InverseTransformPointToRef(wheelhub.parent,this._tempVectorPos,this._tempVectorPos);wheelhub.position.y=this._tempVectorPos.y;if(wheelinfo.visualTravelRange>0)wheelhub.position.y=BABYLON.Scalar.Clamp(wheelhub.position.y,-Math.abs(wheelinfo.visualTravelRange),Math.abs(wheelinfo.visualTravelRange));var steeringAngle=(wheelinfo.steeringAngle!=null)?wheelinfo.steeringAngle:0;BABYLON.Quaternion.FromEulerAnglesToRef(0,steeringAngle,0,wheelhub.rotationQuaternion);if(wheelinfo.spinner!=null){if(wheelinfo.locked===false){var deltaTime=(this.m_scene.getEngine().getDeltaTime()/1000);var distance=(speed*deltaTime);var circumference=(2*Math.PI*wheelinfo.radius);var rotationDegrees=((distance/circumference)*360);var rotationBoost=(wheelinfo.rotationBoost!=null)?wheelinfo.rotationBoost:0;var wheelRotation=BABYLON.Tools.ToRadians(rotationDegrees)+(rotationBoost*Math.sign(speed));if(wheelinfo.invertDirection===true){wheelinfo.spinner.addRotation(-wheelRotation,0,0)}else{wheelinfo.spinner.addRotation(wheelRotation,0,0)}}}}}}}}};RaycastVehicle.prototype.lockedWheelInformation=function(wheel){var result=false;if(this.lockedWheelIndexes!=null&&this.lockedWheelIndexes.length>0){for(var index=0;index<this.lockedWheelIndexes.length;index++){if(this.lockedWheelIndexes[index]===wheel){result=true;break}}}return result};RaycastVehicle.prototype.deleteWheelInformation=function(){var wheels=this.getNumWheels();if(wheels>0){for(var index=0;index<wheels;index++){var info=this.getWheelInfo(index);if(info!=null){info.hub=null;info.spinner=null;info.steeringAngle=0;info.rotationBoost=0;info.defaultFriction=0}}}};return RaycastVehicle}());UNITY.RaycastVehicle=RaycastVehicle})(UNITY||(UNITY={}))

