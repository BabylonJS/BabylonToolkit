{
    "Babylon Playground App (TS)": {
        "prefix": "babylonPlaygroundApp",
        "scope": "typescript",
        "body": [
            "/// Main Playground Class: ${1:NAMESPACE}.${2:MAINCLASS}",
            "var createEngine = function()",
            "{",
            "    // This initializes the engine with antialias and device hardware scaling enabled",
            "    return new BABYLON.Engine(canvas, true, { adaptToDeviceRatio: true });",
            "}",
            "class Playground",
            "{",
            "    public static async CreateScene(engine: BABYLON.Engine, canvas: HTMLCanvasElement): Promise<BABYLON.Scene>",
            "    {",
            "        // This creates a basic babylon scene object (non-mesh)",
            "        var scene = new BABYLON.Scene(engine);",
            "",
            "        // This initializes the playground runtime libs (non-mesh)",
            "        await BABYLON.Toolkit.SceneManager.InitializePlayground(engine);",
            "",
            "        // This enables game engine style user input (non-mesh)",
            "        // BABYLON.Toolkit.InputController.ConfigureUserInput(engine, scene);",
            "",
            "        // This enables the havok physics engine (non-mesh)",
            "        // globalThis.HKP = new BABYLON.HavokPlugin();",
            "        // scene.enablePhysics(new BABYLON.Vector3(0,-9.81,0), globalThis.HKP);",
            "",
            "        // This creates and positions a debug camera (non-mesh)",
            "        var camera = new BABYLON.FreeCamera(\"camera1\", new BABYLON.Vector3(0, 5, -10), scene);",
            "        camera.setTarget(BABYLON.Vector3.Zero());",
            "        camera.attachControl(canvas, true);",
            "",
            "        // This creates ambient light, aiming 0,1,0 - to the sky (non-mesh)",
            "        var light = new BABYLON.HemisphericLight(\"light1\", new BABYLON.Vector3(0, 1, 0), scene);",
            "        light.intensity = 0.8;",
            "",
            "        // This creates the default ground shape",
            "        var ground = BABYLON.MeshBuilder.CreateGround(\"ground1\", {width: 6, height: 6}, scene);",
            "",
            "        // This creates a cube mesh box shape",
            "        var cube = BABYLON.MeshBuilder.CreateBox(\"cube1\", {size: 2}, scene);",
            "",
            "        // This creates the main script component",
            "        var main = new ${1:NAMESPACE}.${2:MAINCLASS}(new BABYLON.TransformNode(\"${2:MAINCLASS}\", scene), scene);",
            "",
            "        return scene;",
            "    }",
            "}",
            "module ${1:NAMESPACE}",
            "{",
            "    export class ${2:MAINCLASS} extends BABYLON.Toolkit.ScriptComponent",
            "    {",
            "        constructor(transform:BABYLON.TransformNode, scene:BABYLON.Scene, properties:any=null) {",
            "            super(transform, scene, properties, \"${1:NAMESPACE}.${2:MAINCLASS}\");",
            "        }",
            "",
            "        protected awake():void {",
            "            /* Init component function */",
            "        }",
            "",
            "        protected start():void {",
            "            /* Start component function */",
            "        }",
            "",
            "        protected ready():void {",
            "            /* Execute when ready function */",
            "        }",
            "",
            "        protected update():void {",
            "            /* Update render loop function */",
            "        }",
            "",
            "        protected late():void {",
            "            /* Late update render loop function */",
            "        }",
            "",
            "        protected step():void {",
            "            /* Before physics step function (remove empty function for performance) */",
            "        }",
            "",
            "        protected fixed():void {",
            "            /* After physics step function (remove empty function for performance) */",
            "        }",
            "",
            "        protected after():void {",
            "            /* After update render loop function */",
            "        }",
            "",
            "        protected reset():void {",
            "            /* Reset component function */",
            "        }",
            "",
            "        protected destroy():void {",
            "            /* Destroy component function */",
            "        }",
            "    }",
            "}"
        ],
        "description": "Playground App"
    }
}